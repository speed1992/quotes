{"version":3,"file":"static/js/2188.22aa89ff.chunk.js","mappings":"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","sources":["components/desktop-header/desktop-header.jsx","components/desktop-header/utils/utils.js","components/select/select.js","components/wordLengthSearch/wordLengthSearch.js"],"sourcesContent":["import Switch from '@mui/material/Switch';\nimport TextField from '@mui/material/TextField';\nimport React from \"react\";\nimport { currentPhilosopher } from \"../../common/utils/staticDataUtils\";\nimport OPTIONS from \"../../static/philosophers-data\";\nimport Select from \"../select/select\";\nimport { WordLengthSearch } from \"../wordLengthSearch/wordLengthSearch\";\nimport { onPhilosopherSelectChange } from './utils/utils';\n\nfunction DesktopHeader({ listRef, setSearchText, searchText, setTriggerChange, triggerChange, start, end, setStart, setEnd, setIsFetching, translateKey, setTranslateKey }) {\n    const propsToSend = { start, end, setStart, setEnd, setSearchText }\n    return (\n        <div className=\"header\">\n            <div className=\"row\">\n                <div className=\"column\">\n                    <WordLengthSearch listRef={listRef} setTriggerChange={setTriggerChange} triggerChange={triggerChange}\n                        {...propsToSend}\n                    />\n                </div>\n                <div className=\"column\">\n                    <TextField className=\"wordSearch\" id=\"outlined-search\" label=\"Search\" type=\"search\" size=\"small\" value={searchText} onChange={({ target: { value } }) => setSearchText(value)} />\n                </div>\n                <div className=\"column\">\n                    <Select\n                        options={OPTIONS}\n                        defaultOption={currentPhilosopher}\n                        onChangeHandler={(_, { value: philosopher }) => onPhilosopherSelectChange({ philosopher, triggerChange, listRef, setTriggerChange, setIsFetching, setStart, setEnd, setSearchText })}\n                    />\n                </div>\n                <div className=\"column\">\n                    <span className='vertically'>Translate</span>\n                    <Switch checked={translateKey} onChange={({ target: { checked } }) => {\n                        setTranslateKey(checked)\n                        setTriggerChange(!triggerChange);\n                    }} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DesktopHeader;","import { setCurrentPhilosopher } from \"../../../common/utils/staticDataUtils\";\nimport { scrollToMemorizedRow } from \"../../../common/utils/utils\";\nimport { lazyLoadAllAssets, lazyLoadAsset } from \"../../../static/utils/utils\";\nimport { changeQuotesData } from \"../../quotes-list/utils/utils\";\n\nexport function onPhilosopherSelectChange({ philosopher, triggerChange, listRef, setTriggerChange, setIsFetching, setStart, setEnd, setSearchText }) {\n    function callback() {\n        setCurrentPhilosopher(philosopher);\n        changeQuotesData(philosopher);\n        setTriggerChange(!triggerChange);\n        scrollToMemorizedRow(listRef);\n        setIsFetching(false);\n    }\n    setStart(1);\n    setEnd(\"\");\n    setSearchText('');\n    setIsFetching(true);\n\n    if (philosopher.trim().toLowerCase() === \"all\")\n        lazyLoadAllAssets().then(callback);\n\n    else\n        lazyLoadAsset(philosopher).then(callback);\n}","import { Autocomplete, TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { currentPhilosopher } from \"../../common/utils/staticDataUtils\";\nimport { getPhilosopherObjectIndex } from \"../../static/utils/utils\";\nimport \"./select.css\";\n\nconst Select = ({ options, onChangeHandler, isMobile }) => {\n    const renderSelect = () => {\n        if (isMobile) {\n            return (\n                <select className=\"dropDown\" onChange={onChangeHandler} value={currentPhilosopher}>\n                    {options && options.map(({ id, fullName, value }) => <option key={id} value={value}>{fullName}</option>)}\n                </select>\n            )\n        }\n        else {\n            return (\n                currentPhilosopher !== undefined && (\n                    <Autocomplete\n                        disableClearable\n                        onChange={onChangeHandler}\n                        getOptionLabel={(option) => option.fullName}\n                        value={options[getPhilosopherObjectIndex(currentPhilosopher)]}\n                        options={options}\n                        size=\"small\"\n                        sx={{ width: 210 }}\n                        renderInput={(params) => <TextField {...params} label=\"Philosopher\" />}\n                        ListboxProps={{ style: { maxHeight: '80vh' }, position: \"bottom-start\" }}\n                    />\n                )\n            )\n\n        }\n    }\n\n    return (renderSelect())\n}\n\nexport default Select","import { TextField } from \"@mui/material\";\nimport React from \"react\";\nimport \"./wordLengthSearch.css\";\n\nexport function WordLengthSearch({ start, end, setStart, setEnd, setSearchText, isMobile }) {\n    const renderComponent = () => {\n        if (isMobile) {\n            return (\n                <> <input className=\"smallInput\" name=\"start\" type=\"number\" min=\"1\" value={start} onChange={({ target: { value } }) => setStart(value)} />{` to `} <input className=\"smallInput\" name=\"end\" type=\"number\" min=\"0\" value={end} onChange={({ target: { value } }) => setEnd(value)} />\n                </>\n\n            )\n        }\n        else {\n            return (\n                <>\n                    <TextField className=\"smallInput\" id=\"outlined-number\" label=\"Start\" type=\"number\" size=\"small\" name=\"start\" min=\"1\" value={start} onChange={({ target: { value } }) => setStart(value)} />\n                    <span className=\"to\">{` to `}</span>\n                    <TextField className=\"smallInput\" id=\"outlined-number\" label=\"End\" type=\"number\" size=\"small\" name=\"end\" min=\"0\" value={end} onChange={({ target: { value } }) => setEnd(value)} />\n                </>\n            )\n        }\n    }\n    return (\n        renderComponent()\n    )\n}"],"names":["listRef","setSearchText","searchText","setTriggerChange","triggerChange","start","end","setStart","setEnd","setIsFetching","translateKey","setTranslateKey","propsToSend","className","id","label","type","size","value","onChange","target","options","OPTIONS","defaultOption","currentPhilosopher","onChangeHandler","_","philosopher","onPhilosopherSelectChange","checked","callback","setCurrentPhilosopher","changeQuotesData","scrollToMemorizedRow","trim","toLowerCase","lazyLoadAllAssets","then","lazyLoadAsset","isMobile","map","fullName","undefined","Autocomplete","disableClearable","getOptionLabel","option","getPhilosopherObjectIndex","sx","width","renderInput","params","TextField","ListboxProps","style","maxHeight","position","WordLengthSearch","name","min"],"sourceRoot":""}