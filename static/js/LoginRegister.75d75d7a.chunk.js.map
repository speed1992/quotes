{"version":3,"file":"static/js/LoginRegister.75d75d7a.chunk.js","mappings":"qJACA,SAAgB,UAAY,kCAAkC,QAAU,iC,aCGxE,MA+BA,EA/BsBA,IAAqG,IAApG,YAAEC,EAAW,WAAEC,EAAU,cAAEC,EAAa,aAAEC,EAAY,SAAEC,EAAQ,YAAEC,EAAW,cAAEC,GAAeP,EACjH,MAAM,SAAEQ,IAAaC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,mBAC5CC,GAA8B,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUK,OAAO,GAAGC,eAAgBN,EAASO,MAAM,GAE/E,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACMhB,GAcEiB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOb,SAASU,SAAA,CAAC,MAAIN,EAAoB,QACzDI,EAAAA,EAAAA,KAAA,UAAQI,UAAWC,EAAOC,QAASC,QAASA,IAAMpB,GAAc,GAAOe,SAAC,eAf5EC,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,CAAE,YAEEF,EAAAA,EAAAA,KAAA,SAAOQ,KAAK,OAAOJ,UAAWC,EAAOI,UAAWC,SAAWC,GAAM1B,EAAY0B,EAAEC,OAAOC,OAAQA,MAAOrB,IAAY,YAEjHQ,EAAAA,EAAAA,KAAA,SAAOQ,KAAK,WAAWJ,UAAWC,EAAOI,UAAWC,SAAWC,GAAMrB,EAAYqB,EAAEC,OAAOC,OAAQA,MAAOxB,KACzGW,EAAAA,EAAAA,KAAA,UAAQI,UAAWC,EAAOC,QAASC,QAASA,KAAMO,EAAAA,EAAAA,IAAc,CAAEC,YAAa,QAASvB,WAAUH,WAAUF,gBAAeC,eAAcG,kBAAiBW,SAAC,WAG3JF,EAAAA,EAAAA,KAAA,UAAQI,UAAWC,EAAOC,QAASC,QAASA,KAAMO,EAAAA,EAAAA,IAAc,CAAEC,YAAa,WAAYvB,WAAUH,WAAUF,gBAAeC,eAAcG,kBAAiBW,SAAC,iBAYvK,C","sources":["webpack://quotes/./src/components/organisms/home/mobile/login-register/login-register.module.css?8f54","components/organisms/home/mobile/login-register/login-register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userInput\":\"login-register_userInput__k0w6f\",\"menuBtn\":\"login-register_menuBtn__N9yZc\"};","import { useSelector } from 'react-redux'\r\nimport { loginRegister } from '../mobile-menu/utils/utils'\r\nimport styles from './login-register.module.css'\r\n\r\nconst LoginRegister = ({ setUserName, isLoggedIn, setIsLoggedIn, openSnackbar, password, setPassword, setIsFetching }) => {\r\n    const { userName } = useSelector((state) => state.philosophersData)\r\n    const capitalizedUserName = userName?.charAt(0).toUpperCase() + userName.slice(1)\r\n\r\n    return (\r\n        <>\r\n            {!isLoggedIn ? (\r\n                <>\r\n                    Username\r\n                    <input type=\"text\" className={styles.userInput} onChange={(e) => setUserName(e.target.value)} value={userName} />\r\n                    Password\r\n                    <input type=\"password\" className={styles.userInput} onChange={(e) => setPassword(e.target.value)} value={password} />\r\n                    <button className={styles.menuBtn} onClick={() => loginRegister({ apiCallType: 'login', userName, password, setIsLoggedIn, openSnackbar, setIsFetching })}>\r\n                        Login\r\n                    </button>\r\n                    <button className={styles.menuBtn} onClick={() => loginRegister({ apiCallType: 'register', userName, password, setIsLoggedIn, openSnackbar, setIsFetching })}>\r\n                        Register\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <div>\r\n                    <div className={styles.userName}>Hi {capitalizedUserName}!</div>\r\n                    <button className={styles.menuBtn} onClick={() => setIsLoggedIn(false)}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginRegister\r\n"],"names":["_ref","setUserName","isLoggedIn","setIsLoggedIn","openSnackbar","password","setPassword","setIsFetching","userName","useSelector","state","philosophersData","capitalizedUserName","charAt","toUpperCase","slice","_jsx","_Fragment","children","_jsxs","className","styles","menuBtn","onClick","type","userInput","onChange","e","target","value","loginRegister","apiCallType"],"sourceRoot":""}