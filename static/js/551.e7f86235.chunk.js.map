{"version":3,"file":"static/js/551.e7f86235.chunk.js","mappings":"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","sources":["common/utils/commonUtils.js","components/organisms/analysis/generate-quote-image/utils/utils.js","components/organisms/analysis/generate-quote-image/utils/hooks.js","components/organisms/analysis/generate-quote-image/generateQuoteImage.js","components/organisms/home/home-page/utils/utils.js","components/organisms/home/mobile/mobile-menu/utils/utils.js","common/static/assets/images/philosophers|sync|/^/.*$"],"sourcesContent":["export const isUndefined = (value) => typeof value === 'undefined'\r\nexport const isObjEmpty = (obj) => Object.values(obj).length === 0 && obj.constructor === Object\r\n\r\nexport function uuidv4() {\r\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) => (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16))\r\n}\r\n","import html2canvas from 'html2canvas'\r\n\r\nconst downloadImage = (blob, fileName) => {\r\n    const fakeLink = window.document.createElement('a')\r\n    fakeLink.style = 'display:none;'\r\n    fakeLink.download = fileName\r\n\r\n    fakeLink.href = blob\r\n\r\n    document.body.appendChild(fakeLink)\r\n    fakeLink.click()\r\n    document.body.removeChild(fakeLink)\r\n\r\n    fakeLink.remove()\r\n}\r\n\r\nexport const exportAsImage = async (element, imageFileName) => {\r\n    const html = document.getElementsByTagName('html')[0]\r\n    const body = document.getElementsByTagName('body')[0]\r\n    let htmlWidth = html.clientWidth\r\n    let bodyWidth = body.clientWidth\r\n    const newWidth = element.scrollWidth - element.clientWidth\r\n    if (newWidth > element.clientWidth) {\r\n        htmlWidth += newWidth\r\n        bodyWidth += newWidth\r\n    }\r\n    html.style.width = htmlWidth + 'px'\r\n    body.style.width = bodyWidth + 'px'\r\n    const canvas = await html2canvas(element, { scale: 3 })\r\n    const image = canvas.toDataURL('image/png', 1.0)\r\n    downloadImage(image, imageFileName)\r\n    html.style.width = null\r\n    body.style.width = null\r\n}\r\n\r\nexport const shareQuote = async (element, imageFileName) => {\r\n    ;(async () => {\r\n        if (!('share' in navigator)) {\r\n            return\r\n        }\r\n        const canvas = await html2canvas(element, { scale: 3 })\r\n        canvas.toBlob(async (blob) => {\r\n            const files = [new File([blob], imageFileName, { type: blob.type })]\r\n            const shareData = {\r\n                files,\r\n            }\r\n            if (navigator.canShare(shareData)) {\r\n                try {\r\n                    await navigator.share(shareData)\r\n                } catch (err) {\r\n                    if (err.name !== 'AbortError') {\r\n                        console.error(err.name, err.message)\r\n                    }\r\n                }\r\n            } else {\r\n                console.warn('Sharing not supported', shareData)\r\n            }\r\n        })\r\n    })()\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setCurrentModalName } from '../../../../../common/components/modal/modalRedux'\r\nimport { uuidv4 } from '../../../../../common/utils/commonUtils'\r\nimport { setThemeClassNameOnHTMLTag } from '../../../home/home-page/utils/utils'\r\nimport { exportAsImage, shareQuote } from './utils'\r\n\r\nexport function useCreateQuoteImage(philosopherFullName, share, exportRef, darkMode) {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        setThemeClassNameOnHTMLTag(true)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        ;(async function () {\r\n            const filename = `${philosopherFullName}-quote-${uuidv4()}.png`\r\n            if (share !== undefined && share === true) {\r\n                await shareQuote(exportRef.current, filename)\r\n            } else {\r\n                await exportAsImage(exportRef.current, filename)\r\n            }\r\n            if (!darkMode) setThemeClassNameOnHTMLTag(false)\r\n            dispatch(setCurrentModalName(''))\r\n        })()\r\n    }, [exportRef, philosopherFullName, share])\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\r\nimport { useCreateQuoteImage } from './utils/hooks'\r\nconst QuoteWithImage = React.lazy(() => retryTenTimes(() => import('../quote-with-image/quote-with-image')))\r\nconst QuoteWithoutImage = React.lazy(() => retryTenTimes(() => import('../quote-without-image/quote-without-image')))\r\n\r\nconst GenerateQuoteImage = () => {\r\n    let { quotationText, philosopherFullName, signature, share = false } = useSelector((state) => state.quoteImage)\r\n    const exportRef = useRef()\r\n    const currentPhilosopher = useSelector((state) => state.philosophersData.currentPhilosopher)\r\n    const darkMode = useSelector((state) => state.philosophersData.darkMode)\r\n\r\n    const propsToSend = { exportRef, quotationText, philosopherFullName, signature }\r\n\r\n    useCreateQuoteImage(philosopherFullName, share, exportRef, darkMode)\r\n\r\n    try {\r\n        const imageName = `${currentPhilosopher}.jpg`\r\n        require('../../../../common/static/assets/images/philosophers/' + imageName)\r\n        return <QuoteWithImage {...propsToSend} imageName={imageName} />\r\n    } catch (error) {\r\n        return <QuoteWithoutImage {...propsToSend} />\r\n    }\r\n}\r\n\r\nexport default GenerateQuoteImage\r\n","import { getPhilosopherData } from '../../../../../common/static/utils/utils'\r\nimport { getUserDetails, getUserMarkedQuotesCount, sendUserDetails } from '../../mobile/mobile-menu/utils/utils'\r\n\r\nexport const setThemeClassNameOnHTMLTag = (value) => {\r\n    let root = document.getElementsByTagName('html')[0]\r\n    root.className = ''\r\n    if (value) {\r\n        root.classList.add('darkTheme')\r\n    } else {\r\n        root.classList.add('lightTheme')\r\n    }\r\n}\r\n\r\nexport const bringIntoOriginalOrder = (originalOptions, newOptions) => originalOptions.map((item) => getPhilosopherData({ philosopher: item.value, options: newOptions })).reverse()\r\n\r\nexport const bringIntoAlphabeticalOrder = (options) => [...options].sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n\r\nexport async function compareWithServerSyncDatesAndMakeAnAPICall(userName, markedQuotes, openSnackbar, setMarkedQuotes, setRestoreQuotesFromServerCachedDate, markedQuoteClientCount) {\r\n    const markedQuotesFromServerCount = await getUserMarkedQuotesCount({ userName })\r\n    if (markedQuotesFromServerCount) {\r\n        if (markedQuotesFromServerCount > markedQuoteClientCount) {\r\n            let { markedQuotesFromServer } = await getUserDetails({ userName, openSnackbar })\r\n            setMarkedQuotes(markedQuotesFromServer)\r\n            openSnackbar('Auto-Sync : Restored all marked quotes!', 4000)\r\n        } else if (markedQuoteClientCount > markedQuotesFromServerCount) {\r\n            await sendUserDetails({ userName, markedQuotes, openSnackbar })\r\n            // openSnackbar('Auto-Sync : Synced marked quotes with server database!', 4000)\r\n        }\r\n        setRestoreQuotesFromServerCachedDate(Date.now())\r\n    }\r\n}\r\n","import { API_ENDPOINTS } from '../../../../../../common/apis/apiEndpoints'\r\nimport { retryTenTimes } from '../../../../../../common/utils/apiUtils'\r\n\r\nexport const sendUserDetails = async ({ userName, markedQuotes, openSnackbar, setSyncDate }) => {\r\n    await retryTenTimes(async () => {\r\n        return await fetch(API_ENDPOINTS.MARKED_QUOTES.BACKUP, {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                userName,\r\n                markedQuotes,\r\n                dateSynced: Date.now(),\r\n            }),\r\n        })\r\n    })\r\n}\r\n\r\nexport const getUserDetails = async ({ userName, openSnackbar }) => {\r\n    let response = await retryTenTimes(\r\n        async () =>\r\n            await fetch(API_ENDPOINTS.MARKED_QUOTES.RESTORE, {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    userName,\r\n                }),\r\n            })\r\n    )\r\n\r\n    response = await response.json()\r\n    if (response?.ok) {\r\n        try {\r\n            const markedQuotesFromServer = response?.results?.[0]?.markedQuotes\r\n            const markedQuotesFromServerCount = Object.values(markedQuotesFromServer).flat().length\r\n            if (markedQuotesFromServer && markedQuotesFromServerCount > 0) {\r\n                return { markedQuotesFromServer, dateFromServer: response?.results?.[0]?.dateSynced }\r\n                // setMarkedQuotes(response?.results?.[0]?.markedQuotes)\r\n            }\r\n        } catch (error) {\r\n            openSnackbar(JSON.stringify(error))\r\n        }\r\n    } else {\r\n        openSnackbar(JSON.stringify(response.error))\r\n    }\r\n}\r\n\r\nexport const getUserMarkedQuotesCount = async ({ userName }) => {\r\n    let response = await retryTenTimes(\r\n        async () =>\r\n            await fetch(API_ENDPOINTS.MARKED_QUOTES.GET_COUNT, {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    userName,\r\n                }),\r\n            })\r\n    )\r\n\r\n    response = await response.json()\r\n    if (response?.ok) {\r\n        return response?.count\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport const loginRegister = async ({ apiCallType, userName, password, setIsLoggedIn, openSnackbar, setIsFetching }) => {\r\n    const capitalizedUserName = userName.charAt(0).toUpperCase() + userName.slice(1)\r\n    let response\r\n    setIsFetching(true)\r\n    if (apiCallType === 'login') {\r\n        response = await retryTenTimes(\r\n            async () =>\r\n                await fetch(API_ENDPOINTS.USER.LOGIN, {\r\n                    method: 'post',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        userName,\r\n                        password,\r\n                    }),\r\n                })\r\n        )\r\n    } else {\r\n        response = await retryTenTimes(\r\n            async () =>\r\n                await fetch(API_ENDPOINTS.USER.CREATE, {\r\n                    method: 'post',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        userName,\r\n                        password,\r\n                    }),\r\n                })\r\n        )\r\n    }\r\n\r\n    response = await response.json()\r\n    setIsFetching(false)\r\n\r\n    if (response?.ok) {\r\n        setIsLoggedIn(true)\r\n        openSnackbar(capitalizedUserName + ' ' + JSON.stringify(response.serverResponse))\r\n    } else {\r\n        openSnackbar(JSON.stringify(response.error))\r\n    }\r\n}\r\n","var map = {\n\t\"./BEAUVOIR.jpg\": 9073,\n\t\"./BUKOWSKI.jpg\": 3792,\n\t\"./CARL_JUNG.jpg\": 2063,\n\t\"./FREUD.jpg\": 7393,\n\t\"./MARK_TWAIN.jpg\": 5244,\n\t\"./OSHO.jpg\": 6530,\n\t\"./PETERSON.jpg\": 4500,\n\t\"./RICKY_GERVAIS.png\": 8101,\n\t\"./ROUSSEAU.jpg\": 6961\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2892;"],"names":["isUndefined","value","isObjEmpty","obj","Object","values","length","constructor","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","exportAsImage","async","element","imageFileName","html","document","getElementsByTagName","body","htmlWidth","clientWidth","bodyWidth","newWidth","scrollWidth","style","width","downloadImage","blob","fileName","fakeLink","window","createElement","download","href","appendChild","click","removeChild","remove","html2canvas","scale","toDataURL","useCreateQuoteImage","philosopherFullName","share","exportRef","darkMode","dispatch","useDispatch","useEffect","setThemeClassNameOnHTMLTag","filename","concat","undefined","navigator","toBlob","shareData","files","File","type","canShare","err","name","console","error","message","warn","shareQuote","current","setCurrentModalName","QuoteWithImage","React","retryTenTimes","QuoteWithoutImage","GenerateQuoteImage","quotationText","signature","useSelector","state","quoteImage","useRef","currentPhilosopher","philosophersData","propsToSend","imageName","require","_jsx","root","className","classList","add","bringIntoOriginalOrder","originalOptions","newOptions","map","item","getPhilosopherData","philosopher","options","reverse","bringIntoAlphabeticalOrder","sort","a","b","fullName","localeCompare","compareWithServerSyncDatesAndMakeAnAPICall","userName","markedQuotes","openSnackbar","setMarkedQuotes","setRestoreQuotesFromServerCachedDate","markedQuoteClientCount","markedQuotesFromServerCount","getUserMarkedQuotesCount","markedQuotesFromServer","getUserDetails","sendUserDetails","Date","now","setSyncDate","_ref","fetch","API_ENDPOINTS","MARKED_QUOTES","BACKUP","method","headers","JSON","stringify","dateSynced","_response","_ref2","response","RESTORE","json","ok","_response2","_response2$results","_response2$results$","results","flat","_response3","_response3$results","_response3$results$","dateFromServer","_response4","_ref3","GET_COUNT","_response5","count","loginRegister","_response6","apiCallType","password","setIsLoggedIn","setIsFetching","_ref4","capitalizedUserName","charAt","toUpperCase","slice","USER","LOGIN","CREATE","serverResponse","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","exports"],"sourceRoot":""}