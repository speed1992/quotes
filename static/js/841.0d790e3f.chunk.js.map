{"version":3,"file":"static/js/841.0d790e3f.chunk.js","mappings":"wMAAO,SAASA,EAAT,GAA6D,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,OACrD,OAAOC,MAAM,gDAAiD,CAC1DC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,EAAGP,EAAWQ,OAAQV,EAAMW,OAAQV,EAAIW,OAAQ,OAAQC,QAAS,KACxFC,QAAS,CAAE,eAAgB,oBAC3BX,OAAAA,IACDY,OAAM,SAACC,OCHP,SAASC,EAAT,GAAkD,IAAD,OAAvBf,EAAuB,EAAvBA,UAAWF,EAAY,EAAZA,KAAMC,EAAM,EAANA,GAE9C,GAAkDiB,EAAAA,EAAAA,UAAS,IAA3D,eAAOC,EAAP,KAA0BC,EAA1B,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,IAAIC,gBACjBpB,EAASmB,EAAWnB,OAS1B,OAPgBJ,EAAkByB,KAAK,EAAM,CAAEtB,UAAAA,EAAWF,KAAAA,EAAMC,GAAAA,EAAIE,OAAAA,GAEpEsB,GACKC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,gBAAGG,EAAH,EAAGA,eAAH,OAAwBT,EAAqBS,MAClDd,OAAM,SAACC,OAEJ,WACJM,EAAWQ,QACXV,EAAqB,OAI1B,CAAClB,EAAWF,EAAMC,IAEdkB,E,aCDX,EApBkB,SAAC,GAAiJ,IAA/IjB,EAA8I,EAA9IA,UAA8I,IAAnIF,KAAAA,OAAmI,MAA5H,KAA4H,MAAtHC,GAAAA,OAAsH,MAAjH,KAAiH,EAA3G8B,EAA2G,EAA3GA,aAAcC,EAA6F,EAA7FA,WAAYC,EAAiF,EAAjFA,MAAOC,EAA0E,EAA1EA,IAA0BC,GAAgD,EAArEC,oBAAqE,EAAhDD,OAAOE,EAAyC,EAAzCA,yBAA0BC,EAAe,EAAfA,SAC1InB,EAAoBF,EAAe,CAAEf,UAAAA,EAAWF,KAAAA,EAAMC,GAAAA,IACtDsC,EAAyCF,EAAyBpC,GAExE,MAA6B,KAAtBkB,QAAkDqB,IAAtBrB,GAAmCA,GAClE,iCACI,iBAAiBsB,QAASC,EAAAA,GAAAA,K,UAA2B,CAAEX,aAAAA,EAAcC,WAAAA,EAAYC,MAAAA,EAAOC,IAAAA,EAAKS,MAAOxB,EAAmBiB,oBAAqBG,EAAwCJ,MAAAA,IAApL,UACKhB,EADL,WAC2BoB,IADjBJ,IAGV,0BACI,mBAAQS,MAAO,CAAEC,UAAW,QAA5B,UACI,SAAC,KAAD,CAAM5C,GAAI6C,EAAAA,EAAAA,MAAAA,MAAoBC,MAAO,CAAEC,cAAe7B,EAAmBiB,oBAAqBG,EAAwCU,UAAW,mFAA8BL,MAAO,CAAEM,eAAgB,OAAQC,MAAOb,EAAW,OAAS,OAAQO,UAAW,QAA9P,yCAMZ","sources":["components/organisms/tools/translate/utils/utils.js","components/organisms/tools/translate/custom-hooks/custom-hooks.js","components/organisms/tools/translate/translate.js"],"sourcesContent":["export function hitTranslationAPI({ from, to, inputText, signal }) {\r\n    return fetch(\"https://translate.argosopentech.com/translate\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ q: inputText, source: from, target: to, format: \"text\", api_key: \"\" }),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        signal\r\n    }).catch((e) => { })\r\n}","import { useEffect, useState } from \"react\";\r\nimport { hitTranslationAPI } from \"../utils/utils\";\r\n\r\nexport function useTranslation({ inputText, from, to }) {\r\n\r\n    const [translationOutput, setTranslationOutput] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const controller = new AbortController()\r\n        const signal = controller.signal\r\n\r\n        const wrapped = hitTranslationAPI.bind(this, { inputText, from, to, signal });\r\n\r\n        wrapped()\r\n            .then(response => response.json())\r\n            .then(({ translatedText }) => setTranslationOutput(translatedText))\r\n            .catch((e) => { });\r\n\r\n        return (() => {\r\n            controller.abort();\r\n            setTranslationOutput(\"\")\r\n        })\r\n\r\n\r\n    }, [inputText, from, to])\r\n\r\n    return translationOutput;\r\n}","import { Link } from 'react-router-dom'\r\nimport ROUTES from '../../../../common/routes/routes'\r\nimport { rowClickHandler } from '../../home/row/utils/utils'\r\nimport { useTranslation } from './custom-hooks/custom-hooks'\r\n\r\nconst Translate = ({ inputText, from = 'en', to = 'hi', openSnackbar, searchText, start, end, philosopherFullName, index, philosopherFullName_i10n, darkMode }) => {\r\n    const translationOutput = useTranslation({ inputText, from, to })\r\n    const philosopherFullnameIn_SelectedLanguage = philosopherFullName_i10n[to]\r\n\r\n    return translationOutput !== '' && translationOutput !== undefined && translationOutput ? (\r\n        <>\r\n            <div key={index} onClick={rowClickHandler.bind(this, { openSnackbar, searchText, start, end, quote: translationOutput, philosopherFullName: philosopherFullnameIn_SelectedLanguage, index })}>\r\n                {translationOutput} ― {philosopherFullnameIn_SelectedLanguage}\r\n            </div>\r\n            <div>\r\n                <button style={{ marginTop: '10px' }}>\r\n                    <Link to={ROUTES.image.route} state={{ quotationText: translationOutput, philosopherFullName: philosopherFullnameIn_SelectedLanguage, signature: 'इंस्टाग्राम: @jaaginsaan' }} style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000', marginTop: '10px' }}>\r\n                        Download Hindi Image\r\n                    </Link>\r\n                </button>\r\n            </div>\r\n        </>\r\n    ) : null\r\n}\r\n\r\nexport default Translate\r\n"],"names":["hitTranslationAPI","from","to","inputText","signal","fetch","method","body","JSON","stringify","q","source","target","format","api_key","headers","catch","e","useTranslation","useState","translationOutput","setTranslationOutput","useEffect","controller","AbortController","bind","wrapped","then","response","json","translatedText","abort","openSnackbar","searchText","start","end","index","philosopherFullName","philosopherFullName_i10n","darkMode","philosopherFullnameIn_SelectedLanguage","undefined","onClick","rowClickHandler","quote","style","marginTop","ROUTES","state","quotationText","signature","textDecoration","color"],"sourceRoot":""}