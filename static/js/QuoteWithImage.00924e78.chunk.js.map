{"version":3,"file":"static/js/QuoteWithImage.00924e78.chunk.js","mappings":"gHAAO,MAAMA,EACK,SAAUC,EAAKC,GAAsB,IAApB,MAAEC,EAAK,OAAEC,GAAQF,EAC5C,IAAK,IAAIG,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAAK,CACnC,MAAME,EAAcN,EAAMI,GAAGF,EAAOC,GACpC,GAAIG,EAAa,OAAOA,CAC5B,CACJ,ECNSN,EAAQ,CACjB,SAAUO,GACN,GAAIA,GAAS,GAAI,OAAO,GAC5B,EACA,SAAUA,GACN,GAAIA,EAAQ,IAAMA,GAAS,GAAI,OAAO,GAC1C,EACA,SAAUA,GACN,GAAIA,EAAQ,IAAMA,GAAS,GAAI,OAAO,GAC1C,EACA,SAAUA,GACN,GAAIA,EAAQ,IAAMA,GAAS,GAAI,OAAO,GAC1C,EACA,SAAUA,GACN,GAAIA,EAAQ,IAAMA,GAAS,GAAI,OAAO,GAC1C,EACA,SAAUA,GACN,GAAIA,EAAQ,IAAMA,GAAS,GAAI,OAAO,GAC1C,EACA,SAAUA,GACN,GAAIA,EAAQ,IAAMA,GAAS,GAAI,OAAO,GAC1C,EACA,SAAUA,GACN,GAAIA,EAAQ,IAAMA,GAAS,GAAI,OAAO,GAC1C,EACA,SAAUA,GACN,GAAIA,EAAQ,GAAI,OAAO,GAC3B,EACA,WACI,OAAO,CACX,GC3BSC,EAAkBC,IAC3B,MAAMF,EAAQE,EAAMC,MAAM,KAAKL,OAC/B,MAAO,GAAGN,EAAwBC,EAAO,CAAEE,MAAOK,EAAOJ,OAAQ,WAAY,C,uFCDjF,MAaA,EAbuBF,IAAA,IAAC,UAAEU,EAAS,cAAEC,EAAa,oBAAEC,EAAmB,UAAEC,EAAS,UAAEC,GAAWd,EAAA,OAC3Fe,EAAAA,EAAAA,KAAA,OAAKC,UAAW,GAAGC,EAAAA,EAAOC,cAAeC,IAAKT,EAAUU,UACpDC,EAAAA,EAAAA,MAAA,OAAKL,UAAW,GAAGC,EAAAA,EAAOK,kBAAmBC,MAAO,CAAEC,UAAUjB,EAAAA,EAAAA,GAAeI,IAAiBS,SAAA,EAC3FL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAOQ,QAASC,IAAKd,EAAqBe,IAAKC,EAAAA,KAAAA,CAAQ,KAA0Dd,MAClIO,EAAAA,EAAAA,MAAA,OAAKL,UAAW,GAAGC,EAAAA,EAAOY,aAAaZ,EAAAA,EAAOa,iBAAiBV,SAAA,EAC3DC,EAAAA,EAAAA,MAAA,KAAGL,UAAW,GAAGC,EAAAA,EAAOc,wBAAwBX,SAAA,CAAC,IAAET,EAAc,QACjEI,EAAAA,EAAAA,KAAA,KAAGC,UAAW,GAAGC,EAAAA,EAAOc,wBAAwBX,SAAER,QAEtDG,EAAAA,EAAAA,KAAA,OAAKC,UAAW,GAAGC,EAAAA,EAAOJ,YAAYO,SAAEP,QAE1C,C,kCCbV,SAAgB,eAAiB,2CAA2C,UAAY,sCAAsC,QAAU,oCAAoC,aAAe,yCAAyC,aAAe,yCAAyC,UAAY,sCAAsC,sBAAwB,kDAAkD,eAAiB,2CAA2C,YAAc,wC","sources":["common/utils/ruleEngine.js","components/organisms/analysis/generate-quote-image/utils/ruleEngine/rules/rules.js","components/organisms/analysis/generate-quote-image/utils/fontutils.js","components/organisms/analysis/quote-with-image/quote-with-image.jsx","webpack://quotes/./src/components/organisms/analysis/generate-quote-image/generateQuoteImage.module.css?32d1"],"sourcesContent":["export const ruleEngine = {\n    makeDecision: function (rules, { value, params }) {\n        for (let i = 0; i < rules.length; i++) {\n            const returnValue = rules[i](value, params)\n            if (returnValue) return returnValue\n        }\n    },\n}\n","export const rules = [\n    function (words) {\n        if (words <= 15) return 2.3\n    },\n    function (words) {\n        if (words > 15 && words <= 30) return 2.1\n    },\n    function (words) {\n        if (words > 30 && words <= 40) return 1.9\n    },\n    function (words) {\n        if (words > 40 && words <= 50) return 1.8\n    },\n    function (words) {\n        if (words > 50 && words <= 60) return 1.8\n    },\n    function (words) {\n        if (words > 60 && words <= 70) return 1.8\n    },\n    function (words) {\n        if (words > 70 && words <= 80) return 1.7\n    },\n    function (words) {\n        if (words > 80 && words <= 90) return 1.6\n    },\n    function (words) {\n        if (words > 90) return 1.3\n    },\n    function () {\n        return 2.0\n    },\n]\n","import { ruleEngine } from '../../../../../common/utils/ruleEngine'\nimport { rules } from './ruleEngine/rules/rules'\n\nexport const autoAdjustFont = (quote) => {\n    const words = quote.split(' ').length\n    return `${ruleEngine.makeDecision(rules, { value: words, params: null })}rem`\n}\n","import React from 'react'\nimport styles from '../generate-quote-image/generateQuoteImage.module.css'\nimport { autoAdjustFont } from '../generate-quote-image/utils/fontutils'\n\nconst QuoteWithImage = ({ exportRef, quotationText, philosopherFullName, signature, imageName }) => (\n    <div className={`${styles.borderWhite}`} ref={exportRef}>\n        <div className={`${styles.fontFredericka} `} style={{ fontSize: autoAdjustFont(quotationText) }}>\n            {<img className={styles.phImage} alt={philosopherFullName} src={require('../../../../common/static/assets/images/philosophers/' + imageName)} />}\n            <div className={`${styles.alignment} ${styles.quotationColor}`}>\n                <p className={`${styles.backgroundTransparent}`}>\"{quotationText}\"</p>\n                <p className={`${styles.backgroundTransparent}`}>{philosopherFullName}</p>\n            </div>\n            <div className={`${styles.signature}`}>{signature}</div>\n        </div>\n    </div>\n)\n\nexport default QuoteWithImage\n","// extracted by mini-css-extract-plugin\nexport default {\"fontFredericka\":\"generateQuoteImage_fontFredericka__0UhqQ\",\"alignment\":\"generateQuoteImage_alignment__5vbMn\",\"phImage\":\"generateQuoteImage_phImage__H9XsL\",\"alignmentOld\":\"generateQuoteImage_alignmentOld__1JQl5\",\"fullWidthOld\":\"generateQuoteImage_fullWidthOld__+H9Dx\",\"signature\":\"generateQuoteImage_signature__1nVnt\",\"backgroundTransparent\":\"generateQuoteImage_backgroundTransparent__dsccY\",\"quotationColor\":\"generateQuoteImage_quotationColor__GVQtu\",\"borderWhite\":\"generateQuoteImage_borderWhite__IjC6e\"};"],"names":["ruleEngine","rules","_ref","value","params","i","length","returnValue","words","autoAdjustFont","quote","split","exportRef","quotationText","philosopherFullName","signature","imageName","_jsx","className","styles","borderWhite","ref","children","_jsxs","fontFredericka","style","fontSize","phImage","alt","src","require","alignment","quotationColor","backgroundTransparent"],"sourceRoot":""}