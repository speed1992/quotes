{"version":3,"file":"static/js/480.9b34f210.chunk.js","mappings":"AAAAA,UAAY,SAAAC,GAAqB,IAAX,KAAEC,GAAMD,EAC1B,MAAM,WAAEE,GAAeD,EACvB,GAAmB,qBAAfC,EAAmC,CACnC,MAAM,YAAEC,EAAW,WAAEC,EAAU,cAAEC,GAAkBJ,EAC7CK,EAAkBF,EAAWG,cAC7BC,EAA2C,MAAjB,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAeG,YAAiC,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAeG,WAAWC,MAAM,MAAqB,OAAbJ,QAAa,IAAbA,OAAa,EAAbA,EAAeG,WACvGE,EAA2C,MAAjB,OAAbL,QAAa,IAAbA,OAAa,EAAbA,EAAeK,YAAiC,OAAbL,QAAa,IAAbA,OAAa,EAAbA,EAAeK,WAAWD,MAAM,MAAqB,OAAbJ,QAAa,IAAbA,OAAa,EAAbA,EAAeK,WAEvGC,EAAiBR,EAAYS,QAAOC,IAAgB,IAAf,MAAEC,GAAOD,EAChD,MAAME,EAAaD,EAAMP,cACzB,MAAmB,KAAfG,GAAoC,KAAfF,EACdO,EAAWC,SAASV,GACL,KAAfI,GAAoC,KAAfF,EACrBO,EAAWC,SAASV,KAAqBE,EAAWS,MAAMC,GAASH,EAAWC,SAASE,KACxE,KAAfR,GAAoC,KAAfF,EACrBO,EAAWC,SAASV,IAAoBI,EAAWO,MAAMC,GAASH,EAAWC,SAASE,KACvE,KAAfR,GAAoC,KAAfF,EACrBO,EAAWC,SAASV,KAAqBE,EAAWS,MAAMC,GAASH,EAAWC,SAASE,MAAUR,EAAWO,MAAMC,GAASH,EAAWC,SAASE,UADnJ,CAEP,IAGJC,KAAKC,YAAYC,KAAKC,UAAUX,GACpC,MAAO,GAAmB,oBAAfT,EAAkC,CACzC,MAAM,OAAEqB,EAAM,IAAEC,EAAG,MAAEC,GAAUxB,EAEzByB,EAASH,EAAOX,QAAOe,IAAgB,IAAf,MAAEb,GAAOa,EACnC,MAAMC,EAAYd,EAAML,MAAM,KAAKG,QAAQiB,GAAY,KAANA,IAAUC,OAE3D,OAAIN,EACOI,GAAaH,IAAkB,KAARD,GAAcI,GAAaJ,GAEtDI,GAAaH,CAAK,IAG7BN,KAAKC,YAAYC,KAAKC,UAAUI,GACpC,CACJ","sources":["common/web-workers/filter-worker.js"],"sourcesContent":["onmessage = function ({ data }) {\r\n    const { filterName } = data\r\n    if (filterName === 'searchTermFilter') {\r\n        const { currentData, searchText, searchFilters } = data\r\n        const lowerSearchText = searchText.toLowerCase()\r\n        const exclusions = searchFilters?.exclusions !== '' ? searchFilters?.exclusions.split('\\n') : searchFilters?.exclusions\r\n        const inclusions = searchFilters?.inclusions !== '' ? searchFilters?.inclusions.split('\\n') : searchFilters?.inclusions\r\n\r\n        const filteredQuotes = currentData.filter(({ quote }) => {\r\n            const lowerQuote = quote.toLowerCase()\r\n            if (inclusions === '' && exclusions === '') {\r\n                return lowerQuote.includes(lowerSearchText)\r\n            } else if (inclusions === '' && exclusions !== '') {\r\n                return lowerQuote.includes(lowerSearchText) && !exclusions.some((word) => lowerQuote.includes(word))\r\n            } else if (inclusions !== '' && exclusions === '') {\r\n                return lowerQuote.includes(lowerSearchText) && inclusions.some((word) => lowerQuote.includes(word))\r\n            } else if (inclusions !== '' && exclusions !== '') {\r\n                return lowerQuote.includes(lowerSearchText) && !exclusions.some((word) => lowerQuote.includes(word)) && inclusions.some((word) => lowerQuote.includes(word))\r\n            }\r\n        })\r\n\r\n        this.postMessage(JSON.stringify(filteredQuotes))\r\n    } else if (filterName === 'wordCountFilter') {\r\n        const { quotes, end, start } = data\r\n\r\n        const result = quotes.filter(({ quote }) => {\r\n            const wordCount = quote.split(' ').filter((n) => n !== '').length\r\n\r\n            if (end) {\r\n                return wordCount >= start && (end === '' || wordCount <= end)\r\n            }\r\n            return wordCount >= start\r\n        })\r\n\r\n        this.postMessage(JSON.stringify(result))\r\n    }\r\n}\r\n"],"names":["onmessage","_ref","data","filterName","currentData","searchText","searchFilters","lowerSearchText","toLowerCase","exclusions","split","inclusions","filteredQuotes","filter","_ref2","quote","lowerQuote","includes","some","word","this","postMessage","JSON","stringify","quotes","end","start","result","_ref3","wordCount","n","length"],"sourceRoot":""}