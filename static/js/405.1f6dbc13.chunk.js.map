{"version":3,"file":"static/js/405.1f6dbc13.chunk.js","mappings":"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","sources":["components/organisms/home/mobile/mobile-menu/mobile-menu.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSnackbar } from 'react-simple-snackbar'\r\nimport ROUTES from '../../../../../common/routes/routes'\r\nimport { retryTenTimes } from '../../../../../common/utils/apiUtils'\r\nimport { ALPHABETICAL, LATEST } from '../../home-page/constants/constants'\r\nimport { setVoiceSpeedRedux, setVoiceTypeRedux } from '../../home-page/homePageRedux/homePageRedux'\r\nimport './mobile-menu.css'\r\nconst BuildInfo = React.lazy(() => retryTenTimes(() => import('../../../tools/build-info/build-info')))\r\nconst LoginRegister = React.lazy(() => retryTenTimes(() => import('../login-register/login-register')))\r\nconst OutsideAlerter = React.lazy(() => retryTenTimes(() => import('../../../../../common/components/outside-alerter/outside-alerter')))\r\n\r\nfunction MobileMenu({ markedMode, setMarkedMode, visible, toggleVisible, darkMode, setDarkMode, setSorting, sorting, userName, setUserName, setMarkedQuotes, isLoggedIn, setIsLoggedIn, password, setPassword, setIsFetching }) {\r\n    const voiceSpeed = useSelector(({ philosophersData: { voiceSpeed } }) => voiceSpeed)\r\n    const voiceType = useSelector(({ philosophersData: { voiceType } }) => voiceType)\r\n    const markedQuotes = useSelector(({ philosophersData: { markedQuotes } }) => markedQuotes)\r\n    const [voices, setVoices] = useState()\r\n    const [openSnackbar] = useSnackbar()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onClickSortButtonHandler = (event) => {\r\n        const id = event.target.id\r\n\r\n        if (id === LATEST) setSorting(LATEST)\r\n        else setSorting(ALPHABETICAL)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setVoices(window.speechSynthesis.getVoices())\r\n    }, [])\r\n\r\n    return (\r\n        <OutsideAlerter callback={useCallback(() => toggleVisible(false), [toggleVisible])}>\r\n            <ul id=\"slide_menu\" style={{ display: visible ? 'block' : 'none' }}>\r\n                <li key=\"1\">\r\n                    Sort philosophers\r\n                    <div>\r\n                        <input type=\"radio\" id={LATEST} name=\"sortType\" onClick={onClickSortButtonHandler} defaultChecked={sorting === LATEST} />\r\n                        <label htmlFor={LATEST}>Latest</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"radio\" id={ALPHABETICAL} name=\"sortType\" onClick={onClickSortButtonHandler} defaultChecked={sorting === ALPHABETICAL} />\r\n                        <label htmlFor={ALPHABETICAL}>Alphabetical</label>\r\n                    </div>\r\n                </li>\r\n                <li key=\"2\">\r\n                    Marked Mode\r\n                    <input type=\"checkbox\" checked={markedMode} onChange={({ target: { checked } }) => setMarkedMode(checked)} />\r\n                </li>\r\n                <li key=\"3\">\r\n                    Dark Mode\r\n                    <input type=\"checkbox\" checked={darkMode} onChange={({ target: { checked } }) => setDarkMode(checked)} />\r\n                </li>\r\n                <li key=\"4\">\r\n                    Voice Speed[1-20]\r\n                    <input onChange={(event) => dispatch(setVoiceSpeedRedux(event.target.value / 10))} className=\"voiceSpeed\" type=\"number\" value={voiceSpeed ? voiceSpeed * 10 : ''} />\r\n                </li>\r\n                <li key=\"5\">\r\n                    <div>Available Voices</div>\r\n                    {voices && (\r\n                        <select\r\n                            onChange={(event) => {\r\n                                dispatch(setVoiceTypeRedux(event?.target?.value))\r\n                                speechSynthesis.cancel()\r\n                            }}\r\n                            className=\"userInput\"\r\n                            value={voiceType}\r\n                        >\r\n                            {voices?.map((voice, index) => (\r\n                                <option value={index} key={voice?.name}>\r\n                                    {voice?.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    )}\r\n                </li>\r\n                <li key=\"6\">\r\n                    <Link to={ROUTES.report.route} style={{ textDecoration: 'none', color: '#000' }}>\r\n                        <button>Open Report</button>\r\n                    </Link>\r\n                </li>\r\n                <li key=\"7\">\r\n                    <LoginRegister {...{ setUserName, userName, openSnackbar, isLoggedIn, setIsLoggedIn, setMarkedQuotes, markedQuotes, password, setPassword, setIsFetching }} />\r\n                    {!isLoggedIn && <div className=\"backupNote\">You can login to backup your marked quotes in database in case browser data gets deleted.</div>}\r\n                </li>\r\n                <li key=\"8\">\r\n                    <BuildInfo />\r\n                </li>\r\n            </ul>\r\n        </OutsideAlerter>\r\n    )\r\n}\r\n\r\nexport default MobileMenu\r\n"],"names":["BuildInfo","React","retryTenTimes","LoginRegister","OutsideAlerter","_ref","markedMode","setMarkedMode","visible","toggleVisible","darkMode","setDarkMode","setSorting","sorting","userName","setUserName","setMarkedQuotes","isLoggedIn","setIsLoggedIn","password","setPassword","setIsFetching","voiceSpeed","useSelector","_ref2","philosophersData","voiceType","_ref3","markedQuotes","_ref4","_useState","useState","_useState2","_slicedToArray","voices","setVoices","_useSnackbar","useSnackbar","openSnackbar","dispatch","useDispatch","onClickSortButtonHandler","event","target","id","LATEST","ALPHABETICAL","useEffect","window","speechSynthesis","getVoices","_jsx","callback","useCallback","children","_jsxs","style","display","type","name","onClick","defaultChecked","htmlFor","checked","onChange","_ref5","_ref6","setVoiceSpeedRedux","value","className","_event$target","setVoiceTypeRedux","cancel","map","voice","index","Link","to","ROUTES","report","route","textDecoration","color"],"sourceRoot":""}