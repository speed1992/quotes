{"version":3,"file":"static/js/GenerateQuoteImage.1708d977.chunk.js","mappings":"wIAKA,MASA,EAToBA,KAChB,MAAMC,GAAWC,EAAAA,EAAAA,MAKjB,MAAO,CAJc,SAACC,GAA0B,IAApBC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAClCJ,GAASO,EAAAA,EAAAA,IAAmBL,IAC5BM,YAAW,IAAMR,GAASO,EAAAA,EAAAA,IAAmB,MAAMJ,EACvD,EACqB,C,kECXlB,MAAMM,EAAeC,GAA2B,qBAAVA,EAChCC,EAAcC,GAAsC,IAA9BC,OAAOC,OAAOF,GAAKP,QAAgBO,EAAIG,cAAgBF,OAEnF,SAASG,IACZ,OAAQ,CAAC,MAAQ,KAAO,KAAO,KAAO,MAAMC,QAAQ,UAAWC,IAAOA,EAAKC,OAAOC,gBAAgB,IAAIC,WAAW,IAAI,GAAM,IAAOH,EAAI,GAAMI,SAAS,KACzJ,C,uDCHO,SAASC,EAAgBC,EAAKC,GACjC,MAAMC,EAAQC,aAAaC,QAAQJ,GAC7BK,EAAUC,KAAKC,MAAML,GAC3B,YAAgBpB,IAAZuB,GAAqC,cAAZA,GAAuC,SAAZA,GAAkC,OAAZA,EACnEJ,EACGI,CAClB,CAMO,MCZMG,EAAiBC,IAAiH,IAAhH,MAAEC,EAAK,mBAAEC,EAAkB,WAAEC,EAAU,aAAEC,EAAe,CAAC,EAAC,gBAAEC,EAAe,YAAEC,EAAW,eAAEC,GAAgBP,EACjIQ,EAAkBX,KAAKC,MAAMD,KAAKY,UAAUL,IAC5CM,EAAkB,GAGtBA,EAAkBpB,EADkB,GAAGY,mBACwB,IAE3DE,QAAqD/B,IAArC+B,EAAaF,KAC7BQ,EAAkB,IAAIA,KAAoBN,EAAaF,KAG3DQ,EAAkB,IAAI,IAAIC,IAAID,IAE1BT,GACAS,EAAgBE,KAAKX,GAGzBO,EAAgBN,GAAsBQ,EACtCL,EAAgBG,GAEhB,MAAMK,EAAUP,EAAYQ,QAAO,CAAAC,EAASC,KAAC,IAAT,GAAEC,GAAIF,EAAA,OAAyC,IAAjCL,EAAgBQ,QAAQD,EAAU,IACpFV,EAAeV,KAAKC,MAAMD,KAAKY,UAAUI,IAAU,C,8ICrBvD,MAcaM,EAAgBC,MAAOC,EAASC,KACzC,MAAMC,EAAOC,SAASC,qBAAqB,QAAQ,GAC7CC,EAAOF,SAASC,qBAAqB,QAAQ,GACnD,IAAIE,EAAYJ,EAAKK,YACjBC,EAAYH,EAAKE,YACrB,MAAME,EAAWT,EAAQU,YAAcV,EAAQO,YAC3CE,EAAWT,EAAQO,cACnBD,GAAaG,EACbD,GAAaC,GAEjBP,EAAKS,MAAMC,MAAQN,EAAY,KAC/BD,EAAKM,MAAMC,MAAQJ,EAAY,KAzBbK,EAACC,EAAMC,KACzB,MAAMC,EAAWC,OAAOd,SAASe,cAAc,KAC/CF,EAASL,MAAQ,gBACjBK,EAASG,SAAWJ,EAEpBC,EAASI,KAAON,EAEhBX,SAASE,KAAKgB,YAAYL,GAC1BA,EAASM,QACTnB,SAASE,KAAKkB,YAAYP,GAE1BA,EAASQ,QAAQ,EAiBjBX,QAFqBY,IAAYzB,EAAS,CAAE0B,MAAO,KAC9BC,UAAU,YAAa,GACvB1B,GACrBC,EAAKS,MAAMC,MAAQ,KACnBP,EAAKM,MAAMC,MAAQ,IAAI,ECzBpB,SAASgB,EAAoBC,EAAqBC,EAAOC,EAAWC,GACvE,MAAMtF,GAAWC,EAAAA,EAAAA,OACjBsF,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,KAA2B,EAAK,GACjC,KAEHD,EAAAA,EAAAA,YAAU,MACL,iBACG,MAAME,EAAW,GAAGN,YAA6BnE,EAAAA,EAAAA,iBACnCV,IAAV8E,IAAiC,IAAVA,ODmBb/B,OAAOC,EAASC,KACrC,WACS,UAAWmC,kBAGIX,IAAYzB,EAAS,CAAE0B,MAAO,KAC5CW,QAAOtC,UACV,MACMuC,EAAY,CACdC,MAFU,CAAC,IAAIC,KAAK,CAAC1B,GAAOb,EAAe,CAAEwC,KAAM3B,EAAK2B,SAI5D,GAAIL,UAAUM,SAASJ,GACnB,UACUF,UAAUN,MAAMQ,EAC1B,CAAE,MAAOK,GACY,eAAbA,EAAIC,MACJC,QAAQC,MAAMH,EAAIC,KAAMD,EAAII,QAEpC,MAEAF,QAAQG,KAAK,wBAAyBV,EAC1C,GAEP,EAtBA,EAsBG,ECzCcW,CAAWlB,EAAUmB,QAASf,SAE9BrC,EAAciC,EAAUmB,QAASf,GAEtCH,IAAUE,EAAAA,EAAAA,KAA2B,GAC1CxF,GAASyG,EAAAA,EAAAA,IAAoB,IAChC,CATA,EASG,GACL,CAACpB,EAAWF,EAAqBC,GACxC,C,aCrBA,MAAMsB,EAAiBC,EAAAA,MAAW,KAAMC,EAAAA,EAAAA,KAAc,IAAM,iCACtDC,EAAoBF,EAAAA,MAAW,KAAMC,EAAAA,EAAAA,KAAc,IAAM,kCAqB/D,EAnB2BE,KACvB,IAAI,cAAEC,EAAa,oBAAE5B,EAAmB,UAAE6B,EAAS,MAAE5B,GAAQ,IAAU6B,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,aACpG,MAAM9B,GAAY+B,EAAAA,EAAAA,UACZjF,GAAqB8E,EAAAA,EAAAA,KAAaC,GAAUA,EAAMG,iBAAiBlF,qBAGnEmF,EAAc,CAAEjC,YAAW0B,gBAAe5B,sBAAqB6B,aAErE9B,EAAoBC,EAAqBC,EAAOC,GAJ/B4B,EAAAA,EAAAA,KAAaC,GAAUA,EAAMG,iBAAiB/B,YAM/D,IACI,MAAMiC,EAAY,GAAGpF,QAErB,OADAqF,EAAAA,KAAAA,CAAQ,KAA0DD,IAC3DE,EAAAA,EAAAA,KAACf,EAAc,IAAKY,EAAaC,UAAWA,GACvD,CAAE,MAAOnB,GACL,OAAOqB,EAAAA,EAAAA,KAACZ,EAAiB,IAAKS,GAClC,E,sHCnBG,MAAM9B,EAA8B9E,IACvC,IAAIgH,EAAOjE,SAASC,qBAAqB,QAAQ,GACjDgE,EAAKC,UAAY,GACbjH,EACAgH,EAAKE,UAAUC,IAAI,aAEnBH,EAAKE,UAAUC,IAAI,aACvB,EAGSC,EAAyBA,CAACC,EAAiBC,IAAeD,EAAgBE,KAAKC,IAASC,EAAAA,EAAAA,IAAmB,CAAEC,YAAaF,EAAKxH,MAAO2H,QAASL,MAAeM,UAE9JC,EAA8BF,GAAY,IAAIA,GAASG,MAAK,CAACC,EAAGC,IAAMD,EAAEE,SAASC,cAAcF,EAAEC,YAEvGtF,eAAewF,EAA2CC,EAAUzG,EAAc0G,EAAczG,EAAiB0G,EAAsCC,GAC1J,MAAMC,QAAoCC,EAAAA,EAAAA,IAAyB,CAAEL,aACrE,GAAII,EAA6B,CAC7B,GAAIA,EAA8BD,EAAwB,CACtD,IAAI,uBAAEG,SAAiCC,EAAAA,EAAAA,IAAe,CAAEP,WAAUC,iBAClEzG,EAAgB8G,GAChBL,EAAa,0CAA2C,IAC5D,MAAWE,EAAyBC,SAC1BI,EAAAA,EAAAA,IAAgB,CAAER,WAAUzG,eAAc0G,iBAGpDC,EAAqCO,KAAKC,MAC9C,CACJ,CAEO,MAAMC,EAAwBxH,IAAsE,IAArE,mBAAEE,EAAkB,QAAEkG,EAAO,aAAEhG,EAAY,SAAEqH,EAAQ,OAAEC,GAAQ1H,EACjG,MAAM2H,GAASC,EAAAA,EAAAA,GAAqB,CAAEzB,YAAajG,EAAoBkG,YACjEyB,GAAkD,OAAZzH,QAAY,IAAZA,OAAY,EAAZA,EAAeF,KAAuB,GAE5E4H,EADYH,EAAO7G,QAAQiH,IAAWF,EAAoCG,SAASD,EAAM9G,MAC5DgH,QAAO,CAACC,EAAQnH,KAAiB,IAAf,MAAEgH,GAAOhH,EAC1D,MAAc,KAAVgH,EAAqBI,KAAKC,KAAIC,EAAAA,EAAAA,IAAaN,GAAQG,GAC3CA,CAAQ,GACrBI,KACCR,IAAqBQ,MACrBb,EAAS,GACTC,EAAOI,GACX,C,mGCzCG,MAAMT,EAAkBjG,UAAkE,IAA3D,SAAEyF,EAAQ,aAAEzG,EAAY,aAAE0G,EAAY,YAAEyB,GAAavI,QACjF2E,EAAAA,EAAAA,KAAcvD,eACHoH,MAAMC,EAAAA,EAAcC,cAAcC,OAAQ,CACnDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BnH,KAAM7B,KAAKY,UAAU,CACjBoG,WACAzG,eACA0I,WAAYxB,KAAKC,WAG3B,EAGOH,EAAiBhG,UAAuC,IAAD2H,EAAA,IAA/B,SAAElC,EAAQ,aAAEC,GAAc/F,EACvDiI,QAAiBrE,EAAAA,EAAAA,KACjBvD,eACUoH,MAAMC,EAAAA,EAAcC,cAAcO,QAAS,CAC7CL,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BnH,KAAM7B,KAAKY,UAAU,CACjBoG,iBAMhB,GADAmC,QAAiBA,EAASE,OACd,QAAZH,EAAIC,SAAQ,IAAAD,GAARA,EAAUI,GACV,IAAK,IAADC,EAAAC,EAAAC,EACA,MAAMnC,EAAiC,QAAXiC,EAAGJ,SAAQ,IAAAI,GAAS,QAATC,EAARD,EAAUG,eAAO,IAAAF,GAAK,QAALC,EAAjBD,EAAoB,UAAE,IAAAC,OAAd,EAARA,EAAwBlJ,aACjD6G,EAA8BrI,OAAOC,OAAOsI,GAAwBqC,OAAOpL,OACjB,IAADqL,EAAAC,EAAAC,EAA/D,GAAIxC,GAA0BF,EAA8B,EACxD,MAAO,CAAEE,yBAAwByC,eAAwB,QAAVH,EAAET,SAAQ,IAAAS,GAAS,QAATC,EAARD,EAAUF,eAAO,IAAAG,GAAK,QAALC,EAAjBD,EAAoB,UAAE,IAAAC,OAAd,EAARA,EAAwBb,WAGjF,CAAE,MAAO3E,GACL2C,EAAajH,KAAKY,UAAU0D,GAChC,MAEA2C,EAAajH,KAAKY,UAAUuI,EAAS7E,OACzC,EAGS+C,EAA2B9F,UAAyB,IAADyI,EAAA,IAAjB,SAAEhD,GAAUiD,EACnDd,QAAiBrE,EAAAA,EAAAA,KACjBvD,eACUoH,MAAMC,EAAAA,EAAcC,cAAcqB,UAAW,CAC/CnB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BnH,KAAM7B,KAAKY,UAAU,CACjBoG,iBAMG,IAADmD,EAAlB,OADAhB,QAAiBA,EAASE,OACd,QAAZW,EAAIb,SAAQ,IAAAa,GAARA,EAAUV,GACK,QAAfa,EAAOhB,SAAQ,IAAAgB,OAAA,EAARA,EAAUC,MAEV,IACX,EAGSC,EAAgB9I,UAA4F,IAAD+I,EAAA,IAApF,YAAEC,EAAW,SAAEvD,EAAQ,SAAEwD,EAAQ,cAAEC,EAAa,aAAExD,EAAY,cAAEyD,GAAeC,EAC/G,MAAMC,EAAsB5D,EAAS6D,OAAO,GAAGC,cAAgB9D,EAAS+D,MAAM,GAC9E,IAAI5B,EACJuB,GAAc,GAEVvB,EADgB,UAAhBoB,QACiBzF,EAAAA,EAAAA,KACbvD,eACUoH,MAAMC,EAAAA,EAAcoC,KAAKC,MAAO,CAClClC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BnH,KAAM7B,KAAKY,UAAU,CACjBoG,WACAwD,uBAKC1F,EAAAA,EAAAA,KACbvD,eACUoH,MAAMC,EAAAA,EAAcoC,KAAKE,OAAQ,CACnCnC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BnH,KAAM7B,KAAKY,UAAU,CACjBoG,WACAwD,iBAMpBrB,QAAiBA,EAASE,OAC1BqB,GAAc,GAEF,QAAZJ,EAAInB,SAAQ,IAAAmB,GAARA,EAAUhB,IACVmB,GAAc,GACdxD,EAAa2D,EAAsB,IAAM5K,KAAKY,UAAUuI,EAASgC,kBAEjElE,EAAajH,KAAKY,UAAUuI,EAAS7E,OACzC,C,mGCrGG,MAAM8G,EAAmBA,CAAAjL,EAAAe,KAAyH,IAAxH,mBAAEb,EAAkB,YAAEI,EAAW,eAAEC,EAAc,QAAE6F,GAASpG,GAAE,WAAEG,EAAa,KAAI,aAAEC,EAAY,gBAAEC,GAAiBU,EAC3IT,GAAaC,EAAeD,QACbjC,IAAf8B,GAA4BA,IAAYJ,EAAAA,EAAAA,GAAe,CAAEG,qBAAoBC,aAAYC,eAAcC,kBAAiBC,cAAaC,kBAAiB,EAGjJ2K,EAAyBpB,IAAsC,IAArC,mBAAE5J,EAAkB,QAAEkG,GAAS0D,EAClE,MAAMqB,EAAe/E,EAAQtF,QAAO0J,IAAA,IAAC,MAAE/L,GAAO+L,EAAA,OAAKtK,IAAuBzB,CAAK,IAC/E,KAAKC,EAAAA,EAAAA,IAAWyM,GAAe,OAAOA,GAAgBA,EAAa,GAAGzE,QAAQ,EAGrE0E,EAA8BC,IAAsC,IAArC,mBAAEnL,EAAkB,QAAEkG,GAASiF,EACvE,MAAMF,EAAe/E,EAAQtF,QAAOwK,IAAA,IAAC,MAAE7M,GAAO6M,EAAA,OAAKpL,IAAuBzB,CAAK,IAC/E,KAAKC,EAAAA,EAAAA,IAAWyM,GAAe,OAAOA,GAAgBA,EAAa,GAAGI,wBAAwB,EAG3F,SAASlD,EAAamD,GACzB,OAAOA,EAAIC,MAAM,KAAK3K,QAAO,SAAU4K,GACnC,MAAa,KAANA,CACX,IAAGtN,MACP,C,wGCrBA,SAAgB,MAAQ,qCAAqC,SAAW,yC,aCKxE,MAoCA,EApC6BuN,KACzB,MAAM5N,GAAWC,EAAAA,EAAAA,OACV8I,IAAgBhJ,EAAAA,EAAAA,KACjB8N,GAAgB5G,EAAAA,EAAAA,KAAaC,IAAK,IAAA4G,EAAA,OAAU,OAAL5G,QAAK,IAALA,GAAuB,QAAlB4G,EAAL5G,EAAOG,wBAAgB,IAAAyG,OAAlB,EAALA,EAAyBD,aAAa,KAC5EE,EAASC,IAAcC,EAAAA,EAAAA,UAASJ,GACvC,OACIK,EAAAA,EAAAA,MAAA,OAAKvG,UAAiB,OAANwG,QAAM,IAANA,OAAM,EAANA,EAAQC,MAAMC,SAAA,EAC1B5G,EAAAA,EAAAA,KAAA,MAAA4G,SAAI,gBACJ5G,EAAAA,EAAAA,KAAA,YAAU6G,KAAK,KAAKC,SAAWC,IAAC,IAAAC,EAAAC,EAAA,OAAKV,EAAW,IAAKD,EAASY,WAAa,OAADH,QAAC,IAADA,GAAS,QAARC,EAADD,EAAGI,cAAM,IAAAH,GAAO,QAAPC,EAATD,EAAW/N,aAAK,IAAAgO,OAAf,EAADA,EAAkBG,eAAgB,EAAEnO,MAAc,OAAPqN,QAAO,IAAPA,OAAO,EAAPA,EAASY,cAC9HlH,EAAAA,EAAAA,KAAA,MAAA4G,SAAI,gBACJ5G,EAAAA,EAAAA,KAAA,YAAU6G,KAAK,KAAKC,SAAWC,IAAC,IAAAM,EAAAC,EAAA,OAAKf,EAAW,IAAKD,EAASiB,WAAa,OAADR,QAAC,IAADA,GAAS,QAARM,EAADN,EAAGI,cAAM,IAAAE,GAAO,QAAPC,EAATD,EAAWpO,aAAK,IAAAqO,OAAf,EAADA,EAAkBF,eAAgB,EAAEnO,MAAc,OAAPqN,QAAO,IAAPA,OAAO,EAAPA,EAASiB,cAC9Hd,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACI5G,EAAAA,EAAAA,KAAA,UACIwH,QAASA,KACLjP,GAASkP,EAAAA,EAAAA,IAAsBnB,IAC/BhF,EAAa,iCAAkC,IAAK,EACtDsF,SACL,SAGD5G,EAAAA,EAAAA,KAAA,UACIE,UAAiB,OAANwG,QAAM,IAANA,OAAM,EAANA,EAAQgB,SACnBF,QAASA,KACL,MAAMG,EAAiB,CAAEJ,WAAY,GAAIL,WAAY,IACrDX,EAAWoB,GACXpP,GAASkP,EAAAA,EAAAA,IAAsBE,IAC/BrG,EAAa,iCAAkC,IAAK,EACtDsF,SACL,eAIH,C,iBCtCd,IAAIpG,EAAM,CACT,iBAAkB,KAClB,iBAAkB,KAClB,kBAAmB,KACnB,cAAe,IACf,mBAAoB,KACpB,aAAc,KACd,iBAAkB,KAClB,sBAAuB,KACvB,iBAAkB,MAInB,SAASoH,EAAeC,GACvB,IAAIpM,EAAKqM,EAAsBD,GAC/B,OAAOE,EAAoBtM,EAC5B,CACA,SAASqM,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAExH,EAAKqH,GAAM,CACpC,IAAId,EAAI,IAAIkB,MAAM,uBAAyBJ,EAAM,KAEjD,MADAd,EAAEmB,KAAO,mBACHnB,CACP,CACA,OAAOvG,EAAIqH,EACZ,CACAD,EAAeO,KAAO,WACrB,OAAO/O,OAAO+O,KAAK3H,EACpB,EACAoH,EAAeQ,QAAUN,EACzBO,EAAOC,QAAUV,EACjBA,EAAenM,GAAK,I","sources":["common/components/snackbar/useSnackbar.js","common/utils/commonUtils.js","common/utils/localStorageUtils.js","common/utils/staticDataUtils.js","components/organisms/analysis/generate-quote-image/utils/utils.js","components/organisms/analysis/generate-quote-image/utils/hooks.js","components/organisms/analysis/generate-quote-image/generateQuoteImage.js","components/organisms/home/home-page/utils/utils.js","components/organisms/home/mobile/mobile-menu/utils/utils.js","components/organisms/home/quotes-list/utils/utils.js","webpack://quotes/./src/components/organisms/tools/exclusions-inclusions/exclusions-inclusions.module.css?f7e9","components/organisms/tools/exclusions-inclusions/exclusions-inclusions.js","common/static/assets/images/philosophers|sync|/^/.//.*$"],"sourcesContent":["// dispatch(setSnackabrMessage('Are you an idiot?'))\n\nimport { useDispatch } from 'react-redux'\nimport { setSnackabrMessage } from './snackbarRedux'\n\nconst useSnackbar = () => {\n    const dispatch = useDispatch()\n    const openSnackbar = (text, timeout = 1400) => {\n        dispatch(setSnackabrMessage(text))\n        setTimeout(() => dispatch(setSnackabrMessage('')), timeout)\n    }\n    return [openSnackbar]\n}\n\nexport default useSnackbar\n","export const isUndefined = (value) => typeof value === 'undefined'\nexport const isObjEmpty = (obj) => Object.values(obj).length === 0 && obj.constructor === Object\n\nexport function uuidv4() {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) => (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16))\n}\n","import { useEffect, useState } from 'react'\n\nexport function getStorageValue(key, defaultValue) {\n    const saved = localStorage.getItem(key)\n    const initial = JSON.parse(saved)\n    if (initial === undefined || initial === 'undefined' || initial === 'null' || initial === null) {\n        return defaultValue\n    } else return initial\n}\n\nexport function setStorageValue(key, value) {\n    localStorage.setItem(key, JSON.stringify(value))\n}\n\nexport const useLocalStorage = (key, defaultValue) => {\n    const [value, setValue] = useState(() => {\n        return getStorageValue(key, defaultValue)\n    })\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value))\n    }, [key, value])\n\n    return [value, setValue]\n}\n","import { getStorageValue } from './localStorageUtils'\n\nexport const removeReadData = ({ index, currentPhilosopher, markedMode, markedQuotes = {}, setMarkedQuotes, currentData, setCurrentData }) => {\n    let newMarkedQuotes = JSON.parse(JSON.stringify(markedQuotes))\n    let readQuotesArray = []\n\n    const READ_ARRAY_LOCALSTORAGE_KEY = `${currentPhilosopher}-MARKED_AS_READ`\n    readQuotesArray = getStorageValue(READ_ARRAY_LOCALSTORAGE_KEY, [])\n\n    if (markedQuotes && markedQuotes[currentPhilosopher] !== undefined) {\n        readQuotesArray = [...readQuotesArray, ...markedQuotes[currentPhilosopher]]\n    }\n\n    readQuotesArray = [...new Set(readQuotesArray)]\n\n    if (index) {\n        readQuotesArray.push(index)\n    }\n\n    newMarkedQuotes[currentPhilosopher] = readQuotesArray\n    setMarkedQuotes(newMarkedQuotes)\n\n    const newData = currentData.filter(({ id }, _) => readQuotesArray.indexOf(id) === -1)\n    setCurrentData(JSON.parse(JSON.stringify(newData)))\n}\n","import html2canvas from 'html2canvas'\n\nconst downloadImage = (blob, fileName) => {\n    const fakeLink = window.document.createElement('a')\n    fakeLink.style = 'display:none;'\n    fakeLink.download = fileName\n\n    fakeLink.href = blob\n\n    document.body.appendChild(fakeLink)\n    fakeLink.click()\n    document.body.removeChild(fakeLink)\n\n    fakeLink.remove()\n}\n\nexport const exportAsImage = async (element, imageFileName) => {\n    const html = document.getElementsByTagName('html')[0]\n    const body = document.getElementsByTagName('body')[0]\n    let htmlWidth = html.clientWidth\n    let bodyWidth = body.clientWidth\n    const newWidth = element.scrollWidth - element.clientWidth\n    if (newWidth > element.clientWidth) {\n        htmlWidth += newWidth\n        bodyWidth += newWidth\n    }\n    html.style.width = htmlWidth + 'px'\n    body.style.width = bodyWidth + 'px'\n    const canvas = await html2canvas(element, { scale: 3 })\n    const image = canvas.toDataURL('image/png', 1.0)\n    downloadImage(image, imageFileName)\n    html.style.width = null\n    body.style.width = null\n}\n\nexport const shareQuote = async (element, imageFileName) => {\n    ;(async () => {\n        if (!('share' in navigator)) {\n            return\n        }\n        const canvas = await html2canvas(element, { scale: 3 })\n        canvas.toBlob(async (blob) => {\n            const files = [new File([blob], imageFileName, { type: blob.type })]\n            const shareData = {\n                files,\n            }\n            if (navigator.canShare(shareData)) {\n                try {\n                    await navigator.share(shareData)\n                } catch (err) {\n                    if (err.name !== 'AbortError') {\n                        console.error(err.name, err.message)\n                    }\n                }\n            } else {\n                console.warn('Sharing not supported', shareData)\n            }\n        })\n    })()\n}\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setCurrentModalName } from '../../../../../common/components/modal/modalRedux'\nimport { uuidv4 } from '../../../../../common/utils/commonUtils'\nimport { setThemeClassNameOnHTMLTag } from '../../../home/home-page/utils/utils'\nimport { exportAsImage, shareQuote } from './utils'\n\nexport function useCreateQuoteImage(philosopherFullName, share, exportRef, darkMode) {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        setThemeClassNameOnHTMLTag(true)\n    }, [])\n\n    useEffect(() => {\n        ;(async function () {\n            const filename = `${philosopherFullName}-quote-${uuidv4()}.png`\n            if (share !== undefined && share === true) {\n                await shareQuote(exportRef.current, filename)\n            } else {\n                await exportAsImage(exportRef.current, filename)\n            }\n            if (!darkMode) setThemeClassNameOnHTMLTag(false)\n            dispatch(setCurrentModalName(''))\n        })()\n    }, [exportRef, philosopherFullName, share])\n}\n","import React, { useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\nimport { useCreateQuoteImage } from './utils/hooks'\nconst QuoteWithImage = React.lazy(() => retryTenTimes(() => import(/* webpackChunkName: \"QuoteWithImage\" */ '../quote-with-image/quote-with-image')))\nconst QuoteWithoutImage = React.lazy(() => retryTenTimes(() => import(/* webpackChunkName: \"QuoteWithoutImage\" */ '../quote-without-image/quote-without-image')))\n\nconst GenerateQuoteImage = () => {\n    let { quotationText, philosopherFullName, signature, share = false } = useSelector((state) => state.quoteImage)\n    const exportRef = useRef()\n    const currentPhilosopher = useSelector((state) => state.philosophersData.currentPhilosopher)\n    const darkMode = useSelector((state) => state.philosophersData.darkMode)\n\n    const propsToSend = { exportRef, quotationText, philosopherFullName, signature }\n\n    useCreateQuoteImage(philosopherFullName, share, exportRef, darkMode)\n\n    try {\n        const imageName = `${currentPhilosopher}.jpg`\n        require('../../../../common/static/assets/images/philosophers/' + imageName)\n        return <QuoteWithImage {...propsToSend} imageName={imageName} />\n    } catch (error) {\n        return <QuoteWithoutImage {...propsToSend} />\n    }\n}\n\nexport default GenerateQuoteImage\n","import { getPhilosopherData, getPhilosopherQuotes } from '../../../../../common/static/utils/utils'\nimport { getUserDetails, getUserMarkedQuotesCount, sendUserDetails } from '../../mobile/mobile-menu/utils/utils'\nimport { getWordCount } from '../../quotes-list/utils/utils'\n\nexport const setThemeClassNameOnHTMLTag = (value) => {\n    let root = document.getElementsByTagName('html')[0]\n    root.className = ''\n    if (value) {\n        root.classList.add('darkTheme')\n    } else {\n        root.classList.add('lightTheme')\n    }\n}\n\nexport const bringIntoOriginalOrder = (originalOptions, newOptions) => originalOptions.map((item) => getPhilosopherData({ philosopher: item.value, options: newOptions })).reverse()\n\nexport const bringIntoAlphabeticalOrder = (options) => [...options].sort((a, b) => a.fullName.localeCompare(b.fullName))\n\nexport async function compareWithServerSyncDatesAndMakeAnAPICall(userName, markedQuotes, openSnackbar, setMarkedQuotes, setRestoreQuotesFromServerCachedDate, markedQuoteClientCount) {\n    const markedQuotesFromServerCount = await getUserMarkedQuotesCount({ userName })\n    if (markedQuotesFromServerCount) {\n        if (markedQuotesFromServerCount > markedQuoteClientCount) {\n            let { markedQuotesFromServer } = await getUserDetails({ userName, openSnackbar })\n            setMarkedQuotes(markedQuotesFromServer)\n            openSnackbar('Auto-Sync : Restored all marked quotes!', 4000)\n        } else if (markedQuoteClientCount > markedQuotesFromServerCount) {\n            await sendUserDetails({ userName, markedQuotes, openSnackbar })\n            // openSnackbar('Auto-Sync : Synced marked quotes with server database!', 4000)\n        }\n        setRestoreQuotesFromServerCachedDate(Date.now())\n    }\n}\n\nexport const autoPopulateWordCount = ({ currentPhilosopher, options, markedQuotes, setStart, setEnd }) => {\n    const quotes = getPhilosopherQuotes({ philosopher: currentPhilosopher, options })\n    const markedQuotesOfTheCurrentPhilosopher = markedQuotes?.[currentPhilosopher] || []\n    const newQuotes = quotes.filter((quote) => !markedQuotesOfTheCurrentPhilosopher.includes(quote.id))\n    const minimumWordCount = newQuotes.reduce((minCount, { quote }) => {\n        if (quote !== '') return Math.min(getWordCount(quote), minCount)\n        else return minCount\n    }, Infinity)\n    if (minimumWordCount !== Infinity) {\n        setStart(1)\n        setEnd(minimumWordCount)\n    }\n}\n","import { API_ENDPOINTS } from '../../../../../../common/apis/apiEndpoints'\nimport { retryTenTimes } from '../../../../../../common/utils/apiUtils'\n\nexport const sendUserDetails = async ({ userName, markedQuotes, openSnackbar, setSyncDate }) => {\n    await retryTenTimes(async () => {\n        return await fetch(API_ENDPOINTS.MARKED_QUOTES.BACKUP, {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                userName,\n                markedQuotes,\n                dateSynced: Date.now(),\n            }),\n        })\n    })\n}\n\nexport const getUserDetails = async ({ userName, openSnackbar }) => {\n    let response = await retryTenTimes(\n        async () =>\n            await fetch(API_ENDPOINTS.MARKED_QUOTES.RESTORE, {\n                method: 'post',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    userName,\n                }),\n            })\n    )\n\n    response = await response.json()\n    if (response?.ok) {\n        try {\n            const markedQuotesFromServer = response?.results?.[0]?.markedQuotes\n            const markedQuotesFromServerCount = Object.values(markedQuotesFromServer).flat().length\n            if (markedQuotesFromServer && markedQuotesFromServerCount > 0) {\n                return { markedQuotesFromServer, dateFromServer: response?.results?.[0]?.dateSynced }\n                // setMarkedQuotes(response?.results?.[0]?.markedQuotes)\n            }\n        } catch (error) {\n            openSnackbar(JSON.stringify(error))\n        }\n    } else {\n        openSnackbar(JSON.stringify(response.error))\n    }\n}\n\nexport const getUserMarkedQuotesCount = async ({ userName }) => {\n    let response = await retryTenTimes(\n        async () =>\n            await fetch(API_ENDPOINTS.MARKED_QUOTES.GET_COUNT, {\n                method: 'post',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    userName,\n                }),\n            })\n    )\n\n    response = await response.json()\n    if (response?.ok) {\n        return response?.count\n    } else {\n        return null\n    }\n}\n\nexport const loginRegister = async ({ apiCallType, userName, password, setIsLoggedIn, openSnackbar, setIsFetching }) => {\n    const capitalizedUserName = userName.charAt(0).toUpperCase() + userName.slice(1)\n    let response\n    setIsFetching(true)\n    if (apiCallType === 'login') {\n        response = await retryTenTimes(\n            async () =>\n                await fetch(API_ENDPOINTS.USER.LOGIN, {\n                    method: 'post',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        userName,\n                        password,\n                    }),\n                })\n        )\n    } else {\n        response = await retryTenTimes(\n            async () =>\n                await fetch(API_ENDPOINTS.USER.CREATE, {\n                    method: 'post',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        userName,\n                        password,\n                    }),\n                })\n        )\n    }\n\n    response = await response.json()\n    setIsFetching(false)\n\n    if (response?.ok) {\n        setIsLoggedIn(true)\n        openSnackbar(capitalizedUserName + ' ' + JSON.stringify(response.serverResponse))\n    } else {\n        openSnackbar(JSON.stringify(response.error))\n    }\n}\n","import { isObjEmpty } from '../../../../../common/utils/commonUtils'\nimport { removeReadData } from '../../../../../common/utils/staticDataUtils'\n\nexport const changeQuotesData = ({ currentPhilosopher, currentData, setCurrentData, options }, { markedMode = null, markedQuotes, setMarkedQuotes }) => {\n    if (currentData) setCurrentData(currentData)\n    if (markedMode !== undefined && markedMode) removeReadData({ currentPhilosopher, markedMode, markedQuotes, setMarkedQuotes, currentData, setCurrentData })\n}\n\nexport const getPhilosopherFullName = ({ currentPhilosopher, options }) => {\n    const currentIndex = options.filter(({ value }) => currentPhilosopher === value)\n    if (!isObjEmpty(currentIndex)) return currentIndex && currentIndex[0].fullName\n}\n\nexport const getPhilosopherFullName_i10n = ({ currentPhilosopher, options }) => {\n    const currentIndex = options.filter(({ value }) => currentPhilosopher === value)\n    if (!isObjEmpty(currentIndex)) return currentIndex && currentIndex[0].fullNameInOtherLanguages\n}\n\nexport function getWordCount(str) {\n    return str.split(' ').filter(function (n) {\n        return n !== ''\n    }).length\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"exclusions-inclusions_modal__h+NkE\",\"clearBtn\":\"exclusions-inclusions_clearBtn__hHaS6\"};","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useSnackbar from '../../../../common/components/snackbar/useSnackbar'\nimport { setSearchFiltersRedux } from '../../home/home-page/homePageRedux/homePageRedux'\nimport styles from './exclusions-inclusions.module.css'\n\nconst ExclusionsInclusions = () => {\n    const dispatch = useDispatch()\n    const [openSnackbar] = useSnackbar()\n    const searchFilters = useSelector((state) => state?.philosophersData?.searchFilters)\n    const [filters, setFilters] = useState(searchFilters)\n    return (\n        <div className={styles?.modal}>\n            <h5>Exclusions</h5>\n            <textarea rows=\"10\" onChange={(e) => setFilters({ ...filters, exclusions: e?.target?.value?.toLowerCase() })} value={filters?.exclusions} />\n            <h5>Inclusions</h5>\n            <textarea rows=\"10\" onChange={(e) => setFilters({ ...filters, inclusions: e?.target?.value?.toLowerCase() })} value={filters?.inclusions} />\n            <div>\n                <button\n                    onClick={() => {\n                        dispatch(setSearchFiltersRedux(filters))\n                        openSnackbar('Exclusions/Inclusions Updated!', 4000)\n                    }}\n                >\n                    Add\n                </button>\n                <button\n                    className={styles?.clearBtn}\n                    onClick={() => {\n                        const clearedFilters = { inclusions: '', exclusions: '' }\n                        setFilters(clearedFilters)\n                        dispatch(setSearchFiltersRedux(clearedFilters))\n                        openSnackbar('Exclusions/Inclusions Updated!', 4000)\n                    }}\n                >\n                    Clear\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default ExclusionsInclusions\n","var map = {\n\t\"./BEAUVOIR.jpg\": 1848,\n\t\"./BUKOWSKI.jpg\": 1322,\n\t\"./CARL_JUNG.jpg\": 8094,\n\t\"./FREUD.jpg\": 139,\n\t\"./MARK_TWAIN.jpg\": 4554,\n\t\"./OSHO.jpg\": 5984,\n\t\"./PETERSON.jpg\": 3527,\n\t\"./RICKY_GERVAIS.png\": 4507,\n\t\"./ROUSSEAU.jpg\": 1502\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7853;"],"names":["useSnackbar","dispatch","useDispatch","text","timeout","arguments","length","undefined","setSnackabrMessage","setTimeout","isUndefined","value","isObjEmpty","obj","Object","values","constructor","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","getStorageValue","key","defaultValue","saved","localStorage","getItem","initial","JSON","parse","removeReadData","_ref","index","currentPhilosopher","markedMode","markedQuotes","setMarkedQuotes","currentData","setCurrentData","newMarkedQuotes","stringify","readQuotesArray","Set","push","newData","filter","_ref2","_","id","indexOf","exportAsImage","async","element","imageFileName","html","document","getElementsByTagName","body","htmlWidth","clientWidth","bodyWidth","newWidth","scrollWidth","style","width","downloadImage","blob","fileName","fakeLink","window","createElement","download","href","appendChild","click","removeChild","remove","html2canvas","scale","toDataURL","useCreateQuoteImage","philosopherFullName","share","exportRef","darkMode","useEffect","setThemeClassNameOnHTMLTag","filename","navigator","toBlob","shareData","files","File","type","canShare","err","name","console","error","message","warn","shareQuote","current","setCurrentModalName","QuoteWithImage","React","retryTenTimes","QuoteWithoutImage","GenerateQuoteImage","quotationText","signature","useSelector","state","quoteImage","useRef","philosophersData","propsToSend","imageName","require","_jsx","root","className","classList","add","bringIntoOriginalOrder","originalOptions","newOptions","map","item","getPhilosopherData","philosopher","options","reverse","bringIntoAlphabeticalOrder","sort","a","b","fullName","localeCompare","compareWithServerSyncDatesAndMakeAnAPICall","userName","openSnackbar","setRestoreQuotesFromServerCachedDate","markedQuoteClientCount","markedQuotesFromServerCount","getUserMarkedQuotesCount","markedQuotesFromServer","getUserDetails","sendUserDetails","Date","now","autoPopulateWordCount","setStart","setEnd","quotes","getPhilosopherQuotes","markedQuotesOfTheCurrentPhilosopher","minimumWordCount","quote","includes","reduce","minCount","Math","min","getWordCount","Infinity","setSyncDate","fetch","API_ENDPOINTS","MARKED_QUOTES","BACKUP","method","headers","dateSynced","_response","response","RESTORE","json","ok","_response2","_response2$results","_response2$results$","results","flat","_response3","_response3$results","_response3$results$","dateFromServer","_response4","_ref3","GET_COUNT","_response5","count","loginRegister","_response6","apiCallType","password","setIsLoggedIn","setIsFetching","_ref4","capitalizedUserName","charAt","toUpperCase","slice","USER","LOGIN","CREATE","serverResponse","changeQuotesData","getPhilosopherFullName","currentIndex","getPhilosopherFullName_i10n","_ref5","_ref6","fullNameInOtherLanguages","str","split","n","ExclusionsInclusions","searchFilters","_state$philosophersDa","filters","setFilters","useState","_jsxs","styles","modal","children","rows","onChange","e","_e$target","_e$target$value","exclusions","target","toLowerCase","_e$target2","_e$target2$value","inclusions","onClick","setSearchFiltersRedux","clearBtn","clearedFilters","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","resolve","module","exports"],"sourceRoot":""}