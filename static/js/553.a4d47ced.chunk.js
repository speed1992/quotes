"use strict";(self.webpackChunkquotes=self.webpackChunkquotes||[]).push([[553],{2553:function(t,n,o){o.r(n);var e=o(9439),u=o(2791),a=o(9434),r=o(5938),l=o(3456),s=o(184);n.default=function(t){var n=t.isFetching,o=t.isFetchingOptions,i=t.markedQuotes,c=t.currentPhilosopher,d=(0,u.useState)({totalQuoteCount:null,readCount:null,unreadCount:null}),h=(0,e.Z)(d,2),p=h[0],C=h[1],f=(0,a.v9)((function(t){return t.philosophersData.options})),v=(0,r.SD)({philosopher:c,options:f});(0,u.useEffect)((function(){if(!n&&!o){var t=null===v||void 0===v?void 0:v.length,e=(0,l.o8)(i[c])?0:i[c].length;C({totalQuoteCount:t,readCount:e,unreadCount:t-e})}}),[c,n,o,i,null===v||void 0===v?void 0:v.length]);var g=p.totalQuoteCount,k=p.readCount,Q=p.unreadCount;return(0,s.jsx)(s.Fragment,{children:!n&&v&&(0,s.jsxs)("span",{children:[g&&"Total: ".concat(g),k&&" Read: ".concat(k),Q&&" Unread: ".concat(Q)]})})}}}]);
//# sourceMappingURL=553.a4d47ced.chunk.js.map