{"version":3,"file":"static/js/Logs.f3d0ee12.chunk.js","mappings":"wKACA,QAA6B,yB,aCK7B,MA+BA,EA/BaA,KACT,MAAMC,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,iBAAiBH,QACpDI,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAWrC,OATAC,EAAAA,EAAAA,YAAU,MACNC,iBAA8B,IAADC,EACzB,IAAIC,QAAiBC,EAAAA,EAAAA,KAAc,IAAMC,MAAMC,EAAAA,EAAcC,MAAMC,OACnEL,QAAiBA,EAASM,OAC1BX,EAAkB,QAATI,EAACC,SAAQ,IAAAD,OAAA,EAARA,EAAUQ,UACxB,CACAC,EAAa,GACd,IAEClB,EAAKmB,OAAS,GAAKf,EAAOe,OAAS,GAAUC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAE,mBAG/CC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBH,SAAA,CACzB,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,KAAI,CAACC,EAAKC,KACbR,EAAAA,EAAAA,KAAA,OAAAE,SAAkBK,GAARC,KAEP,OAANxB,QAAM,IAANA,OAAM,EAANA,EAAQsB,KAAI,CAACG,EAAOD,KACjBL,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAAE,SAAkBQ,KAAKC,UAAUF,IAAvBD,IACVR,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,gBAGN,C","sources":["webpack://quotes/./src/components/organisms/analysis/logs/logs.module.css?61a8","components/organisms/analysis/logs/logs.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"addPadding\":\"logs_addPadding__rWx3h\"};","import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { API_ENDPOINTS } from '../../../../common/apis/apiEndpoints'\r\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\r\nimport styles from './logs.module.css'\r\n\r\nconst Logs = () => {\r\n    const logs = useSelector((state) => state.philosophersData.logs)\r\n    const [errors, setErrors] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function fetchErrors() {\r\n            let response = await retryTenTimes(() => fetch(API_ENDPOINTS.ERROR.GET))\r\n            response = await response.json()\r\n            setErrors(response?.errorList)\r\n        }\r\n        fetchErrors()\r\n    }, [])\r\n\r\n    if (logs.length < 1 && errors.length < 1) return <>No logs found</>\r\n\r\n    return (\r\n        <div className={styles.addPadding}>\r\n            {logs?.map((log, index) => (\r\n                <div key={index}>{log}</div>\r\n            ))}\r\n            {errors?.map((error, index) => (\r\n                <>\r\n                    <div key={index}>{JSON.stringify(error)}</div>\r\n                    <br />\r\n                    <br />\r\n                </>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logs\r\n"],"names":["Logs","logs","useSelector","state","philosophersData","errors","setErrors","useState","useEffect","async","_response","response","retryTenTimes","fetch","API_ENDPOINTS","ERROR","GET","json","errorList","fetchErrors","length","_jsx","_Fragment","children","_jsxs","className","styles","map","log","index","error","JSON","stringify"],"sourceRoot":""}