{"version":3,"file":"static/js/553.339b3f2c.chunk.js","mappings":"2KAiCA,UA5BA,YAA6F,IAApEA,EAAmE,EAAnEA,WAAYC,EAAuD,EAAvDA,kBAAmBC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,mBAClE,GAAsCC,EAAAA,EAAAA,UAAS,CAAEC,gBAAiB,KAAMC,UAAW,KAAMC,YAAa,OAAtG,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,iBAAiBH,WACxDI,GAAeC,EAAAA,EAAAA,IAAqB,CAAEC,YAAab,EAAoBO,QAAAA,KAE7EO,EAAAA,EAAAA,YAAU,WACN,IAAKjB,IAAeC,EAAmB,CACnC,IAAMI,EAAe,OAAGS,QAAH,IAAGA,OAAH,EAAGA,EAAcI,OAChCZ,GAAYa,EAAAA,EAAAA,IAAYjB,EAAaC,IAAuB,EAAID,EAAaC,GAAoBe,OAGvGT,EAAe,CAAEJ,gBAAAA,EAAiBC,UAAAA,EAAWC,YAFzBF,EAAkBC,OAI3C,CAACH,EAAoBH,EAAYC,EAAmBC,EAApD,OAAkEY,QAAlE,IAAkEA,OAAlE,EAAkEA,EAAcI,SAEnF,IAAQb,EAA4CG,EAA5CH,gBAAiBC,EAA2BE,EAA3BF,UAAWC,EAAgBC,EAAhBD,YAEpC,OACI,+BACMP,GAAcc,IACZ,sCACYT,EADZ,UACoCC,EADpC,YACwDC","sources":["components/organisms/analysis/unread-counter/unread-counter.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { getPhilosopherQuotes } from '../../../../common/static/utils/utils'\r\nimport { isUndefined } from '../../../../common/utils/commonUtils'\r\n\r\nfunction UnreadCounter({ isFetching, isFetchingOptions, markedQuotes, currentPhilosopher }) {\r\n    const [quoteCounts, setQuoteCounts] = useState({ totalQuoteCount: 'NA', readCount: 'NA', unreadCount: 'NA' })\r\n    const options = useSelector((state) => state.philosophersData.options)\r\n    const originalData = getPhilosopherQuotes({ philosopher: currentPhilosopher, options })\r\n\r\n    useEffect(() => {\r\n        if (!isFetching && !isFetchingOptions) {\r\n            const totalQuoteCount = originalData?.length\r\n            const readCount = isUndefined(markedQuotes[currentPhilosopher]) ? 0 : markedQuotes[currentPhilosopher].length\r\n            const unreadCount = totalQuoteCount - readCount\r\n\r\n            setQuoteCounts({ totalQuoteCount, readCount, unreadCount })\r\n        }\r\n    }, [currentPhilosopher, isFetching, isFetchingOptions, markedQuotes, originalData?.length])\r\n\r\n    const { totalQuoteCount, readCount, unreadCount } = quoteCounts\r\n\r\n    return (\r\n        <>\r\n            {!isFetching && originalData && (\r\n                <span>\r\n                    Total: {totalQuoteCount} Read: {readCount} Unread: {unreadCount}\r\n                </span>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UnreadCounter\r\n"],"names":["isFetching","isFetchingOptions","markedQuotes","currentPhilosopher","useState","totalQuoteCount","readCount","unreadCount","quoteCounts","setQuoteCounts","options","useSelector","state","philosophersData","originalData","getPhilosopherQuotes","philosopher","useEffect","length","isUndefined"],"sourceRoot":""}