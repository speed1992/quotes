{"version":3,"file":"static/js/816.a9da2142.chunk.js","mappings":"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","sources":["common/utils/ruleEngine.js","webpack://quotes/./src/components/organisms/home/row/styles/row.module.css?d653","components/organisms/home/row/row.js","common/utils/debounce.js","components/organisms/analysis/no-search-results/no-search-results.jsx","components/organisms/home/quotes-list/utils/listUtils.js","components/organisms/home/quotes-list/utils/ruleEngine/rules.js","components/organisms/home/quotes-list/quotes-list.jsx","components/organisms/home/row/utils/utils.js","common/utils/stringUtils.js"],"sourcesContent":["export const ruleEngine = {\r\n    makeDecision: function (rules, { value, params }) {\r\n        for (let i = 0; i <= rules.length; i++) {\r\n            const returnValue = rules[i](value, params)\r\n            if (returnValue) return returnValue\r\n        }\r\n    },\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"actionItems\":\"row_actionItems__Y-npM\",\"row\":\"row_row__G696K\"};","import axios from 'axios'\r\nimport React, { Suspense, useCallback, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport useSnackbar from '../../../../common/components/snackbar/useSnackbar'\r\nimport ROUTES from '../../../../common/routes/routes'\r\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\r\nimport { isUndefined } from '../../../../common/utils/commonUtils'\r\nimport { debounce } from '../../../../common/utils/debounce'\r\nimport styles from './styles/row.module.css'\r\nimport { rowClickHandler, usePrevious } from './utils/utils'\r\nconst MarkAsRead = React.lazy(() => retryTenTimes(() => import('../../tools/mark-as-read/mark-as-read')))\r\nconst Translate = React.lazy(() => retryTenTimes(() => import('../../tools/translate/translate')))\r\nconst Audio = React.lazy(() => retryTenTimes(() => import('../../tools/audio/audio')))\r\n\r\nconst Row = ({ data: { searchText, start, end, philosopherFullName, philosopherFullName_i10n, markedMode, currentQuote, currentPhilosopher, markedQuotes, setMarkedQuotes, currentData, setCurrentData, index, scrollPosition, setScrollPosition, listRef, darkMode, scheduledPosts, setScheduledQuotes, rowsRendered, setRowsRendered, voiceSpeed, minMode }, style }) => {\r\n    const [AIResponse, setAIResponse] = useState(null)\r\n    const prevCurrentPhilosopher = usePrevious(currentPhilosopher)\r\n    const [openSnackbar] = useSnackbar()\r\n    const { quote: quotationText, id: quotationId } = currentQuote\r\n    const propsToSend = { openSnackbar, searchText, start, end, philosopherFullName, index, philosopherFullName_i10n, darkMode }\r\n    const [localTranslateKey, setLocalTranslateKey] = useState(false)\r\n    const debouncedHandler = useCallback(\r\n        debounce(() => setScrollPosition(parseInt(quotationId)), 500),\r\n        [quotationId, setScrollPosition]\r\n    )\r\n    const rowHandler = useCallback(() => rowClickHandler({ quote: quotationText, openSnackbar, philosopherFullName }), [openSnackbar, philosopherFullName, quotationText])\r\n\r\n    if (prevCurrentPhilosopher && prevCurrentPhilosopher !== currentPhilosopher && rowsRendered === false) {\r\n        setRowsRendered(true)\r\n    }\r\n    console.log('rendered')\r\n    if (!isUndefined(currentQuote))\r\n        return (\r\n            <div role=\"row\" className={styles.row} key={index} style={style} onMouseMove={debouncedHandler} onTouchStart={debouncedHandler}>\r\n                {AIResponse ? (\r\n                    <div>{AIResponse}</div>\r\n                ) : (\r\n                    <>\r\n                        <div role=\"columnheader\" className=\"row\">\r\n                            <span onClick={rowHandler}>{`${index + 1}. \"${quotationText}\" ― ${philosopherFullName}`}</span>\r\n                        </div>\r\n                        <div role=\"columnheader\" className=\"row\">\r\n                            {localTranslateKey ? <Translate inputText={quotationText} {...propsToSend} /> : null}\r\n                        </div>\r\n\r\n                        <div role=\"columnheader\" className={styles.actionItems}>\r\n                            <button>\r\n                                <Link to={ROUTES.image.route} state={{ quotationText, philosopherFullName, signature: 'Instagram: @philosophizetruth' }} style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000' }}>\r\n                                    Download Image\r\n                                </Link>\r\n                            </button>\r\n                            {!minMode && <Audio index={index} currentData={currentData} scrollPosition={scrollPosition} setScrollPosition={setScrollPosition} listRef={listRef} voiceSpeed={voiceSpeed} />}\r\n                            {markedMode && (\r\n                                <Suspense fallback={''}>\r\n                                    <MarkAsRead index={quotationId} currentPhilosopher={currentPhilosopher} markedQuotes={markedQuotes} setMarkedQuotes={setMarkedQuotes} currentData={currentData} setCurrentData={setCurrentData} setLocalTranslateKey={setLocalTranslateKey} />\r\n                                </Suspense>\r\n                            )}\r\n                            {!minMode && (\r\n                                <>\r\n                                    <button onClick={() => setLocalTranslateKey(true)}>Translate</button>\r\n                                    <button>\r\n                                        <Link to={ROUTES.image.route} state={{ quotationText, philosopherFullName, signature: 'Instagram: @philosophizetruth', share: true }} style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000' }}>\r\n                                            Share Image\r\n                                        </Link>\r\n                                    </button>\r\n                                </>\r\n                            )}\r\n                            <button\r\n                                onClick={async () => {\r\n                                    console.log('clicked')\r\n                                    const options = {\r\n                                        method: 'POST',\r\n                                        url: 'https://api.edenai.run/v2/text/topic_extraction',\r\n                                        headers: {\r\n                                            authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNGM1ZWJjMTktMGZlMi00NmU0LWJjM2QtOThkOTdiNTcyYWYxIiwidHlwZSI6ImFwaV90b2tlbiJ9.fQIkRStyHmpBofuqfieRHCnB5y0hhtSeLRh689nWHSs',\r\n                                        },\r\n                                        data: {\r\n                                            show_original_response: false,\r\n                                            fallback_providers: '',\r\n                                            providers: 'google, ibm, openai',\r\n                                            text: `${quotationText} ${philosopherFullName}\r\n                                            What is the meaning of this quote`,\r\n                                            language: 'en',\r\n                                        },\r\n                                    }\r\n\r\n                                    let str = ''\r\n                                    await axios\r\n                                        .request(options)\r\n                                        .then((response) => {\r\n                                            console.log(JSON.stringify(response.data))\r\n                                            const reponsesInArray = Object.values(response.data)\r\n                                            console.log(reponsesInArray.length)\r\n                                            reponsesInArray.forEach((val) => {\r\n                                                console.log(val)\r\n                                                if (val.items[0]?.category) str += `${val.items[0]?.category}`\r\n                                            })\r\n                                        })\r\n                                        .catch((error) => {\r\n                                            console.error(error)\r\n                                        })\r\n                                    setAIResponse(JSON.stringify(str))\r\n                                }}\r\n                            >\r\n                                Describe Quote\r\n                            </button>\r\n                            {/* <button onClick={() => copyURL(openSnackbar, () => setScrollPosition(parseInt(quotationId)))}>Share Link</button> */}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Row\r\n","export function debounce(func, delay) {\r\n    let timer\r\n    return function () {\r\n        const context = this\r\n        const args = arguments\r\n        clearTimeout(timer)\r\n        timer = setTimeout(function () {\r\n            func.apply(context, args)\r\n        }, delay)\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst NoSearchResults = () => (\r\n    <>\r\n        <h4>No search results found!</h4>\r\n\r\n        <div>Guidlines:</div>\r\n\r\n        <div>1. Please check spelling of your search text.</div>\r\n\r\n        <div> 2. Try searching a smaller and a more generic word.</div>\r\n    </>\r\n)\r\nexport default NoSearchResults\r\n","import React from 'react'\r\nimport NoSearchResults from '../../../analysis/no-search-results/no-search-results'\r\n\r\nexport function NoRowsRenderer() {\r\n    return <NoSearchResults />\r\n}\r\n","export const rules = [\r\n    function (value, { start }) {\r\n        if (start <= 20) return 500\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 20 && start <= 40) return 600\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 40 && start <= 60) return 1000\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 60 && start <= 100) return 1400\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 100) return 2000\r\n    },\r\n    function () {\r\n        return 800\r\n    },\r\n]\r\n","import React, { useEffect } from 'react'\r\nimport List from 'react-virtualized/dist/commonjs/List'\r\nimport { ruleEngine } from '../../../../common/utils/ruleEngine'\r\nimport { scrollToQuoteId } from '../../../../common/utils/utils'\r\nimport Row from '../row/row'\r\nimport { NoRowsRenderer } from './utils/listUtils'\r\nimport { rules } from './utils/ruleEngine/rules'\r\nimport { getPhilosopherFullName, getPhilosopherFullName_i10n } from './utils/utils'\r\n\r\nfunction QuotesList({ listRef, width, height, searchText, start, end, markedMode, currentData, setCurrentData, options, currentPhilosopher, markedQuotes, setMarkedQuotes, scrollPosition, setScrollPosition, darkMode, scheduledPosts, setScheduledQuotes, rowsRendered, setRowsRendered, voiceSpeed, minMode }) {\r\n    const philosopherFullName = getPhilosopherFullName({ currentPhilosopher, options })\r\n    const philosopherFullName_i10n = getPhilosopherFullName_i10n({ currentPhilosopher, options })\r\n\r\n    useEffect(() => {\r\n        if (rowsRendered) {\r\n            scrollToQuoteId(listRef, scrollPosition, currentData, currentPhilosopher)\r\n        }\r\n    }, [rowsRendered, currentPhilosopher])\r\n\r\n    useEffect(() => {\r\n        if (listRef.current) {\r\n            scrollToQuoteId(listRef, scrollPosition, currentData, currentPhilosopher)\r\n        }\r\n    }, [listRef?.current])\r\n\r\n    const onRowsRendered = () => {\r\n        if (rowsRendered === false) setRowsRendered(true)\r\n    }\r\n\r\n    function rowRenderer({ index, ...others }) {\r\n        return <Row data={{ searchText, start, end, philosopherFullName, philosopherFullName_i10n, markedMode, currentData, setCurrentData, currentQuote: currentData[index], index, currentPhilosopher, markedQuotes, setMarkedQuotes, scrollPosition, setScrollPosition, darkMode, listRef, scheduledPosts, setScheduledQuotes, rowsRendered, setRowsRendered, voiceSpeed, minMode }} {...others} />\r\n    }\r\n\r\n    return currentPhilosopher && currentData ? <List className=\"List\" height={height} rowCount={currentData.length} rowHeight={ruleEngine.makeDecision(rules, { params: { start } })} width={width} ref={listRef} rowRenderer={rowRenderer} onRowsRendered={onRowsRendered} noRowsRenderer={NoRowsRenderer} style={{ padding: '1rem' }} /> : <></>\r\n}\r\n\r\nexport default QuotesList\r\n","import copy from 'copy-to-clipboard'\r\nimport { useEffect, useRef } from 'react'\r\nimport { insert, setCharAt } from '../../../../../common/utils/stringUtils'\r\n\r\nexport function copyQuoteText(quoteText, philosopherFullName) {\r\n    if (philosopherFullName.toLowerCase().trim() === 'all') {\r\n        let splittingIndex = quoteText.lastIndexOf('― ')\r\n        let updatedQuoteText = setCharAt(quoteText, splittingIndex - 1, '')\r\n        updatedQuoteText = '\"' + updatedQuoteText\r\n        updatedQuoteText = insert(updatedQuoteText, splittingIndex, '\"\\n\\n')\r\n        copy(updatedQuoteText)\r\n    } else copy(`\"${quoteText}\"\\n\\n${philosopherFullName}`)\r\n}\r\n\r\nexport function rowClickHandler({ openSnackbar, philosopherFullName, quote }) {\r\n    copyQuoteText(quote, philosopherFullName)\r\n    openSnackbar('Quote Text Copied!')\r\n}\r\n\r\nexport function devModeSignature() {\r\n    return isAppInDevMode() ? <>dev-mode</> : null\r\n}\r\n\r\nexport function isAppInDevMode() {\r\n    return process.env.NODE_ENV !== 'production'\r\n}\r\n\r\nexport function rowClickHandlerFoBothQuotes({ openSnackbar, quote: { hindi, english }, philosopherNames: { englishFullname, hindiFullname }, index }, event) {\r\n    event.stopPropagation()\r\n    copyBothQuotesText({ hindiQuote: hindi, englishQuote: english }, { englishFullname, hindiFullname })\r\n    openSnackbar('Quote Text Copied!')\r\n}\r\n\r\nexport const copyBothQuotesText = ({ englishQuote, hindiQuote }, { englishFullname, hindiFullname }) => copy(`\"${hindiQuote}\"\\n\\n― ${hindiFullname}\\n\\n\\n\"${englishQuote}\"\\n\\n― ${englishFullname}`)\r\n\r\nexport function usePrevious(value) {\r\n    const ref = useRef(null)\r\n    useEffect(() => {\r\n        ref.current = value\r\n    }, [value])\r\n    return ref.current\r\n}\r\n\r\nexport function copyURL(openSnackbar, callback) {\r\n    callback()\r\n    copy(window.location.href.toString())\r\n    openSnackbar('Quote Link Copied. You can now share!')\r\n}\r\n","export function insert(str, index, value) {\r\n    return str.substr(0, index) + value + str.substr(index);\r\n}\r\n\r\nexport function setCharAt(str, index, chr) {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n}"],"names":["ruleEngine","makeDecision","rules","_ref","value","params","i","length","returnValue","MarkAsRead","React","retryTenTimes","Translate","Audio","_ref$data","data","searchText","start","end","philosopherFullName","philosopherFullName_i10n","markedMode","currentQuote","currentPhilosopher","markedQuotes","setMarkedQuotes","currentData","setCurrentData","index","scrollPosition","setScrollPosition","listRef","darkMode","rowsRendered","scheduledPosts","setScheduledQuotes","setRowsRendered","voiceSpeed","minMode","style","_useState","useState","_useState2","_slicedToArray","AIResponse","setAIResponse","prevCurrentPhilosopher","usePrevious","_useSnackbar","useSnackbar","openSnackbar","quotationText","quote","quotationId","id","propsToSend","_useState3","_useState4","localTranslateKey","setLocalTranslateKey","debouncedHandler","useCallback","func","delay","timer","context","this","args","arguments","clearTimeout","setTimeout","apply","debounce","parseInt","rowHandler","rowClickHandler","console","log","isUndefined","_jsx","role","className","styles","onMouseMove","onTouchStart","children","_jsxs","_Fragment","onClick","concat","_objectSpread","inputText","Link","to","ROUTES","image","route","state","signature","textDecoration","color","Suspense","fallback","share","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","str","wrap","_context","prev","next","method","url","headers","authorization","show_original_response","fallback_providers","providers","text","language","axios","request","then","response","JSON","stringify","reponsesInArray","Object","values","forEach","val","_val$items$","_val$items$2","items","category","catch","error","stop","NoRowsRenderer","NoSearchResults","_ref2","_ref3","_ref4","_ref5","width","height","getPhilosopherFullName","getPhilosopherFullName_i10n","useEffect","scrollToQuoteId","current","List","rowCount","rowHeight","ref","rowRenderer","others","_objectWithoutProperties","_excluded","Row","onRowsRendered","noRowsRenderer","padding","quoteText","toLowerCase","trim","splittingIndex","lastIndexOf","updatedQuoteText","chr","substring","substr","insert","copy","copyQuoteText","useRef"],"sourceRoot":""}