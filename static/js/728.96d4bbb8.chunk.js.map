{"version":3,"file":"static/js/728.96d4bbb8.chunk.js","mappings":"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","sources":["components/organisms/analysis/table/TableBody.js","components/organisms/analysis/table/TableHead.js","components/organisms/analysis/table/useSortableTable.js","components/organisms/analysis/table/table.jsx","components/organisms/analysis/report/report.js","components/organisms/analysis/report/utils/utils.js"],"sourcesContent":["const TableBody = ({ tableData, columns }) => {\r\n    return (\r\n        <tbody>\r\n            {tableData.map((data) => {\r\n                return (\r\n                    <tr key={data.id}>\r\n                        {columns.map(({ accessor }) => {\r\n                            const tData = data[accessor] ? data[accessor] : '——'\r\n                            return <td key={accessor}>{tData}</td>\r\n                        })}\r\n                    </tr>\r\n                )\r\n            })}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default TableBody\r\n","import { useState } from 'react'\r\n\r\nconst TableHead = ({ columns, handleSorting }) => {\r\n    const [sortField, setSortField] = useState('')\r\n    const [order, setOrder] = useState('asc')\r\n\r\n    const handleSortingChange = (accessor) => {\r\n        const sortOrder = accessor === sortField && order === 'asc' ? 'desc' : 'asc'\r\n        setSortField(accessor)\r\n        setOrder(sortOrder)\r\n        handleSorting(accessor, sortOrder)\r\n    }\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {columns.map(({ label, accessor, sortable }) => {\r\n                    const cl = sortable ? (sortField === accessor && order === 'asc' ? 'up' : sortField === accessor && order === 'desc' ? 'down' : 'default') : ''\r\n                    return (\r\n                        <th key={accessor} onClick={sortable ? () => handleSortingChange(accessor) : null} className={cl}>\r\n                            {label}\r\n                        </th>\r\n                    )\r\n                })}\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nexport default TableHead\r\n","import { useEffect, useState } from 'react'\r\n\r\nfunction getDefaultSorting(defaultTableData, columns) {\r\n    const sorted = [...defaultTableData].sort((a, b) => {\r\n        const filterColumn = columns.filter((column) => column.sortbyOrder)\r\n\r\n        let { accessor = 'id', sortbyOrder = 'asc' } = Object.assign({}, ...filterColumn)\r\n\r\n        if (a[accessor] === null) return 1\r\n        if (b[accessor] === null) return -1\r\n        if (a[accessor] === null && b[accessor] === null) return 0\r\n\r\n        const ascending = a[accessor].toString().localeCompare(b[accessor].toString(), 'en', {\r\n            numeric: true,\r\n        })\r\n\r\n        return sortbyOrder === 'asc' ? ascending : -ascending\r\n    })\r\n    return sorted\r\n}\r\n\r\nexport const useSortableTable = (data, columns) => {\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    useEffect(() => {\r\n        setTableData(getDefaultSorting(data, columns))\r\n    }, [data])\r\n\r\n    const handleSorting = (sortField, sortOrder) => {\r\n        if (sortField) {\r\n            const sorted = [...tableData].sort((a, b) => {\r\n                if (a[sortField] === null) return 1\r\n                if (b[sortField] === null) return -1\r\n                if (a[sortField] === null && b[sortField] === null) return 0\r\n                return (\r\n                    a[sortField].toString().localeCompare(b[sortField].toString(), 'en', {\r\n                        numeric: true,\r\n                    }) * (sortOrder === 'asc' ? 1 : -1)\r\n                )\r\n            })\r\n            setTableData(sorted)\r\n        }\r\n    }\r\n\r\n    return [tableData, handleSorting]\r\n}\r\n","import './table.css'\r\nimport TableBody from './TableBody'\r\nimport TableHead from './TableHead'\r\nimport { useSortableTable } from './useSortableTable'\r\n\r\nconst Table = ({ caption, data, columns }) => {\r\n    const [tableData, handleSorting] = useSortableTable(data, columns)\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table\">\r\n                {caption && <caption>{caption}</caption>}\r\n                <TableHead {...{ columns, handleSorting }} />\r\n                <TableBody {...{ columns, tableData }} />\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { onFocusHandler as getPhilosopherJSON } from '../../home/desktop/desktop-header/utils/utils'\r\nimport { setOptionsRedux, setOriginalOptionsRedux } from '../../home/home-page/homePageRedux/homePageRedux'\r\nimport { setThemeClassNameOnHTMLTag } from '../../home/home-page/utils/utils'\r\nimport Table from '../table/table'\r\nimport columns from './columns.json'\r\nimport { createData } from './utils/utils'\r\n\r\nconst Report = () => {\r\n    const [data, setData] = useState([])\r\n    const dispatch = useDispatch()\r\n    const markedQuotes = useSelector((state) => state.philosophersData.markedQuotes)\r\n    const options = useSelector((state) => state.philosophersData.options)\r\n    const darkMode = useSelector((state) => state.philosophersData.darkMode)\r\n    const originalOptions = useSelector((state) => state?.philosophersData?.originalOptions)\r\n    const setOriginalOptions = (value) => dispatch(setOriginalOptionsRedux(value))\r\n    const setOptions = (value) => dispatch(setOptionsRedux(value))\r\n    const sorting = useSelector((state) => state.philosophersData.sorting)\r\n\r\n    useEffect(() => {\r\n        getPhilosopherJSON({ options, setOptions, originalOptions, setOriginalOptions, sorting })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        createData({ markedQuotes, options, setData })\r\n    }, [options.length])\r\n\r\n    useEffect(() => {\r\n        setThemeClassNameOnHTMLTag(darkMode)\r\n    }, [darkMode])\r\n\r\n    return data.length > 0 ? (\r\n        <Table data={data} columns={columns} />\r\n    ) : (\r\n        <>\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100vh', fontSize: '2rem', margin: '3rem' }}>No records found!</div>\r\n            <div style={{ fontSize: '2rem', margin: '3rem' }}>Please use, marked mode feature, mark quotes as read and come back.</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Report\r\n","import { getPhilosopherObjectIndex } from '../../../../../common/static/utils/utils'\r\nimport { isUndefined, uuidv4 } from '../../../../../common/utils/commonUtils'\r\nimport { getPhilosopherFullName } from '../../../home/quotes-list/utils/utils'\r\n\r\nexport const createData = ({ markedQuotes, options, setData }) => {\r\n    const data = []\r\n    let sum = 0\r\n    for (const key in markedQuotes) {\r\n        if (markedQuotes.hasOwnProperty(key) && getPhilosopherObjectIndex(key, options) !== -1) {\r\n            let readCount = 0\r\n            if (!isUndefined(markedQuotes[key])) {\r\n                readCount = markedQuotes[key].length\r\n                sum += readCount\r\n            }\r\n            const obj = { philosopher: getPhilosopherFullName({ currentPhilosopher: key, options }), readCount: readCount, id: uuidv4() }\r\n            data.push(obj)\r\n        }\r\n    }\r\n    const obj = { philosopher: 'Total Read', readCount: sum, id: uuidv4() }\r\n    data.push(obj)\r\n    setData(data)\r\n}\r\n"],"names":["_ref","tableData","columns","_jsx","children","map","data","_ref2","accessor","tData","id","handleSorting","_useState","useState","_useState2","_slicedToArray","sortField","setSortField","_useState3","_useState4","order","setOrder","label","sortable","cl","onClick","sortOrder","handleSortingChange","className","useSortableTable","setTableData","useEffect","defaultTableData","_toConsumableArray","sort","a","b","filterColumn","filter","column","sortbyOrder","_Object$assign","Object","assign","apply","concat","_Object$assign$access","_Object$assign$sortby","ascending","toString","localeCompare","numeric","getDefaultSorting","sorted","caption","_useSortableTable","_useSortableTable2","_Fragment","_jsxs","TableHead","TableBody","setData","dispatch","useDispatch","markedQuotes","useSelector","state","philosophersData","options","darkMode","originalOptions","_state$philosophersDa","setOriginalOptions","value","setOriginalOptionsRedux","setOptions","setOptionsRedux","sorting","getPhilosopherJSON","sum","key","hasOwnProperty","getPhilosopherObjectIndex","readCount","isUndefined","length","obj","philosopher","getPhilosopherFullName","currentPhilosopher","uuidv4","push","createData","setThemeClassNameOnHTMLTag","Table","style","display","alignItems","justifyContent","height","fontSize","margin"],"sourceRoot":""}