{"version":3,"file":"static/js/Modal.b5fa8120.chunk.js","mappings":"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","sources":["webpack://quotes/./src/common/components/modal/modal.module.css?0533","common/components/modal/modal.jsx","common/utils/commonUtils.js","common/utils/localStorageUtils.js","common/utils/staticDataUtils.js","common/utils/utils.js","components/organisms/home/quotes-list/utils/utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalContainer\":\"modal_modalContainer__lvRIc\",\"close\":\"modal_close__w35Nl\",\"desktopCloseBtn\":\"modal_desktopCloseBtn__L8AA3\",\"lightMode\":\"modal_lightMode__ayeZe\",\"titleBar\":\"modal_titleBar__+I0Z-\",\"title\":\"modal_title__ZytCK\"};","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { isDesktop } from '../../utils/utils'\nimport styles from './modal.module.css'\nimport { setCurrentModalName } from './modalRedux'\n\nconst Modal = ({ children, title }) => {\n    const dispatch = useDispatch()\n    const darkMode = useSelector((state) => state?.philosophersData?.darkMode)\n\n    return (\n        <div className={`${styles.modalContainer} ${darkMode ? styles.darkMode : styles.lightMode}`}>\n            <div className={styles.titleBar}>\n                <span className={styles.title}>{title}</span>\n                <button className={`${styles.close} ${isDesktop() ? styles.desktopCloseBtn : ''}`} onClick={useCallback(() => dispatch(setCurrentModalName(''), []))}>\n                    X\n                </button>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport default Modal\n","export const isUndefined = (value) => typeof value === 'undefined'\nexport const isObjEmpty = (obj) => Object.values(obj).length === 0 && obj.constructor === Object\n\nexport function uuidv4() {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) => (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16))\n}\n","import { useEffect, useState } from 'react'\n\nexport function getStorageValue(key, defaultValue) {\n    const saved = localStorage.getItem(key)\n    const initial = JSON.parse(saved)\n    if (initial === undefined || initial === 'undefined' || initial === 'null' || initial === null) {\n        return defaultValue\n    } else return initial\n}\n\nexport function setStorageValue(key, value) {\n    localStorage.setItem(key, JSON.stringify(value))\n}\n\nexport const useLocalStorage = (key, defaultValue) => {\n    const [value, setValue] = useState(() => {\n        return getStorageValue(key, defaultValue)\n    })\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value))\n    }, [key, value])\n\n    return [value, setValue]\n}\n","import { getStorageValue } from './localStorageUtils'\n\nexport const removeReadData = ({ index, currentPhilosopher, markedMode, markedQuotes = {}, setMarkedQuotes, currentData, setCurrentData }) => {\n    let newMarkedQuotes = JSON.parse(JSON.stringify(markedQuotes))\n    let readQuotesArray = []\n\n    const READ_ARRAY_LOCALSTORAGE_KEY = `${currentPhilosopher}-MARKED_AS_READ`\n    readQuotesArray = getStorageValue(READ_ARRAY_LOCALSTORAGE_KEY, [])\n\n    if (markedQuotes && markedQuotes[currentPhilosopher] !== undefined) {\n        readQuotesArray = [...readQuotesArray, ...markedQuotes[currentPhilosopher]]\n    }\n\n    readQuotesArray = [...new Set(readQuotesArray)]\n\n    if (index) {\n        readQuotesArray.push(index)\n    }\n\n    newMarkedQuotes[currentPhilosopher] = readQuotesArray\n    setMarkedQuotes(newMarkedQuotes)\n\n    const newData = currentData.filter(({ id }, _) => readQuotesArray.indexOf(id) === -1)\n    setCurrentData(JSON.parse(JSON.stringify(newData)))\n}\n","import { changeQuotesData } from '../../components/organisms/home/quotes-list/utils/utils'\n\nexport const scrollToFirstRow = (listRef) => {\n    if (listRef.current) {\n        listRef.current.scrollToRow(0)\n    }\n}\n\nexport const scrollToMemorizedRow = (listRef, scrollPosition, currentData) => {\n    if (currentData?.length > 0 && listRef.current) {\n        if (scrollPosition !== undefined && scrollPosition !== 'undefined' && scrollPosition && scrollPosition > 0) {\n            listRef.current.scrollToRow(scrollPosition)\n        } else {\n            scrollToFirstRow(listRef)\n        }\n    }\n}\n\nexport const scrollToQuoteId = (listRef, scrollObject, currentData, currentPhilosopher) => {\n    const quoteId = scrollObject[currentPhilosopher]\n    if (currentData?.length > 0 && listRef.current) {\n        if (quoteId !== undefined && quoteId !== 'undefined' && quoteId && quoteId > 0) {\n            const index = currentData.findIndex(({ id }) => {\n                return id === quoteId\n            })\n            if (index > -1) listRef.current.scrollToRow(index)\n        } else {\n            scrollToFirstRow(listRef)\n        }\n    }\n}\n\nexport const search = ({ searchText, start, end, setCurrentData, searchFilters, markedMode, markedQuotes, setMarkedQuotes, currentData, currentPhilosopher }) => {\n    return new Promise((resolve) => {\n        if (currentData !== undefined) {\n            let worker\n            if (window.Worker) {\n                worker = new Worker(new URL('../web-workers/filter-worker.js', import.meta.url))\n            } else {\n                alert(\"Your browser doesn't support web workers.\")\n            }\n\n            if (typeof start === 'string' && start.trim() === '') start = 0\n            worker.postMessage({ currentData, searchText, searchFilters, end, start })\n            worker.onmessage = (event) => {\n                const filteredQuotesFromWorker = JSON.parse(eval(`(${JSON.stringify(event.data)})`))\n                worker?.terminate()\n                changeQuotesData({ currentData: filteredQuotesFromWorker, setCurrentData, currentPhilosopher }, { markedMode, markedQuotes, setMarkedQuotes })\n                resolve()\n            }\n        }\n    })\n}\n\nexport const isMobile = () => window.innerWidth <= 600\n\nexport const isDesktop = () => window.innerWidth >= 600\n","import { isObjEmpty } from '../../../../../common/utils/commonUtils'\nimport { removeReadData } from '../../../../../common/utils/staticDataUtils'\n\nexport const changeQuotesData = ({ currentPhilosopher, currentData, setCurrentData, options }, { markedMode = null, markedQuotes, setMarkedQuotes }) => {\n    if (currentData) setCurrentData(currentData)\n    if (markedMode !== undefined && markedMode) removeReadData({ currentPhilosopher, markedMode, markedQuotes, setMarkedQuotes, currentData, setCurrentData })\n}\n\nexport const getPhilosopherFullName = ({ currentPhilosopher, options }) => {\n    const currentIndex = options.filter(({ value }) => currentPhilosopher === value)\n    if (!isObjEmpty(currentIndex)) return currentIndex && currentIndex[0].fullName\n}\n\nexport const getPhilosopherFullName_i10n = ({ currentPhilosopher, options }) => {\n    const currentIndex = options.filter(({ value }) => currentPhilosopher === value)\n    if (!isObjEmpty(currentIndex)) return currentIndex && currentIndex[0].fullNameInOtherLanguages\n}\n\nexport function getWordCount(str) {\n    return str.split(' ').filter(function (n) {\n        return n !== ''\n    }).length\n}\n"],"names":["_ref","children","title","dispatch","useDispatch","darkMode","useSelector","state","_state$philosophersDa","philosophersData","_jsxs","className","styles","modalContainer","lightMode","titleBar","_jsx","close","isDesktop","desktopCloseBtn","onClick","useCallback","setCurrentModalName","isUndefined","value","isObjEmpty","obj","Object","values","length","constructor","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","getStorageValue","key","defaultValue","saved","localStorage","getItem","initial","JSON","parse","undefined","removeReadData","index","currentPhilosopher","markedMode","markedQuotes","setMarkedQuotes","currentData","setCurrentData","newMarkedQuotes","stringify","readQuotesArray","Set","push","newData","filter","_ref2","_","id","indexOf","scrollToFirstRow","listRef","current","scrollToRow","scrollToMemorizedRow","scrollPosition","scrollToQuoteId","scrollObject","quoteId","findIndex","search","searchText","start","end","searchFilters","Promise","resolve","worker","window","Worker","URL","alert","trim","postMessage","onmessage","event","_worker","filteredQuotesFromWorker","eval","data","terminate","changeQuotesData","isMobile","innerWidth","options","getPhilosopherFullName","_ref3","currentIndex","_ref4","fullName","getPhilosopherFullName_i10n","_ref5","_ref6","fullNameInOtherLanguages","getWordCount","str","split","n"],"sourceRoot":""}