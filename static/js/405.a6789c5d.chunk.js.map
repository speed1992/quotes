{"version":3,"file":"static/js/405.a6789c5d.chunk.js","mappings":"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","sources":["components/organisms/home/mobile/mobile-menu/mobile-menu.js"],"sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSnackbar } from 'react-simple-snackbar'\r\nimport ROUTES from '../../../../../common/routes/routes'\r\nimport { retryTenTimes } from '../../../../../common/utils/apiUtils'\r\nimport { ALPHABETICAL, LATEST } from '../../home-page/constants/constants'\r\nimport { setVoiceSpeedRedux } from '../../home-page/homePageRedux/homePageRedux'\r\nimport './mobile-menu.css'\r\nconst BuildInfo = React.lazy(() => retryTenTimes(() => import('../../../tools/build-info/build-info')))\r\nconst LoginRegister = React.lazy(() => retryTenTimes(() => import('../login-register/login-register')))\r\nconst OutsideAlerter = React.lazy(() => retryTenTimes(() => import('../../../../../common/components/outside-alerter/outside-alerter')))\r\n\r\nfunction MobileMenu({ markedMode, setMarkedMode, visible, toggleVisible, darkMode, setDarkMode, setSorting, sorting, userName, setUserName, setMarkedQuotes, isLoggedIn, setIsLoggedIn, password, setPassword, setIsFetching }) {\r\n    const voiceSpeed = useSelector(({ philosophersData: { voiceSpeed } }) => voiceSpeed)\r\n    const markedQuotes = useSelector(({ philosophersData: { markedQuotes } }) => markedQuotes)\r\n    const [openSnackbar] = useSnackbar()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onClickSortButtonHandler = (event) => {\r\n        const id = event.target.id\r\n\r\n        if (id === LATEST) setSorting(LATEST)\r\n        else setSorting(ALPHABETICAL)\r\n    }\r\n\r\n    return (\r\n        <OutsideAlerter callback={() => toggleVisible(false)}>\r\n            <ul id=\"slide_menu\" style={{ display: visible ? 'block' : 'none' }}>\r\n                <li>\r\n                    Sort philosophers\r\n                    <div>\r\n                        <input type=\"radio\" id={LATEST} name=\"sortType\" onClick={onClickSortButtonHandler} defaultChecked={sorting === LATEST ? true : false} />\r\n                        <label htmlFor={LATEST}>Latest</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"radio\" id={ALPHABETICAL} name=\"sortType\" onClick={onClickSortButtonHandler} defaultChecked={sorting === ALPHABETICAL ? true : false} />\r\n                        <label htmlFor={ALPHABETICAL}>Alphabetical</label>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    Marked Mode\r\n                    <input type=\"checkbox\" checked={markedMode} onChange={({ target: { checked } }) => setMarkedMode(checked)} />\r\n                </li>\r\n                <li>\r\n                    Dark Mode\r\n                    <input type=\"checkbox\" checked={darkMode} onChange={({ target: { checked } }) => setDarkMode(checked)} />\r\n                </li>\r\n                <li>\r\n                    Voice Speed[1-20]\r\n                    <input onChange={(event) => dispatch(setVoiceSpeedRedux(event.target.value / 10))} className=\"voiceSpeed\" type=\"number\" value={voiceSpeed ? voiceSpeed * 10 : ''} />\r\n                </li>\r\n                <li>\r\n                    <Link to={ROUTES.report.route} style={{ textDecoration: 'none', color: '#000' }}>\r\n                        <button>Open Report</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <LoginRegister {...{ setUserName, userName, openSnackbar, isLoggedIn, setIsLoggedIn, setMarkedQuotes, markedQuotes, password, setPassword, setIsFetching }} />\r\n                    {!isLoggedIn && <div className=\"backupNote\">You can login to backup your marked quotes in database in case browser data gets deleted.</div>}\r\n                </li>\r\n                <li>\r\n                    <BuildInfo />\r\n                </li>\r\n            </ul>\r\n        </OutsideAlerter>\r\n    )\r\n}\r\n\r\nexport default MobileMenu\r\n"],"names":["BuildInfo","React","retryTenTimes","LoginRegister","OutsideAlerter","_ref","markedMode","setMarkedMode","visible","toggleVisible","darkMode","setDarkMode","setSorting","sorting","userName","setUserName","setMarkedQuotes","isLoggedIn","setIsLoggedIn","password","setPassword","setIsFetching","voiceSpeed","useSelector","_ref2","philosophersData","markedQuotes","_ref3","_useSnackbar","useSnackbar","openSnackbar","_slicedToArray","dispatch","useDispatch","onClickSortButtonHandler","event","target","id","LATEST","ALPHABETICAL","_jsx","callback","children","_jsxs","style","display","type","name","onClick","defaultChecked","htmlFor","checked","onChange","_ref4","_ref5","setVoiceSpeedRedux","value","className","Link","to","ROUTES","report","route","textDecoration","color"],"sourceRoot":""}