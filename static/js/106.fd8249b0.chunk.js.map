{"version":3,"file":"static/js/106.fd8249b0.chunk.js","mappings":"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","sources":["common/utils/ruleEngine.js","webpack://quotes/./src/common/small-loader/small-loader.module.css?1d92","common/small-loader/small-loader.js","webpack://quotes/./src/components/organisms/home/row/styles/row.module.css?d653","components/organisms/home/row/row.js","common/utils/debounce.js","components/organisms/analysis/no-search-results/no-search-results.jsx","components/organisms/home/quotes-list/utils/listUtils.js","components/organisms/home/quotes-list/utils/ruleEngine/rules.js","components/organisms/home/quotes-list/quotes-list.jsx","components/organisms/home/row/utils/utils.js","common/utils/stringUtils.js"],"sourcesContent":["export const ruleEngine = {\r\n    makeDecision: function (rules, { value, params }) {\r\n        for (let i = 0; i <= rules.length; i++) {\r\n            const returnValue = rules[i](value, params)\r\n            if (returnValue) return returnValue\r\n        }\r\n    },\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"small-loader_loader__ulY5G\",\"spin\":\"small-loader_spin__SOsfI\",\"darkTheme\":\"small-loader_darkTheme__z-xia\"};","import React from 'react'\r\nimport styles from './small-loader.module.css'\r\n\r\nconst SmallLoader = ({ darkMode }) => {\r\n    console.log(darkMode)\r\n    return <span className={`${styles.loader} ${darkMode ? styles.darkTheme : ''}`}> </span>\r\n}\r\n\r\nexport default SmallLoader\r\n","// extracted by mini-css-extract-plugin\nexport default {\"actionItems\":\"row_actionItems__Y-npM\",\"row\":\"row_row__G696K\",\"quoteDescription\":\"row_quoteDescription__tvqXE\"};","import axios from 'axios'\r\nimport React, { Suspense, useCallback, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport useSnackbar from '../../../../common/components/snackbar/useSnackbar'\r\nimport ROUTES from '../../../../common/routes/routes'\r\nimport SmallLoader from '../../../../common/small-loader/small-loader'\r\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\r\nimport { isUndefined } from '../../../../common/utils/commonUtils'\r\nimport { debounce } from '../../../../common/utils/debounce'\r\nimport styles from './styles/row.module.css'\r\nimport { rowClickHandler, usePrevious } from './utils/utils'\r\nconst MarkAsRead = React.lazy(() => retryTenTimes(() => import('../../tools/mark-as-read/mark-as-read')))\r\nconst Translate = React.lazy(() => retryTenTimes(() => import('../../tools/translate/translate')))\r\nconst Audio = React.lazy(() => retryTenTimes(() => import('../../tools/audio/audio')))\r\n\r\nconst Row = ({ data: { searchText, start, end, philosopherFullName, philosopherFullName_i10n, markedMode, currentQuote, currentPhilosopher, markedQuotes, setMarkedQuotes, currentData, setCurrentData, index, scrollPosition, setScrollPosition, listRef, darkMode, scheduledPosts, setScheduledQuotes, rowsRendered, setRowsRendered, voiceSpeed, minMode }, style }) => {\r\n    const [isLocalFetching, setIsLocalFetching] = useState({ button: '', status: false })\r\n    const [AIResponse, setAIResponse] = useState(null)\r\n    const prevCurrentPhilosopher = usePrevious(currentPhilosopher)\r\n    const [openSnackbar] = useSnackbar()\r\n    const { quote: quotationText, id: quotationId } = currentQuote\r\n    const propsToSend = { openSnackbar, searchText, start, end, philosopherFullName, index, philosopherFullName_i10n, darkMode, setIsLocalFetching }\r\n    const [localTranslateKey, setLocalTranslateKey] = useState(false)\r\n    const debouncedHandler = useCallback(\r\n        debounce(() => setScrollPosition(parseInt(quotationId)), 500),\r\n        [quotationId, setScrollPosition]\r\n    )\r\n    const rowHandler = useCallback(() => rowClickHandler({ quote: quotationText, openSnackbar, philosopherFullName }), [openSnackbar, philosopherFullName, quotationText])\r\n\r\n    if (prevCurrentPhilosopher && prevCurrentPhilosopher !== currentPhilosopher && rowsRendered === false) {\r\n        setRowsRendered(true)\r\n    }\r\n\r\n    if (!isUndefined(currentQuote))\r\n        return (\r\n            <div role=\"row\" className={styles.row} key={index} style={style} onMouseMove={debouncedHandler} onTouchStart={debouncedHandler}>\r\n                {AIResponse ? (\r\n                    <>\r\n                        <div>{AIResponse}</div>\r\n                        <div className={styles.quoteDescription}>\r\n                            <button onClick={() => setAIResponse(null)}>Close Description</button>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div role=\"columnheader\" className=\"row\">\r\n                            <span onClick={rowHandler}>{`${index + 1}. \"${quotationText}\" ― ${philosopherFullName}`}</span>\r\n                        </div>\r\n                        <div role=\"columnheader\" className=\"row\">\r\n                            {localTranslateKey ? <Translate inputText={quotationText} {...propsToSend} /> : null}\r\n                        </div>\r\n\r\n                        <div role=\"columnheader\" className={styles.actionItems}>\r\n                            <button>\r\n                                <Link to={ROUTES.image.route} state={{ quotationText, philosopherFullName, signature: 'Instagram: @philosophizetruth' }} style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000' }}>\r\n                                    Download Image\r\n                                </Link>\r\n                            </button>\r\n                            {!minMode && <Audio index={index} currentData={currentData} scrollPosition={scrollPosition} setScrollPosition={setScrollPosition} listRef={listRef} voiceSpeed={voiceSpeed} />}\r\n                            {markedMode && (\r\n                                <Suspense fallback={''}>\r\n                                    <MarkAsRead index={quotationId} currentPhilosopher={currentPhilosopher} markedQuotes={markedQuotes} setMarkedQuotes={setMarkedQuotes} currentData={currentData} setCurrentData={setCurrentData} setLocalTranslateKey={setLocalTranslateKey} />\r\n                                </Suspense>\r\n                            )}\r\n                            {!minMode && (\r\n                                <>\r\n                                    <button onClick={() => setLocalTranslateKey(true)}>Translate {isLocalFetching.button === 'translate' && isLocalFetching.status && <SmallLoader darkMode />}</button>\r\n                                    <button>\r\n                                        <Link to={ROUTES.image.route} state={{ quotationText, philosopherFullName, signature: 'Instagram: @philosophizetruth', share: true }} style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000' }}>\r\n                                            Share Image\r\n                                        </Link>\r\n                                    </button>\r\n                                </>\r\n                            )}\r\n                            <button\r\n                                onClick={async () => {\r\n                                    setIsLocalFetching({ button: 'describe_quote', status: true })\r\n                                    const options = {\r\n                                        method: 'POST',\r\n                                        url: 'https://api.edenai.run/v2/text/topic_extraction',\r\n                                        headers: {\r\n                                            authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNGM1ZWJjMTktMGZlMi00NmU0LWJjM2QtOThkOTdiNTcyYWYxIiwidHlwZSI6ImFwaV90b2tlbiJ9.fQIkRStyHmpBofuqfieRHCnB5y0hhtSeLRh689nWHSs',\r\n                                        },\r\n                                        data: {\r\n                                            show_original_response: false,\r\n                                            fallback_providers: '',\r\n                                            providers: 'google, ibm, openai',\r\n                                            text: `${quotationText} ${philosopherFullName}\r\n                                            What is the meaning of this quote`,\r\n                                            language: 'en',\r\n                                        },\r\n                                    }\r\n\r\n                                    let str = ''\r\n                                    await axios\r\n                                        ?.request(options)\r\n                                        ?.then((response) => {\r\n                                            const reponsesInArray = Object.values(response.data)\r\n                                            reponsesInArray.forEach((val) => {\r\n                                                if (val.items[0]?.category) str += `${val.items[0]?.category}`\r\n                                            })\r\n                                        })\r\n                                        .catch((error) => {\r\n                                            console.error(error)\r\n                                        })\r\n                                    setIsLocalFetching({ button: '', status: false })\r\n                                    setAIResponse(JSON.stringify(str))\r\n                                }}\r\n                            >\r\n                                Describe Quote {isLocalFetching?.button === 'describe_quote' && isLocalFetching?.status && <SmallLoader darkMode />}\r\n                            </button>\r\n                            {/* <button onClick={() => copyURL(openSnackbar, () => setScrollPosition(parseInt(quotationId)))}>Share Link</button> */}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Row\r\n","export function debounce(func, delay) {\r\n    let timer\r\n    return function () {\r\n        const context = this\r\n        const args = arguments\r\n        clearTimeout(timer)\r\n        timer = setTimeout(function () {\r\n            func.apply(context, args)\r\n        }, delay)\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst NoSearchResults = () => (\r\n    <>\r\n        <h4>No search results found!</h4>\r\n\r\n        <div>Guidlines:</div>\r\n\r\n        <div>1. Please check spelling of your search text.</div>\r\n\r\n        <div> 2. Try searching a smaller and a more generic word.</div>\r\n    </>\r\n)\r\nexport default NoSearchResults\r\n","import React from 'react'\r\nimport NoSearchResults from '../../../analysis/no-search-results/no-search-results'\r\n\r\nexport function NoRowsRenderer() {\r\n    return <NoSearchResults />\r\n}\r\n","export const rules = [\r\n    function (value, { start }) {\r\n        if (start <= 20) return 500\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 20 && start <= 40) return 600\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 40 && start <= 60) return 1000\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 60 && start <= 100) return 1400\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 100) return 2000\r\n    },\r\n    function () {\r\n        return 800\r\n    },\r\n]\r\n","import React, { useEffect } from 'react'\r\nimport List from 'react-virtualized/dist/commonjs/List'\r\nimport { ruleEngine } from '../../../../common/utils/ruleEngine'\r\nimport { scrollToQuoteId } from '../../../../common/utils/utils'\r\nimport Row from '../row/row'\r\nimport { NoRowsRenderer } from './utils/listUtils'\r\nimport { rules } from './utils/ruleEngine/rules'\r\nimport { getPhilosopherFullName, getPhilosopherFullName_i10n } from './utils/utils'\r\n\r\nfunction QuotesList({ listRef, width, height, searchText, start, end, markedMode, currentData, setCurrentData, options, currentPhilosopher, markedQuotes, setMarkedQuotes, scrollPosition, setScrollPosition, darkMode, scheduledPosts, setScheduledQuotes, rowsRendered, setRowsRendered, voiceSpeed, minMode }) {\r\n    const philosopherFullName = getPhilosopherFullName({ currentPhilosopher, options })\r\n    const philosopherFullName_i10n = getPhilosopherFullName_i10n({ currentPhilosopher, options })\r\n\r\n    useEffect(() => {\r\n        if (rowsRendered) {\r\n            scrollToQuoteId(listRef, scrollPosition, currentData, currentPhilosopher)\r\n        }\r\n    }, [rowsRendered, currentPhilosopher])\r\n\r\n    useEffect(() => {\r\n        if (listRef.current) {\r\n            scrollToQuoteId(listRef, scrollPosition, currentData, currentPhilosopher)\r\n        }\r\n    }, [listRef?.current])\r\n\r\n    const onRowsRendered = () => {\r\n        if (rowsRendered === false) setRowsRendered(true)\r\n    }\r\n\r\n    function rowRenderer({ index, ...others }) {\r\n        return <Row data={{ searchText, start, end, philosopherFullName, philosopherFullName_i10n, markedMode, currentData, setCurrentData, currentQuote: currentData[index], index, currentPhilosopher, markedQuotes, setMarkedQuotes, scrollPosition, setScrollPosition, darkMode, listRef, scheduledPosts, setScheduledQuotes, rowsRendered, setRowsRendered, voiceSpeed, minMode }} {...others} />\r\n    }\r\n\r\n    return currentPhilosopher && currentData ? <List className=\"List\" height={height} rowCount={currentData.length} rowHeight={ruleEngine.makeDecision(rules, { params: { start } })} width={width} ref={listRef} rowRenderer={rowRenderer} onRowsRendered={onRowsRendered} noRowsRenderer={NoRowsRenderer} style={{ padding: '1rem' }} /> : <></>\r\n}\r\n\r\nexport default QuotesList\r\n","import copy from 'copy-to-clipboard'\r\nimport { useEffect, useRef } from 'react'\r\nimport { insert, setCharAt } from '../../../../../common/utils/stringUtils'\r\n\r\nexport function copyQuoteText(quoteText, philosopherFullName) {\r\n    if (philosopherFullName.toLowerCase().trim() === 'all') {\r\n        let splittingIndex = quoteText.lastIndexOf('― ')\r\n        let updatedQuoteText = setCharAt(quoteText, splittingIndex - 1, '')\r\n        updatedQuoteText = '\"' + updatedQuoteText\r\n        updatedQuoteText = insert(updatedQuoteText, splittingIndex, '\"\\n\\n')\r\n        copy(updatedQuoteText)\r\n    } else copy(`\"${quoteText}\"\\n\\n${philosopherFullName}`)\r\n}\r\n\r\nexport function rowClickHandler({ openSnackbar, philosopherFullName, quote }) {\r\n    copyQuoteText(quote, philosopherFullName)\r\n    openSnackbar('Quote Text Copied!')\r\n}\r\n\r\nexport function devModeSignature() {\r\n    return isAppInDevMode() ? <>dev-mode</> : null\r\n}\r\n\r\nexport function isAppInDevMode() {\r\n    return process.env.NODE_ENV !== 'production'\r\n}\r\n\r\nexport function rowClickHandlerFoBothQuotes({ openSnackbar, quote: { hindi, english }, philosopherNames: { englishFullname, hindiFullname }, index }, event) {\r\n    event.stopPropagation()\r\n    copyBothQuotesText({ hindiQuote: hindi, englishQuote: english }, { englishFullname, hindiFullname })\r\n    openSnackbar('Quote Text Copied!')\r\n}\r\n\r\nexport const copyBothQuotesText = ({ englishQuote, hindiQuote }, { englishFullname, hindiFullname }) => copy(`\"${hindiQuote}\"\\n\\n― ${hindiFullname}\\n\\n\\n\"${englishQuote}\"\\n\\n― ${englishFullname}`)\r\n\r\nexport function usePrevious(value) {\r\n    const ref = useRef(null)\r\n    useEffect(() => {\r\n        ref.current = value\r\n    }, [value])\r\n    return ref.current\r\n}\r\n\r\nexport function copyURL(openSnackbar, callback) {\r\n    callback()\r\n    copy(window.location.href.toString())\r\n    openSnackbar('Quote Link Copied. You can now share!')\r\n}\r\n","export function insert(str, index, value) {\r\n    return str.substr(0, index) + value + str.substr(index);\r\n}\r\n\r\nexport function setCharAt(str, index, chr) {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n}"],"names":["ruleEngine","makeDecision","rules","_ref","value","params","i","length","returnValue","darkMode","console","log","_jsx","className","concat","styles","children","MarkAsRead","React","retryTenTimes","Translate","Audio","_ref$data","data","searchText","start","end","philosopherFullName","philosopherFullName_i10n","markedMode","currentQuote","currentPhilosopher","markedQuotes","setMarkedQuotes","currentData","setCurrentData","index","scrollPosition","setScrollPosition","listRef","rowsRendered","scheduledPosts","setScheduledQuotes","setRowsRendered","voiceSpeed","minMode","style","_useState","useState","button","status","_useState2","_slicedToArray","isLocalFetching","setIsLocalFetching","_useState3","_useState4","AIResponse","setAIResponse","prevCurrentPhilosopher","usePrevious","_useSnackbar","useSnackbar","openSnackbar","quotationText","quote","quotationId","id","propsToSend","_useState5","_useState6","localTranslateKey","setLocalTranslateKey","debouncedHandler","useCallback","func","delay","timer","context","this","args","arguments","clearTimeout","setTimeout","apply","debounce","parseInt","rowHandler","rowClickHandler","isUndefined","role","onMouseMove","onTouchStart","_jsxs","_Fragment","onClick","_objectSpread","inputText","Link","to","ROUTES","image","route","state","signature","textDecoration","color","Suspense","fallback","SmallLoader","share","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_axios$request","options","str","wrap","_context","prev","next","method","url","headers","authorization","show_original_response","fallback_providers","providers","text","language","axios","request","then","response","Object","values","forEach","val","_val$items$","_val$items$2","items","category","catch","error","JSON","stringify","stop","NoRowsRenderer","NoSearchResults","_ref2","_ref3","_ref4","_ref5","width","height","getPhilosopherFullName","getPhilosopherFullName_i10n","useEffect","scrollToQuoteId","current","List","rowCount","rowHeight","ref","rowRenderer","others","_objectWithoutProperties","_excluded","Row","onRowsRendered","noRowsRenderer","padding","quoteText","toLowerCase","trim","splittingIndex","lastIndexOf","updatedQuoteText","chr","substring","substr","insert","copy","copyQuoteText","useRef"],"sourceRoot":""}