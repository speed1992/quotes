{"version":3,"file":"static/js/157.09fa90a8.chunk.js","mappings":"oIAAO,IAAMA,EAAa,CACtBC,aAAc,SAAUC,EAAKC,GACzB,IAD+C,IAAlBC,EAAKD,EAALC,MAAOC,EAAMF,EAANE,OAC3BC,EAAI,EAAGA,GAAKJ,EAAMK,OAAQD,IAAK,CACpC,IAAME,EAAcN,EAAMI,GAAGF,EAAOC,GACpC,GAAIG,EAAa,OAAOA,CAC5B,CACJ,E,8LCLJ,MAA8B,yBCDvB,SAASC,EAAmBC,GAC/B,OAAQA,EAAQ,EAAI,cAAgB,cACxC,C,uBCQMC,EAAaC,EAAAA,MAAW,kBAAMC,EAAAA,EAAAA,KAAc,kBAAM,6BAA+C,GAAC,IAClGC,EAAYF,EAAAA,MAAW,kBAAMC,EAAAA,EAAAA,KAAc,kBAAM,6BAAyC,GAAC,IAC3FE,EAAQH,EAAAA,MAAW,kBAAMC,EAAAA,EAAAA,KAAc,kBAAM,6BAAiC,GAAC,IAmDrF,EAjDY,SAAHV,GAA8U,IAADa,EAAAb,EAAvUc,KAAQC,EAAUF,EAAVE,WAAYC,EAAKH,EAALG,MAAOC,EAAGJ,EAAHI,IAAKC,EAAmBL,EAAnBK,oBAAqBC,EAAwBN,EAAxBM,yBAA0BC,EAAUP,EAAVO,WAAYC,EAAYR,EAAZQ,aAAcC,EAAkBT,EAAlBS,mBAAoBC,EAAYV,EAAZU,aAAcC,EAAeX,EAAfW,gBAAiBC,EAAWZ,EAAXY,YAAaC,EAAcb,EAAda,eAAgBnB,EAAKM,EAALN,MAAOoB,EAAcd,EAAdc,eAAgBC,EAAiBf,EAAjBe,kBAAmBC,EAAOhB,EAAPgB,QAASC,EAAQjB,EAARiB,SAA8CC,GAAtBlB,EAAdmB,eAAkCnB,EAAlBoB,mBAAgCpB,EAAZkB,cAAcG,EAAerB,EAAfqB,gBAAmBC,EAAKnC,EAALmC,MAChUC,GAAyBC,EAAAA,EAAAA,IAAYf,GAC3CgB,GAAuBC,EAAAA,EAAAA,MAAhBC,GAA6BC,EAAAA,EAAAA,GAAAH,EAAA,GAAjB,GACJI,EAAmCrB,EAA1CsB,MAA0BC,EAAgBvB,EAApBwB,GACxBC,EAAc,CAAEN,aAAAA,EAAczB,WAAAA,EAAYC,MAAAA,EAAOC,IAAAA,EAAKC,oBAAAA,EAAqBX,MAAAA,EAAOY,yBAAAA,EAA0BW,SAAAA,GAClHiB,GAAkDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAR,EAAAA,EAAAA,GAAAM,EAAA,GAA1DG,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GACxCG,GAAmBC,EAAAA,EAAAA,aCpBtB,SAAkBC,EAAMC,GAC3B,IAAIC,EACJ,OAAO,WACH,IAAMC,EAAUC,KACVC,EAAOC,UACbC,aAAaL,GACbA,EAAQM,YAAW,WACfR,EAAKS,MAAMN,EAASE,EACxB,GAAGJ,EACP,CACJ,CDWQS,EAAS,kBAAMpC,EAAkBqC,SAASrB,GAAa,GAAE,KACzD,IAOJ,GAJIR,GAA0BA,IAA2Bd,IAAuC,IAAjBS,GAC3EG,GAAgB,KAGfgC,EAAAA,EAAAA,IAAY7C,GACb,OACI8C,EAAAA,EAAAA,MAAA,OAAiBC,UAAW9D,EAAmBC,GAAQ4B,MAAOA,EAAOkC,YAAajB,EAAkBkB,aAAclB,EAAiBmB,SAAA,EAC/HC,EAAAA,EAAAA,KAAA,QAAMrC,MAAO,CAAEsC,SAAU,WAAYC,IAAK,SAAWN,UAAU,MAAKG,UAChEC,EAAAA,EAAAA,KAAA,QAAMG,QAASC,EAAAA,GAAgBC,K,WAASC,EAAAA,EAAAA,GAAA,CAAInC,MAAOD,GAAkBI,IAAeyB,SAAA,GAAAQ,OAAKxE,EAAQ,EAAC,OAAAwE,OAAMrC,EAAa,aAAAqC,OAAO7D,QAEhIsD,EAAAA,EAAAA,KAAA,OAAKrC,MAAO,CAAEsC,SAAU,WAAYC,IAAK,SAAWN,UAAU,MAAKG,SAC9DrB,GAAoBsB,EAAAA,EAAAA,KAAC7D,GAASmE,EAAAA,EAAAA,GAAA,CAACE,UAAWtC,GAAmBI,IAAkB,QAGpFqB,EAAAA,EAAAA,MAAA,OAAKC,UAAWa,EAAoB9C,MAAO,CAAEsC,SAAU,WAAYS,OAAQ,QAASX,SAAA,EAChFC,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAAQZ,UACjBC,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAIC,EAAAA,EAAOC,MAAMC,MAAOC,MAAO,CAAE/C,cAAAA,EAAexB,oBAAAA,EAAqBwE,UAAW,iCAAmCvD,MAAO,CAAEwD,eAAgB,OAAQC,MAAO9D,EAAW,OAAS,QAASyC,SAAC,sBAInMC,EAAAA,EAAAA,KAAC5D,EAAK,CAACL,MAAOA,EAAOkB,YAAaA,EAAaE,eAAgBA,EAAgBC,kBAAmBA,EAAmBC,QAASA,IAC7HT,IACGoD,EAAAA,EAAAA,KAACqB,EAAAA,SAAQ,CAACC,SAAU,GAAGvB,UACnBC,EAAAA,EAAAA,KAAChE,EAAU,CAACD,MAAOqC,EAAatB,mBAAoBA,EAAoBC,aAAcA,EAAcC,gBAAiBA,EAAiBC,YAAaA,EAAaC,eAAgBA,EAAgByB,qBAAsBA,OAG9NqB,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAASR,QAAS,kBAAMxB,GAAqB,EAAK,EAACoB,SAAC,eACjEC,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAAQZ,UACjBC,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAIC,EAAAA,EAAOC,MAAMC,MAAOC,MAAO,CAAE/C,cAAAA,EAAexB,oBAAAA,EAAqBwE,UAAW,gCAAiCK,OAAO,GAAQ5D,MAAO,CAAEwD,eAAgB,OAAQC,MAAO9D,EAAW,OAAS,QAASyC,SAAC,mBAIhNC,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAASR,QAAS,kBAAMqB,EAAAA,EAAAA,IAAQxD,GAAc,kBAAMZ,EAAkBqC,SAASrB,GAAa,GAAC,EAAC2B,SAAC,kBA1B1GhE,EA8BtB,EEhDA,EAXwB,WAAH,OACjB4D,EAAAA,EAAAA,MAAA8B,EAAAA,SAAA,CAAA1B,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BAEJC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,gBAELC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,mDAELC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,2DACN,ECRA,SAAS2B,IACZ,OAAO1B,EAAAA,EAAAA,KAAC2B,EAAe,GAC3B,CCLO,IAAMpG,EAAQ,CACjB,SAAUE,EAAKD,GACX,GADoBA,EAALgB,OACF,GAAI,OAAO,GAC5B,EACA,SAAUf,EAAKmG,GAAc,IAAVpF,EAAKoF,EAALpF,MACf,GAAIA,EAAQ,IAAMA,GAAS,GAAI,OAAO,GAC1C,EACA,SAAUf,EAAKoG,GAAc,IAAVrF,EAAKqF,EAALrF,MACf,GAAIA,EAAQ,IAAMA,GAAS,GAAI,OAAO,GAC1C,EACA,SAAUf,EAAKqG,GAAc,IAAVtF,EAAKsF,EAALtF,MACf,GAAIA,EAAQ,IAAMA,GAAS,IAAK,OAAO,IAC3C,EACA,SAAUf,EAAKsG,GACX,GADoBA,EAALvF,MACH,IAAK,OAAO,GAC5B,EACA,WACI,OAAO,GACX,G,sBCmBJ,MA3BA,SAAmBhB,GAA2Q,IAAxQ6B,EAAO7B,EAAP6B,QAAS2E,EAAKxG,EAALwG,MAAOC,EAAMzG,EAANyG,OAAQ1F,EAAUf,EAAVe,WAAYC,EAAKhB,EAALgB,MAAOC,EAAGjB,EAAHiB,IAAKG,EAAUpB,EAAVoB,WAAYK,EAAWzB,EAAXyB,YAAaC,EAAc1B,EAAd0B,eAAgBgF,EAAO1G,EAAP0G,QAASpF,EAAkBtB,EAAlBsB,mBAAoBC,EAAYvB,EAAZuB,aAAcC,EAAexB,EAAfwB,gBAAiBG,EAAc3B,EAAd2B,eAAgBC,EAAiB5B,EAAjB4B,kBAAmBE,EAAQ9B,EAAR8B,SAAUE,EAAchC,EAAdgC,eAAgBC,EAAkBjC,EAAlBiC,mBAAoBF,EAAY/B,EAAZ+B,aAAcG,EAAelC,EAAfkC,gBAChQhB,GAAsByF,EAAAA,EAAAA,IAAuB,CAAErF,mBAAAA,EAAoBoF,QAAAA,IACnEvF,GAA2ByF,EAAAA,EAAAA,IAA4B,CAAEtF,mBAAAA,EAAoBoF,QAAAA,IAsBnF,OApBAG,EAAAA,EAAAA,YAAU,WACF9E,IACA+E,EAAAA,EAAAA,IAAgBjF,EAASF,EAAgBF,EAAaH,EAE9D,GAAG,CAACS,EAAcT,KAElBuF,EAAAA,EAAAA,YAAU,WACFhF,EAAQkF,UACRD,EAAAA,EAAAA,IAAgBjF,EAASF,EAAgBF,EAAaH,EAE9D,GAAG,CAAQ,OAAPO,QAAO,IAAPA,OAAO,EAAPA,EAASkF,WAUNvC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAAC5C,UAAU,OAAOqC,OAAQA,EAAQQ,SAAUxF,EAAYrB,OAAQ8G,UAAWrH,EAAAA,EAAWC,aAAaC,EAAO,CAAEG,OAAQ,CAAEc,MAAAA,KAAYwF,MAAOA,EAAOW,IAAKtF,EAASuF,YAJ1K,SAAoBhB,GAAwB,IAArB7F,EAAK6F,EAAL7F,MAAU8G,GAAMC,EAAAA,EAAAA,GAAAlB,EAAAmB,GACnC,OAAO/C,EAAAA,EAAAA,KAACgD,GAAG1C,EAAAA,EAAAA,GAAA,CAAChE,KAAM,CAAEC,WAAAA,EAAYC,MAAAA,EAAOC,IAAAA,EAAKC,oBAAAA,EAAqBC,yBAAAA,EAA0BC,WAAAA,EAAYK,YAAAA,EAAaC,eAAAA,EAAgBL,aAAcI,EAAYlB,GAAQA,MAAAA,EAAOe,mBAAAA,EAAoBC,aAAAA,EAAcC,gBAAAA,EAAiBG,eAAAA,EAAgBC,kBAAAA,EAAmBE,SAAAA,EAAUD,QAAAA,EAASG,eAAAA,EAAgBC,mBAAAA,EAAoBF,aAAAA,EAAcG,gBAAAA,IAAuBmF,GACnW,EAEoMI,eAR7K,YACE,IAAjB1F,GAAwBG,GAAgB,EAChD,EAMoOwF,eAAgBxB,EAAgB/D,MAAO,CAAEwF,QAAS,SAC1R,C,gJCrBO,SAAS/C,EAAe5E,GAAuD,IAApDwC,EAAYxC,EAAZwC,aAActB,EAAmBlB,EAAnBkB,oBAAqByB,EAAK3C,EAAL2C,MAAY3C,EAALO,OAVrE,SAAuBqH,EAAW1G,GACrC,GAAiD,QAA7CA,EAAoB2G,cAAcC,OAAkB,CACpD,IAAIC,EAAiBH,EAAUI,YAAY,WACvCC,GCH0BC,EDGkC,ICHzC3H,EDGqBwH,EAAiB,ICH3CI,EDGeP,GCFrBxH,OAAS,EAAU+H,EAC5BA,EAAIC,UAAU,EAAG7H,GAAS2H,EAAMC,EAAIC,UAAU7H,EAAQ,IDGzD0H,ECTD,SAAgBE,EAAK5H,EAAON,GAC/B,OAAOkI,EAAIE,OAAO,EAAG9H,GAASN,EAAQkI,EAAIE,OAAO9H,EACrD,CDO2B+H,CADnBL,EAAmB,IAAMA,EACmBF,EAAgB,SAC5DQ,IAAKN,EACT,MAAOM,IAAK,IAADxD,OAAK6C,EAAS,SAAA7C,OAAQ7D,ICP9B,IAAmBiH,EAAK5H,EAAO2H,CDQtC,CAGIM,CAAc7F,EAAOzB,GACrBsB,EAAa,UAAW,IAC5B,CAkBO,SAASH,EAAYpC,GACxB,IAAMkH,GAAMsB,EAAAA,EAAAA,QAAO,MAInB,OAHA5B,EAAAA,EAAAA,YAAU,WACNM,EAAIJ,QAAU9G,CAClB,GAAG,CAACA,IACGkH,EAAIJ,OACf,CAEO,SAASf,EAAQxD,EAAckG,GAClCA,IACAH,IAAKI,OAAOC,SAASC,KAAKC,YAC1BtG,EAAa,uCAAwC,IACzD,C","sources":["common/utils/ruleEngine.js","webpack://quotes/./src/components/organisms/home/row/styles/row.module.css?d653","components/organisms/home/row/utils/style-utils.js","components/organisms/home/row/row.js","common/utils/debounce.js","components/organisms/analysis/no-search-results/no-search-results.jsx","components/organisms/home/quotes-list/utils/listUtils.js","components/organisms/home/quotes-list/utils/ruleEngine/rules.js","components/organisms/home/quotes-list/quotes-list.jsx","components/organisms/home/row/utils/utils.js","common/utils/stringUtils.js"],"sourcesContent":["export const ruleEngine = {\r\n    makeDecision: function (rules, { value, params }) {\r\n        for (let i = 0; i <= rules.length; i++) {\r\n            const returnValue = rules[i](value, params)\r\n            if (returnValue) return returnValue\r\n        }\r\n    },\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"actionItems\":\"row_actionItems__Y-npM\"};","export function evaluateClassNames(index) {\r\n    return (index % 2 ? \"ListItemOdd\" : \"ListItemEven\")\r\n}","import React, { Suspense, useCallback, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSnackbar } from 'react-simple-snackbar'\r\nimport ROUTES from '../../../../common/routes/routes'\r\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\r\nimport { isUndefined } from '../../../../common/utils/commonUtils'\r\nimport { debounce } from '../../../../common/utils/debounce'\r\nimport styles from './styles/row.module.css'\r\nimport { evaluateClassNames } from './utils/style-utils'\r\nimport { copyURL, rowClickHandler, usePrevious } from './utils/utils'\r\nconst MarkAsRead = React.lazy(() => retryTenTimes(() => import('../../tools/mark-as-read/mark-as-read')))\r\nconst Translate = React.lazy(() => retryTenTimes(() => import('../../tools/translate/translate')))\r\nconst Audio = React.lazy(() => retryTenTimes(() => import('../../tools/audio/audio')))\r\n\r\nconst Row = ({ data: { searchText, start, end, philosopherFullName, philosopherFullName_i10n, markedMode, currentQuote, currentPhilosopher, markedQuotes, setMarkedQuotes, currentData, setCurrentData, index, scrollPosition, setScrollPosition, listRef, darkMode, scheduledPosts, setScheduledQuotes, rowsRendered, setRowsRendered }, style }) => {\r\n    const prevCurrentPhilosopher = usePrevious(currentPhilosopher)\r\n    const [openSnackbar] = useSnackbar()\r\n    const { quote: quotationText, id: quotationId } = currentQuote\r\n    const propsToSend = { openSnackbar, searchText, start, end, philosopherFullName, index, philosopherFullName_i10n, darkMode }\r\n    const [localTranslateKey, setLocalTranslateKey] = useState(false)\r\n    const debouncedHandler = useCallback(\r\n        debounce(() => setScrollPosition(parseInt(quotationId)), 500),\r\n        []\r\n    )\r\n\r\n    if (prevCurrentPhilosopher && prevCurrentPhilosopher !== currentPhilosopher && rowsRendered === false) {\r\n        setRowsRendered(true)\r\n    }\r\n\r\n    if (!isUndefined(currentQuote))\r\n        return (\r\n            <div key={index} className={evaluateClassNames(index)} style={style} onMouseMove={debouncedHandler} onTouchStart={debouncedHandler}>\r\n                <span style={{ position: 'absolute', top: '10rem' }} className=\"row\">\r\n                    <span onClick={rowClickHandler.bind(this, { quote: quotationText, ...propsToSend })}>{`${index + 1}. \"${quotationText}\" â€• ${philosopherFullName}`}</span>\r\n                </span>\r\n                <div style={{ position: 'absolute', top: '26rem' }} className=\"row\">\r\n                    {localTranslateKey ? <Translate inputText={quotationText} {...propsToSend} /> : null}\r\n                </div>\r\n\r\n                <div className={styles.actionItems} style={{ position: 'absolute', bottom: '5rem' }}>\r\n                    <button role=\"button\">\r\n                        <Link to={ROUTES.image.route} state={{ quotationText, philosopherFullName, signature: 'Instagram: @philosophizetruth' }} style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000' }}>\r\n                            Download Image\r\n                        </Link>\r\n                    </button>\r\n                    <Audio index={index} currentData={currentData} scrollPosition={scrollPosition} setScrollPosition={setScrollPosition} listRef={listRef} />\r\n                    {markedMode && (\r\n                        <Suspense fallback={''}>\r\n                            <MarkAsRead index={quotationId} currentPhilosopher={currentPhilosopher} markedQuotes={markedQuotes} setMarkedQuotes={setMarkedQuotes} currentData={currentData} setCurrentData={setCurrentData} setLocalTranslateKey={setLocalTranslateKey} />\r\n                        </Suspense>\r\n                    )}\r\n                    <button role=\"button\" onClick={() => setLocalTranslateKey(true)}>Translate</button>\r\n                    <button role=\"button\">\r\n                        <Link to={ROUTES.image.route} state={{ quotationText, philosopherFullName, signature: 'Instagram: @philosophizetruth', share: true }} style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000' }}>\r\n                            Share Image\r\n                        </Link>\r\n                    </button>\r\n                    <button role=\"button\" onClick={() => copyURL(openSnackbar, () => setScrollPosition(parseInt(quotationId)))}>Copy URL</button>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Row\r\n","export function debounce(func, delay) {\r\n    let timer\r\n    return function () {\r\n        const context = this\r\n        const args = arguments\r\n        clearTimeout(timer)\r\n        timer = setTimeout(function () {\r\n            func.apply(context, args)\r\n        }, delay)\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst NoSearchResults = () => (\r\n    <>\r\n        <h4>No search results found!</h4>\r\n\r\n        <div>Guidlines:</div>\r\n\r\n        <div>1. Please check spelling of your search text.</div>\r\n\r\n        <div> 2. Try searching a smaller and a more generic word.</div>\r\n    </>\r\n)\r\nexport default NoSearchResults\r\n","import React from 'react'\r\nimport NoSearchResults from '../../../analysis/no-search-results/no-search-results'\r\n\r\nexport function NoRowsRenderer() {\r\n    return <NoSearchResults />\r\n}\r\n","export const rules = [\r\n    function (value, { start }) {\r\n        if (start <= 20) return 500\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 20 && start <= 40) return 600\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 40 && start <= 60) return 1000\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 60 && start <= 100) return 1400\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 100) return 2000\r\n    },\r\n    function () {\r\n        return 800\r\n    },\r\n]\r\n","import React, { useEffect } from 'react'\r\nimport List from 'react-virtualized/dist/commonjs/List'\r\nimport { ruleEngine } from '../../../../common/utils/ruleEngine'\r\nimport { scrollToQuoteId } from '../../../../common/utils/utils'\r\nimport Row from '../row/row'\r\nimport './quotes-list.css'\r\nimport { NoRowsRenderer } from './utils/listUtils'\r\nimport { rules } from './utils/ruleEngine/rules'\r\nimport { getPhilosopherFullName, getPhilosopherFullName_i10n } from './utils/utils'\r\n\r\nfunction QuotesList({ listRef, width, height, searchText, start, end, markedMode, currentData, setCurrentData, options, currentPhilosopher, markedQuotes, setMarkedQuotes, scrollPosition, setScrollPosition, darkMode, scheduledPosts, setScheduledQuotes, rowsRendered, setRowsRendered }) {\r\n    const philosopherFullName = getPhilosopherFullName({ currentPhilosopher, options })\r\n    const philosopherFullName_i10n = getPhilosopherFullName_i10n({ currentPhilosopher, options })\r\n\r\n    useEffect(() => {\r\n        if (rowsRendered) {\r\n            scrollToQuoteId(listRef, scrollPosition, currentData, currentPhilosopher)\r\n        }\r\n    }, [rowsRendered, currentPhilosopher])\r\n\r\n    useEffect(() => {\r\n        if (listRef.current) {\r\n            scrollToQuoteId(listRef, scrollPosition, currentData, currentPhilosopher)\r\n        }\r\n    }, [listRef?.current])\r\n\r\n    const onRowsRendered = () => {\r\n        if (rowsRendered === false) setRowsRendered(true)\r\n    }\r\n\r\n    function rowRenderer({ index, ...others }) {\r\n        return <Row data={{ searchText, start, end, philosopherFullName, philosopherFullName_i10n, markedMode, currentData, setCurrentData, currentQuote: currentData[index], index, currentPhilosopher, markedQuotes, setMarkedQuotes, scrollPosition, setScrollPosition, darkMode, listRef, scheduledPosts, setScheduledQuotes, rowsRendered, setRowsRendered }} {...others} />\r\n    }\r\n\r\n    return <List className=\"List\" height={height} rowCount={currentData.length} rowHeight={ruleEngine.makeDecision(rules, { params: { start } })} width={width} ref={listRef} rowRenderer={rowRenderer} onRowsRendered={onRowsRendered} noRowsRenderer={NoRowsRenderer} style={{ padding: '1rem' }} />\r\n}\r\n\r\nexport default QuotesList\r\n","import copy from 'copy-to-clipboard'\r\nimport { useEffect, useRef } from 'react'\r\nimport { insert, setCharAt } from '../../../../../common/utils/stringUtils'\r\n\r\nexport function copyQuoteText(quoteText, philosopherFullName) {\r\n    if (philosopherFullName.toLowerCase().trim() === 'all') {\r\n        let splittingIndex = quoteText.lastIndexOf('â€• ')\r\n        let updatedQuoteText = setCharAt(quoteText, splittingIndex - 1, '')\r\n        updatedQuoteText = '\"' + updatedQuoteText\r\n        updatedQuoteText = insert(updatedQuoteText, splittingIndex, '\"\\n\\n')\r\n        copy(updatedQuoteText)\r\n    } else copy(`\"${quoteText}\"\\n\\n${philosopherFullName}`)\r\n}\r\n\r\nexport function rowClickHandler({ openSnackbar, philosopherFullName, quote, index }) {\r\n    copyQuoteText(quote, philosopherFullName)\r\n    openSnackbar('Copied!', 1000)\r\n}\r\n\r\nexport function devModeSignature() {\r\n    return isAppInDevMode() ? <>dev-mode</> : null\r\n}\r\n\r\nexport function isAppInDevMode() {\r\n    return process.env.NODE_ENV !== 'production'\r\n}\r\n\r\nexport function rowClickHandlerFoBothQuotes({ openSnackbar, quote: { hindi, english }, philosopherNames: { englishFullname, hindiFullname }, index }, event) {\r\n    event.stopPropagation()\r\n    copyBothQuotesText({ hindiQuote: hindi, englishQuote: english }, { englishFullname, hindiFullname })\r\n    openSnackbar('Copied!', 1000)\r\n}\r\n\r\nexport const copyBothQuotesText = ({ englishQuote, hindiQuote }, { englishFullname, hindiFullname }) => copy(`\"${hindiQuote}\"\\n\\nâ€• ${hindiFullname}\\n\\n\\n\"${englishQuote}\"\\n\\nâ€• ${englishFullname}`)\r\n\r\nexport function usePrevious(value) {\r\n    const ref = useRef(null)\r\n    useEffect(() => {\r\n        ref.current = value\r\n    }, [value])\r\n    return ref.current\r\n}\r\n\r\nexport function copyURL(openSnackbar, callback) {\r\n    callback()\r\n    copy(window.location.href.toString())\r\n    openSnackbar('Quote URL Copied. You can now share!', 1000)\r\n}\r\n","export function insert(str, index, value) {\r\n    return str.substr(0, index) + value + str.substr(index);\r\n}\r\n\r\nexport function setCharAt(str, index, chr) {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n}"],"names":["ruleEngine","makeDecision","rules","_ref","value","params","i","length","returnValue","evaluateClassNames","index","MarkAsRead","React","retryTenTimes","Translate","Audio","_ref$data","data","searchText","start","end","philosopherFullName","philosopherFullName_i10n","markedMode","currentQuote","currentPhilosopher","markedQuotes","setMarkedQuotes","currentData","setCurrentData","scrollPosition","setScrollPosition","listRef","darkMode","rowsRendered","scheduledPosts","setScheduledQuotes","setRowsRendered","style","prevCurrentPhilosopher","usePrevious","_useSnackbar","useSnackbar","openSnackbar","_slicedToArray","quotationText","quote","quotationId","id","propsToSend","_useState","useState","_useState2","localTranslateKey","setLocalTranslateKey","debouncedHandler","useCallback","func","delay","timer","context","this","args","arguments","clearTimeout","setTimeout","apply","debounce","parseInt","isUndefined","_jsxs","className","onMouseMove","onTouchStart","children","_jsx","position","top","onClick","rowClickHandler","bind","_objectSpread","concat","inputText","styles","bottom","role","Link","to","ROUTES","image","route","state","signature","textDecoration","color","Suspense","fallback","share","copyURL","_Fragment","NoRowsRenderer","NoSearchResults","_ref2","_ref3","_ref4","_ref5","width","height","options","getPhilosopherFullName","getPhilosopherFullName_i10n","useEffect","scrollToQuoteId","current","List","rowCount","rowHeight","ref","rowRenderer","others","_objectWithoutProperties","_excluded","Row","onRowsRendered","noRowsRenderer","padding","quoteText","toLowerCase","trim","splittingIndex","lastIndexOf","updatedQuoteText","chr","str","substring","substr","insert","copy","copyQuoteText","useRef","callback","window","location","href","toString"],"sourceRoot":""}