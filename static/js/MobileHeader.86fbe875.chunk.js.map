{"version":3,"file":"static/js/MobileHeader.86fbe875.chunk.js","mappings":"uMACA,QAAuB,4B,aCOvB,MAAMA,EAAaC,EAAAA,MAAW,KAAMC,EAAAA,EAAAA,KAAc,IAAM,kCAClDC,EAAaF,EAAAA,MAAW,KAAMC,EAAAA,EAAAA,KAAc,IAAM,kCAClDE,EAAgBH,EAAAA,MAAW,KAAMC,EAAAA,EAAAA,KAAc,IAAM,kCACrDG,EAAcJ,EAAAA,MAAW,KAAMC,EAAAA,EAAAA,KAAc,IAAM,kCAsCzD,QApCA,SAAqBI,GAAujB,IAAtjB,QAAEC,EAAO,cAAEC,EAAa,WAAEC,EAAU,MAAEC,EAAK,IAAEC,EAAG,SAAEC,EAAQ,OAAEC,EAAM,WAAEC,EAAU,cAAEC,EAAa,WAAEC,EAAU,cAAEC,EAAa,aAAEC,EAAY,YAAEC,EAAW,eAAEC,EAAc,mBAAEC,EAAkB,aAAEC,EAAY,sBAAEC,EAAqB,QAAEC,EAAO,WAAEC,EAAU,SAAEC,EAAQ,YAAEC,EAAW,WAAEC,EAAU,QAAEC,EAAO,kBAAEC,EAAiB,qBAAEC,EAAoB,gBAAEC,EAAe,mBAAEC,EAAkB,SAAEC,EAAQ,YAAEC,EAAW,gBAAEC,EAAe,WAAEC,EAAU,cAAEC,EAAa,SAAEC,EAAQ,YAAEC,EAAW,eAAEC,EAAc,gBAAEC,EAAe,SAAEC,EAAQ,YAAEC,EAAW,mBAAEC,EAAkB,sBAAEC,EAAqB,QAAEC,GAASzC,EACrkB,MAAO0C,GAASC,KAAiBC,EAAAA,EAAAA,WAAS,GAE1C,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAOC,OAAOC,SAAA,EAC1BJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAOG,aAAaD,SAAA,CAC/BP,KACGS,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAAAH,UACLE,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAJ,UACVE,EAAAA,EAAAA,KAACzD,EAAU,CAACgB,WAAYA,EAAYC,cAAeA,EAAe+B,QAASA,GAASxB,QAASA,EAASC,WAAYA,EAAYwB,cAAeA,GAAevB,SAAUA,EAAUC,YAAaA,EAAaC,WAAYA,EAAYC,QAASA,EAASK,SAAUA,EAAUC,YAAaA,EAAaC,gBAAiBA,EAAuBC,aAAYC,gBAAeC,WAAUC,cAAazB,uBAIxY0C,EAAAA,EAAAA,KAAA,OAAKL,UAAWQ,EAAuBC,QAASA,IAAMZ,IAAeD,IAASO,SAAC,eAInFE,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAAA,EAAOG,aAAaD,UAChCE,EAAAA,EAAAA,KAACK,EAAAA,EAAgB,CAACC,OAAO,EAAMC,uBAAuB,OAE1DP,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAAA,EAAOG,aAAaD,UAChCE,EAAAA,EAAAA,KAAA,SAAOQ,KAAK,cAAc,cAAY,cAAcb,UAAWC,EAAAA,EAAOa,WAAYC,KAAK,OAAOC,YAAY,cAAcC,MAAO5D,EAAY6D,SAAUC,IAAA,IAAGC,QAAQ,MAAEH,IAASE,EAAA,OAAK/D,EAAc6D,EAAM,OAExMZ,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAAA,EAAOG,aAAaD,UAChCE,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CAACzD,WAAYA,EAAY6B,mBAAoBA,EAAoB6B,UAAU,EAAM5C,kBAAmBA,EAAmBN,QAASA,EAASH,mBAAoBA,EAAoBsD,uBAAwBA,KAAMC,EAAAA,EAAAA,GAAe,CAAEpD,UAASC,aAAYY,aAAYO,cAAad,oBAAmBC,uBAAsBC,kBAAiBC,qBAAoBJ,UAASc,WAAUI,YAAY8B,gBAAiBC,IAAA,IAAGN,QAAUH,MAAOU,IAAeD,EAAA,OAAKE,EAAAA,EAAAA,GAA0B,CAAED,cAAaxE,UAASQ,gBAAeH,WAAUC,SAAQL,gBAAee,wBAAuBH,iBAAgBI,UAASC,aAAYgB,iBAAgBC,kBAAiBG,qBAAoBC,yBAAwB,EAAEpB,SAAUA,OAEtrB+B,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACuB,SAAU,GAAG1B,UACnBJ,EAAAA,EAAAA,MAAChD,EAAU,CAAAoD,SAAA,EACPE,EAAAA,EAAAA,KAACpD,EAAW,IACXW,IAAcyC,EAAAA,EAAAA,KAACrD,EAAa,CAACU,WAAYA,EAAYK,YAAaA,EAAaG,aAAcA,EAAcJ,aAAcA,EAAcG,mBAAoBA,EAAoBS,kBAAmBA,WAKvN,C,uFC3CA,MAAMoD,EAAgBjF,EAAAA,MAAW,KAAMC,EAAAA,EAAAA,KAAc,IAAM,4EACrDiF,EAAelF,EAAAA,MAAW,KAAMC,EAAAA,EAAAA,KAAc,IAAM,kCA8B1D,EA5BeI,IAA+E,IAAD8E,EAAAC,EAAA,IAA7E,gBAAER,EAAe,uBAAEF,EAAsB,SAAED,EAAQ,kBAAE5C,GAAmBxB,EACpF,MAAM,QAAEkB,EAAO,WAAER,EAAU,mBAAEK,EAAkB,mBAAEwB,EAAkB,SAAEnB,IAAa4D,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,mBACzGC,EAAqC,IAAIjE,GAE7B,OAAlBqB,QAAkB,IAAlBA,GACa,QADKuC,EAAlBvC,EACM6C,eAAO,IAAAN,GACE,QADFC,EADbD,EAEMO,iBAAS,IAAAN,GAFfA,EAGMO,SAAQ,CAACC,EAAYC,KACnB,MAAMC,EAAWN,EAAmCO,WAAWC,GAAOA,EAAG5B,QAAUwB,IAC7EK,EAAcT,EAAmCU,OAAOJ,EAAU,GACxEN,EAAmCW,QAAQF,EAAY,GAAG,IAelE,OAAO7E,IAA6B,OAAPG,QAAO,IAAPA,OAAO,EAAPA,EAAS6E,QAAS,IAXvC3B,GACOjB,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACuB,SAAU,GAAG1B,SAAElC,IAAsBoC,EAAAA,EAAAA,KAAC0B,EAAY,CAACtC,mBAAoBA,EAAoB8B,uBAAwBA,EAAwBE,gBAAiBA,EAAiBxD,mBAAoBA,EAAoBgD,OAAOiC,EAAAA,EAAAA,IAA8BjF,EAAoBoE,GAAqCrB,YAAa,qBAAsB5C,QAASiE,EAAoC3D,kBAAmBA,EAAmBJ,SAAUA,EAAUV,WAAYA,OAGtdyC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACuB,SAAU,GAAG1B,UACnBE,EAAAA,EAAAA,KAACyB,EAAa,CAACN,eAAgBD,EAAwBE,gBAAiBA,EAAiBrD,QAASiE,EAAoCpE,mBAAoBA,EAAoBS,kBAAmBA,MAM/I,C,iGC3BtE,MAAMyE,EAA0BtG,EAAAA,MAAW,KAAMC,EAAAA,EAAAA,KAAc,IAAM,0DAE9D,SAAS4D,EAAgBxD,GAAqE,IAApE,SAAEoE,GAAW,EAAI,sBAAEV,GAAwB,EAAK,MAAED,GAAQ,GAAOzD,EAC9F,MAAMkG,GAAWC,EAAAA,EAAAA,OACX,MAAE/F,EAAK,IAAEC,EAAG,kBAAE+F,IAAsBpB,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,mBAqBvE,OAlBQd,GAEIvB,EAAAA,EAAAA,MAAAwD,EAAAA,SAAA,CAAApD,SAAA,CACKQ,IACGZ,EAAAA,EAAAA,MAAA,SAAOyD,GAAG,WAAWxD,UAAWC,EAAAA,EAAOwD,SAAUC,QAAQ,MAAKvD,SAAA,CAAC,QACrD,OAGbS,IAAyBP,EAAAA,EAAAA,KAAA,SAAOmD,GAAG,QAAQxD,UAAWC,EAAAA,EAAO0D,WAAwB9C,KAAK,QAAQE,KAAK,SAAS6C,IAAI,IAAI3C,MAAO3D,EAAO4D,SAAUC,IAAA,IAAGC,QAAQ,MAAEH,IAASE,EAAA,OAAKiC,GAASS,EAAAA,EAAAA,IAAc5C,GAAO,EAAE6C,SAAUR,GAAxI,UAC9EjD,EAAAA,EAAAA,KAAA,SAAOmD,GAAG,MAAMxD,UAAS,GAAA+D,OAAK9D,EAAAA,EAAO0D,WAAU,KAAAI,OAAInD,EAAwBX,EAAAA,EAAO+D,UAAY,IAAgBnD,KAAK,MAAME,KAAK,SAAS6C,IAAI,IAAI3C,MAAO1D,EAAK2D,SAAUQ,IAAA,IAAGN,QAAQ,MAAEH,IAASS,EAAA,OAAK0B,GAASa,EAAAA,EAAAA,IAAYhD,GAAO,EAAE6C,SAAUR,GAAhI,WAMzGjD,EAAAA,EAAAA,KAAC8C,EAAuB,CAAC7F,MAAOA,GAInD,C,kCC9BA,SAAgB,WAAa,qCAAqC,SAAW,mCAAmC,UAAY,oC","sources":["webpack://quotes/./src/components/organisms/home/mobile/mobile-header/mobile-header.module.css?ac4a","components/organisms/home/mobile/mobile-header/mobile-header.jsx","components/organisms/tools/select/select.js","components/organisms/tools/wordLengthSearch/wordLengthSearch.js","webpack://quotes/./src/components/organisms/tools/wordLengthSearch/wordLengthSearch.module.css?7b27"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"mobile-header_menu__-Arez\"};","import React, { Suspense, useState } from 'react'\r\nimport ErrorBoundary from '../../../../../common/components/error-boundary/error-boundary'\r\nimport { retryTenTimes } from '../../../../../common/utils/apiUtils'\r\nimport Select from '../../../tools/select/select'\r\nimport { WordLengthSearch } from '../../../tools/wordLengthSearch/wordLengthSearch'\r\nimport { onFocusHandler, onPhilosopherSelectChange } from '../../desktop/desktop-header/utils/utils'\r\nimport styles from '../../header-layout/header-layout.module.css'\r\nimport mobileMenuStyles from './mobile-header.module.css'\r\nconst MobileMenu = React.lazy(() => retryTenTimes(() => import(/* webpackChunkName: \"MobileMenu\" */ '../mobile-menu/mobile-menu')))\r\nconst Breadcrumb = React.lazy(() => retryTenTimes(() => import(/* webpackChunkName: \"Breadcrumb\" */ '../../../analysis/breadcrumb/breadcrumb')))\r\nconst UnreadCounter = React.lazy(() => retryTenTimes(() => import(/* webpackChunkName: \"UnreadCounter\" */ '../../../analysis/unread-counter/unread-counter')))\r\nconst QuotesFound = React.lazy(() => retryTenTimes(() => import(/* webpackChunkName: \"QuotesFound\" */ '../../../analysis/quotes-found/quotes-found')))\r\n\r\nfunction MobileHeader({ listRef, setSearchText, searchText, start, end, setStart, setEnd, isFetching, setIsFetching, markedMode, setMarkedMode, markedQuotes, currentData, setCurrentData, currentPhilosopher, originalData, setCurrentPhilosopher, options, setOptions, darkMode, setDarkMode, setSorting, sorting, isFetchingOptions, setIsFetchingOptions, originalOptions, setOriginalOptions, userName, setUserName, setMarkedQuotes, isLoggedIn, setIsLoggedIn, password, setPassword, scrollPosition, setRowsRendered, syncDate, setSyncDate, recentPhilosophers, setRecentPhilosophers, setLogs }) {\r\n    const [visible, toggleVisible] = useState(false)\r\n\r\n    return (\r\n        <div className={styles.header}>\r\n            <div className={styles.mobileColumn}>\r\n                {visible && (\r\n                    <Suspense>\r\n                        <ErrorBoundary>\r\n                            <MobileMenu markedMode={markedMode} setMarkedMode={setMarkedMode} visible={visible} options={options} setOptions={setOptions} toggleVisible={toggleVisible} darkMode={darkMode} setDarkMode={setDarkMode} setSorting={setSorting} sorting={sorting} userName={userName} setUserName={setUserName} setMarkedQuotes={setMarkedQuotes} {...{ isLoggedIn, setIsLoggedIn, password, setPassword, setIsFetching }} />\r\n                        </ErrorBoundary>\r\n                    </Suspense>\r\n                )}\r\n                <div className={mobileMenuStyles.menu} onClick={() => toggleVisible(!visible)}>\r\n                    â˜°\r\n                </div>\r\n            </div>\r\n            <div className={styles.mobileColumn}>\r\n                <WordLengthSearch label={true} isStartFeatureEnabled={false} />\r\n            </div>\r\n            <div className={styles.mobileColumn}>\r\n                <input name=\"search-text\" data-testid=\"search-text\" className={styles.wordSearch} type=\"text\" placeholder=\"Search word\" value={searchText} onChange={({ target: { value } }) => setSearchText(value)} />\r\n            </div>\r\n            <div className={styles.mobileColumn}>\r\n                <Select markedMode={markedMode} recentPhilosophers={recentPhilosophers} isMobile={true} isFetchingOptions={isFetchingOptions} options={options} currentPhilosopher={currentPhilosopher} onFocusHandlerCallback={() => onFocusHandler({ options, setOptions, isLoggedIn, setSyncDate, isFetchingOptions, setIsFetchingOptions, originalOptions, setOriginalOptions, sorting, syncDate, setLogs })} onChangeHandler={({ target: { value: philosopher } }) => onPhilosopherSelectChange({ philosopher, listRef, setIsFetching, setStart, setEnd, setSearchText, setCurrentPhilosopher, setCurrentData, options, setOptions, scrollPosition, setRowsRendered, recentPhilosophers, setRecentPhilosophers })} darkMode={darkMode} />\r\n            </div>\r\n            <Suspense fallback={''}>\r\n                <Breadcrumb>\r\n                    <QuotesFound  />\r\n                    {markedMode && <UnreadCounter isFetching={isFetching} currentData={currentData} originalData={originalData} markedQuotes={markedQuotes} currentPhilosopher={currentPhilosopher} isFetchingOptions={isFetchingOptions} />}\r\n                </Breadcrumb>\r\n            </Suspense>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileHeader\r\n","import React, { Suspense } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { getCurrentPhilosopherFullname } from '../../../../common/static/utils/utils'\r\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\r\nconst DesktopSelect = React.lazy(() => retryTenTimes(() => import(/* webpackChunkName: \"DesktopSelect\" */ '../../home/desktop/desktop-select/desktop-select')))\r\nconst MobileSelect = React.lazy(() => retryTenTimes(() => import(/* webpackChunkName: \"MobileSelect\" */ '../../home/mobile/mobile-select/mobile-select')))\r\n\r\nconst Select = ({ onChangeHandler, onFocusHandlerCallback, isMobile, isFetchingOptions }) => {\r\n    const { options, markedMode, currentPhilosopher, recentPhilosophers, darkMode } = useSelector((state) => state.philosophersData)\r\n    const optionsWithRecentPhilosophersOnTop = [...options]\r\n\r\n    recentPhilosophers\r\n        ?.slice()\r\n        ?.reverse()\r\n        ?.forEach((recentItem, index) => {\r\n            const foundIdx = optionsWithRecentPhilosophersOnTop.findIndex((el) => el.value === recentItem) // -> foundIdx = 3\r\n            const removedItem = optionsWithRecentPhilosophersOnTop.splice(foundIdx, 1)\r\n            optionsWithRecentPhilosophersOnTop.unshift(removedItem[0])\r\n        })\r\n\r\n    const renderSelect = () => {\r\n        if (isMobile) {\r\n            return <Suspense fallback={''}>{currentPhilosopher && <MobileSelect recentPhilosophers={recentPhilosophers} onFocusHandlerCallback={onFocusHandlerCallback} onChangeHandler={onChangeHandler} currentPhilosopher={currentPhilosopher} value={getCurrentPhilosopherFullname(currentPhilosopher, optionsWithRecentPhilosophersOnTop)} placeholder={'Search philosopher'} options={optionsWithRecentPhilosophersOnTop} isFetchingOptions={isFetchingOptions} darkMode={darkMode} markedMode={markedMode} />}</Suspense>\r\n        } else {\r\n            return (\r\n                <Suspense fallback={''}>\r\n                    <DesktopSelect onFocusHandler={onFocusHandlerCallback} onChangeHandler={onChangeHandler} options={optionsWithRecentPhilosophersOnTop} currentPhilosopher={currentPhilosopher} isFetchingOptions={isFetchingOptions} />\r\n                </Suspense>\r\n            )\r\n        }\r\n    }\r\n\r\n    return currentPhilosopher && options?.length > 0 && renderSelect()\r\n}\r\n\r\nexport default Select\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\r\nimport { setEndRedux, setStartRedux } from '../../home/home-page/homePageRedux/homePageRedux'\r\nimport styles from './wordLengthSearch.module.css'\r\nconst DesktopWordLengthSearch = React.lazy(() => retryTenTimes(() => import(/* webpackChunkName: \"DesktopWordLengthSearch\" */ '../../home/desktop/desktop-word-length-search/desktop-word-length-search')))\r\n\r\nexport function WordLengthSearch({ isMobile = true, isStartFeatureEnabled = false, label = false }) {\r\n    const dispatch = useDispatch()\r\n    const { start, end, populateWordCount } = useSelector((state) => state.philosophersData)\r\n\r\n    const renderComponent = () => {\r\n        if (isMobile) {\r\n            return (\r\n                <>\r\n                    {label && (\r\n                        <label id=\"labelEnd\" className={styles.labelEnd} htmlFor=\"end\">\r\n                            Words{' '}\r\n                        </label>\r\n                    )}\r\n                    {isStartFeatureEnabled && <input id=\"start\" className={styles.smallInput} key=\"start\" name=\"start\" type=\"number\" min=\"0\" value={start} onChange={({ target: { value } }) => dispatch(setStartRedux(value))} disabled={populateWordCount} />}\r\n                    <input id=\"end\" className={`${styles.smallInput} ${isStartFeatureEnabled ? styles.endMargin : ''}`} key=\"end\" name=\"end\" type=\"number\" min=\"0\" value={end} onChange={({ target: { value } }) => dispatch(setEndRedux(value))} disabled={populateWordCount} />\r\n                </>\r\n            )\r\n        }\r\n\r\n        else {\r\n            return <DesktopWordLengthSearch start={start} />\r\n        }\r\n    }\r\n    return renderComponent()\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"smallInput\":\"wordLengthSearch_smallInput__FVbpF\",\"labelEnd\":\"wordLengthSearch_labelEnd__xIH1U\",\"endMargin\":\"wordLengthSearch_endMargin__y2fkC\"};"],"names":["MobileMenu","React","retryTenTimes","Breadcrumb","UnreadCounter","QuotesFound","_ref","listRef","setSearchText","searchText","start","end","setStart","setEnd","isFetching","setIsFetching","markedMode","setMarkedMode","markedQuotes","currentData","setCurrentData","currentPhilosopher","originalData","setCurrentPhilosopher","options","setOptions","darkMode","setDarkMode","setSorting","sorting","isFetchingOptions","setIsFetchingOptions","originalOptions","setOriginalOptions","userName","setUserName","setMarkedQuotes","isLoggedIn","setIsLoggedIn","password","setPassword","scrollPosition","setRowsRendered","syncDate","setSyncDate","recentPhilosophers","setRecentPhilosophers","setLogs","visible","toggleVisible","useState","_jsxs","className","styles","header","children","mobileColumn","_jsx","Suspense","ErrorBoundary","mobileMenuStyles","onClick","WordLengthSearch","label","isStartFeatureEnabled","name","wordSearch","type","placeholder","value","onChange","_ref2","target","Select","isMobile","onFocusHandlerCallback","onFocusHandler","onChangeHandler","_ref3","philosopher","onPhilosopherSelectChange","fallback","DesktopSelect","MobileSelect","_recentPhilosophers$s","_recentPhilosophers$s2","useSelector","state","philosophersData","optionsWithRecentPhilosophersOnTop","slice","reverse","forEach","recentItem","index","foundIdx","findIndex","el","removedItem","splice","unshift","length","getCurrentPhilosopherFullname","DesktopWordLengthSearch","dispatch","useDispatch","populateWordCount","_Fragment","id","labelEnd","htmlFor","smallInput","min","setStartRedux","disabled","concat","endMargin","setEndRedux"],"sourceRoot":""}