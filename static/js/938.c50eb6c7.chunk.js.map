{"version":3,"file":"static/js/938.c50eb6c7.chunk.js","mappings":"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","sources":["common/utils/ruleEngine.js","webpack://quotes/./src/components/organisms/home/row/styles/row.module.css?d653","components/organisms/home/row/utils/utils.js","common/utils/stringUtils.js","components/organisms/home/row/row.js","common/utils/debounce.js","components/organisms/analysis/no-search-results/no-search-results.jsx","components/organisms/home/quotes-list/utils/listUtils.js","components/organisms/home/quotes-list/utils/ruleEngine/rules.js","components/organisms/home/quotes-list/quotes-list.jsx"],"sourcesContent":["export const ruleEngine = {\r\n    makeDecision: function (rules, { value, params }) {\r\n        for (let i = 0; i < rules.length; i++) {\r\n            const returnValue = rules[i](value, params)\r\n            if (returnValue) return returnValue\r\n        }\r\n    },\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"actionItems\":\"row_actionItems__Y-npM\",\"row\":\"row_row__G696K\",\"quoteDescription\":\"row_quoteDescription__tvqXE\"};","import { insert, setCharAt } from '../../../../../common/utils/stringUtils'\r\n\r\nexport function copyQuoteText(quoteText, philosopherFullName) {\r\n    if (philosopherFullName.toLowerCase().trim() === 'all') {\r\n        let splittingIndex = quoteText.lastIndexOf('― ')\r\n        let updatedQuoteText = setCharAt(quoteText, splittingIndex - 1, '')\r\n        updatedQuoteText = '\"' + updatedQuoteText\r\n        updatedQuoteText = insert(updatedQuoteText, splittingIndex, '\"\\n\\n')\r\n        navigator.clipboard.writeText(updatedQuoteText)\r\n    } else navigator.clipboard.writeText(`\"${quoteText}\"\\n\\n${philosopherFullName}`)\r\n}\r\n\r\nexport function rowClickHandler({ openSnackbar, philosopherFullName, quote }) {\r\n    copyQuoteText(quote, philosopherFullName)\r\n    openSnackbar('Quote Text Copied!')\r\n}\r\n\r\nexport function devModeSignature() {\r\n    return isAppInDevMode() ? <>dev-mode</> : null\r\n}\r\n\r\nexport function isAppInDevMode() {\r\n    return process.env.NODE_ENV !== 'production'\r\n}\r\n\r\nexport function rowClickHandlerFoBothQuotes({ openSnackbar, quote: { hindi, english }, philosopherNames: { englishFullname, hindiFullname }, index }, event) {\r\n    event.stopPropagation()\r\n    copyBothQuotesText({ hindiQuote: hindi, englishQuote: english }, { englishFullname, hindiFullname })\r\n    openSnackbar('Quote Text Copied!')\r\n}\r\n\r\nexport const copyBothQuotesText = ({ englishQuote, hindiQuote }, { englishFullname, hindiFullname }) => navigator.clipboard.writeText(`\"${hindiQuote}\"\\n\\n― ${hindiFullname}\\n\\n\\n\"${englishQuote}\"\\n\\n― ${englishFullname}`)\r\n\r\nexport function copyURL(openSnackbar, callback) {\r\n    callback()\r\n    navigator.clipboard.writeText(window.location.href.toString())\r\n    openSnackbar('Quote Link Copied. You can now share!')\r\n}\r\n","export function insert(str, index, value) {\r\n    return str.substr(0, index) + value + str.substr(index);\r\n}\r\n\r\nexport function setCharAt(str, index, chr) {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n}","import React, { Suspense, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setCurrentModalName } from '../../../../common/components/modal/modalRedux'\r\nimport useSnackbar from '../../../../common/components/snackbar/useSnackbar'\r\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\r\nimport { isUndefined } from '../../../../common/utils/commonUtils'\r\nimport { debounce } from '../../../../common/utils/debounce'\r\nimport { setQuoteImageData } from '../../analysis/generate-quote-image/generateQuoteImageRedux'\r\nimport styles from './styles/row.module.css'\r\nimport { rowClickHandler } from './utils/utils'\r\nconst MarkAsRead = React.lazy(() => retryTenTimes(() => import('../../tools/mark-as-read/mark-as-read')))\r\nconst Audio = React.lazy(() => retryTenTimes(() => import('../../tools/audio/audio')))\r\n\r\nconst Row = ({ data: { searchText, start, end, philosopherFullName, philosopherFullName_i10n, markedMode, currentQuote, currentPhilosopher, markedQuotes, setMarkedQuotes, currentData, setCurrentData, index, scrollPosition, setScrollPosition, listRef, darkMode, voiceSpeed, minMode }, style }) => {\r\n    const [openSnackbar] = useSnackbar()\r\n    const { quote: quotationText, id: quotationId } = currentQuote\r\n    const debouncedHandler = useCallback(\r\n        debounce(() => setScrollPosition(parseInt(quotationId)), 500),\r\n        [quotationId, setScrollPosition]\r\n    )\r\n    const dispatch = useDispatch()\r\n    const rowHandler = useCallback(() => rowClickHandler({ quote: quotationText, openSnackbar, philosopherFullName }), [openSnackbar, philosopherFullName, quotationText])\r\n\r\n    if (!isUndefined(currentQuote))\r\n        return (\r\n            <div role=\"row\" className={styles.row} key={index} style={style} onMouseMove={debouncedHandler} onTouchStart={debouncedHandler}>\r\n                <div role=\"columnheader\" className=\"row\">\r\n                    <span>{`${index + 1}. \"${quotationText}\" ― ${philosopherFullName}`}</span>\r\n                </div>\r\n\r\n                <div role=\"columnheader\" className={styles.actionItems}>\r\n                    <button onClick={rowHandler}>Copy</button>\r\n                    <button\r\n                        onClick={() => {\r\n                            dispatch(setQuoteImageData({ quotationText, philosopherFullName, signature: 'Instagram: @philosophizetruth' }))\r\n                            dispatch(setCurrentModalName('Image'))\r\n                        }}\r\n                        style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000' }}\r\n                    >\r\n                        Download\r\n                    </button>\r\n                    {!minMode && <Audio index={index} currentData={currentData} scrollPosition={scrollPosition} setScrollPosition={setScrollPosition} listRef={listRef} voiceSpeed={voiceSpeed} />}\r\n                    {markedMode && (\r\n                        <Suspense fallback={''}>\r\n                            <MarkAsRead index={quotationId} currentPhilosopher={currentPhilosopher} markedQuotes={markedQuotes} setMarkedQuotes={setMarkedQuotes} currentData={currentData} setCurrentData={setCurrentData} />\r\n                        </Suspense>\r\n                    )}\r\n                    {!minMode && (\r\n                        <button\r\n                            onClick={() => {\r\n                                dispatch(setQuoteImageData({ quotationText, philosopherFullName, signature: 'Instagram: @philosophizetruth', share: true }))\r\n                                dispatch(setCurrentModalName('Image'))\r\n                            }}\r\n                            style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000' }}\r\n                        >\r\n                            Share\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Row\r\n","export function debounce(func, delay) {\r\n    let timer\r\n    return function () {\r\n        const context = this\r\n        const args = arguments\r\n        clearTimeout(timer)\r\n        timer = setTimeout(function () {\r\n            func.apply(context, args)\r\n        }, delay)\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst NoSearchResults = () => (\r\n    <>\r\n        <h4>No search results found!</h4>\r\n\r\n        <div>Guidlines:</div>\r\n\r\n        <div>1. Please check spelling of your search text.</div>\r\n\r\n        <div> 2. Try searching a smaller and a more generic word.</div>\r\n    </>\r\n)\r\nexport default NoSearchResults\r\n","import React from 'react'\r\nimport NoSearchResults from '../../../analysis/no-search-results/no-search-results'\r\n\r\nexport function NoRowsRenderer() {\r\n    return <NoSearchResults />\r\n}\r\n","export const rules = [\r\n    function (value, { end }) {\r\n        if (end <= 20) return 500\r\n    },\r\n    function (value, { end }) {\r\n        if (end <= 40) return 600\r\n    },\r\n    function (value, { end }) {\r\n        if (end <= 100) return 900\r\n    },\r\n    function (value, { end }) {\r\n        if (end > 100) return 1100\r\n    },\r\n]\r\n","import React, { useEffect } from 'react'\r\nimport List from 'react-virtualized/dist/commonjs/List'\r\nimport { ruleEngine } from '../../../../common/utils/ruleEngine'\r\nimport { isDesktop, scrollToQuoteId } from '../../../../common/utils/utils'\r\nimport Row from '../row/row'\r\nimport { NoRowsRenderer } from './utils/listUtils'\r\nimport { rules } from './utils/ruleEngine/rules'\r\nimport { getPhilosopherFullName, getPhilosopherFullName_i10n } from './utils/utils'\r\n\r\nfunction QuotesList({ listRef, width, height, searchText, start, end, markedMode, currentData, setCurrentData, options, currentPhilosopher, markedQuotes, setMarkedQuotes, scrollPosition, setScrollPosition, darkMode, scheduledPosts, setScheduledQuotes, rowsRendered, setRowsRendered, voiceSpeed, minMode }) {\r\n    const philosopherFullName = getPhilosopherFullName({ currentPhilosopher, options })\r\n    const philosopherFullName_i10n = getPhilosopherFullName_i10n({ currentPhilosopher, options })\r\n\r\n    useEffect(() => {\r\n        if (rowsRendered) {\r\n            scrollToQuoteId(listRef, scrollPosition, currentData, currentPhilosopher)\r\n        }\r\n    }, [rowsRendered, currentPhilosopher])\r\n\r\n    useEffect(() => {\r\n        if (listRef.current) {\r\n            scrollToQuoteId(listRef, scrollPosition, currentData, currentPhilosopher)\r\n        }\r\n    }, [listRef?.current])\r\n\r\n    function rowRenderer({ index, ...others }) {\r\n        return <Row data={{ searchText, start, end, philosopherFullName, philosopherFullName_i10n, markedMode, currentData, setCurrentData, currentQuote: currentData[index], index, currentPhilosopher, markedQuotes, setMarkedQuotes, scrollPosition, setScrollPosition, darkMode, listRef, scheduledPosts, setScheduledQuotes, rowsRendered, setRowsRendered, voiceSpeed, minMode }} {...others} />\r\n    }\r\n\r\n    return currentPhilosopher !== undefined && currentData !== undefined && <List height={height} rowCount={currentData?.length} rowHeight={ruleEngine.makeDecision(rules, { params: { end } })} width={width} ref={listRef} rowRenderer={rowRenderer} noRowsRenderer={currentPhilosopher !== undefined && currentData !== undefined ? NoRowsRenderer : null} style={{ padding: '1rem', textAlign: isDesktop() && 'center' }} />\r\n}\r\n\r\nexport default QuotesList\r\n"],"names":["ruleEngine","makeDecision","rules","_ref","value","params","i","length","returnValue","rowClickHandler","openSnackbar","philosopherFullName","quote","quoteText","toLowerCase","trim","splittingIndex","lastIndexOf","updatedQuoteText","chr","index","str","substring","substr","insert","navigator","clipboard","writeText","concat","copyQuoteText","MarkAsRead","React","retryTenTimes","Audio","data","searchText","start","end","philosopherFullName_i10n","markedMode","currentQuote","currentPhilosopher","markedQuotes","setMarkedQuotes","currentData","setCurrentData","scrollPosition","setScrollPosition","listRef","darkMode","voiceSpeed","minMode","style","useSnackbar","quotationText","id","quotationId","debouncedHandler","useCallback","func","delay","timer","context","this","args","arguments","clearTimeout","setTimeout","apply","debounce","parseInt","dispatch","useDispatch","rowHandler","isUndefined","_jsxs","role","className","styles","onMouseMove","onTouchStart","children","_jsx","onClick","setQuoteImageData","signature","setCurrentModalName","textDecoration","color","Suspense","fallback","share","NoSearchResults","_Fragment","NoRowsRenderer","_ref2","_ref3","_ref4","width","height","options","scheduledPosts","setScheduledQuotes","rowsRendered","setRowsRendered","getPhilosopherFullName","getPhilosopherFullName_i10n","useEffect","scrollToQuoteId","current","undefined","List","rowCount","rowHeight","ref","rowRenderer","others","Row","noRowsRenderer","padding","textAlign","isDesktop"],"sourceRoot":""}