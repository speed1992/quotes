{"version":3,"file":"static/js/551.3b5641c0.chunk.js","mappings":"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","sources":["common/utils/commonUtils.js","components/organisms/analysis/generate-quote-image/utils/utils.js","components/organisms/analysis/generate-quote-image/generateQuoteImage.js","components/organisms/analysis/generate-quote-image/utils/hooks.js","components/organisms/home/home-page/utils/utils.js","components/organisms/home/mobile/mobile-menu/utils/utils.js","common/static/assets/images/philosophers|sync|/^/.*$"],"sourcesContent":["export const isUndefined = (value) => typeof value === 'undefined'\r\nexport const isObjEmpty = (obj) => Object.values(obj).length === 0 && obj.constructor === Object\r\n\r\nexport function uuidv4() {\r\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) => (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16))\r\n}\r\n","import html2canvas from 'html2canvas'\r\n\r\nconst downloadImage = (blob, fileName) => {\r\n    const fakeLink = window.document.createElement('a')\r\n    fakeLink.style = 'display:none;'\r\n    fakeLink.download = fileName\r\n\r\n    fakeLink.href = blob\r\n\r\n    document.body.appendChild(fakeLink)\r\n    fakeLink.click()\r\n    document.body.removeChild(fakeLink)\r\n\r\n    fakeLink.remove()\r\n}\r\n\r\nexport const exportAsImage = async (element, imageFileName) => {\r\n    const html = document.getElementsByTagName('html')[0]\r\n    const body = document.getElementsByTagName('body')[0]\r\n    let htmlWidth = html.clientWidth\r\n    let bodyWidth = body.clientWidth\r\n    const newWidth = element.scrollWidth - element.clientWidth\r\n    if (newWidth > element.clientWidth) {\r\n        htmlWidth += newWidth\r\n        bodyWidth += newWidth\r\n    }\r\n    html.style.width = htmlWidth + 'px'\r\n    body.style.width = bodyWidth + 'px'\r\n    const canvas = await html2canvas(element, { scale: 3 })\r\n    const image = canvas.toDataURL('image/png', 1.0)\r\n    downloadImage(image, imageFileName)\r\n    html.style.width = null\r\n    body.style.width = null\r\n}\r\n\r\nexport const shareQuote = async (element, imageFileName) => {\r\n    ;(async () => {\r\n        if (!('share' in navigator)) {\r\n            return\r\n        }\r\n        const canvas = await html2canvas(element, { scale: 3 })\r\n        canvas.toBlob(async (blob) => {\r\n            const files = [new File([blob], imageFileName, { type: blob.type })]\r\n            const shareData = {\r\n                files,\r\n            }\r\n            if (navigator.canShare(shareData)) {\r\n                try {\r\n                    await navigator.share(shareData)\r\n                } catch (err) {\r\n                    if (err.name !== 'AbortError') {\r\n                        console.error(err.name, err.message)\r\n                    }\r\n                }\r\n            } else {\r\n                console.warn('Sharing not supported', shareData)\r\n            }\r\n        })\r\n    })()\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\r\nimport { useCreateQuoteImage } from './utils/hooks'\r\nimport { setThemeClassNameOnHTMLTag } from '../../home/home-page/utils/utils'\r\nconst QuoteWithImage = React.lazy(() => retryTenTimes(() => import('../quote-with-image/quote-with-image')))\r\nconst QuoteWithoutImage = React.lazy(() => retryTenTimes(() => import('../quote-without-image/quote-without-image')))\r\n\r\nconst GenerateQuoteImage = () => {\r\n    let {\r\n        state: { quotationText, philosopherFullName, signature, share = false },\r\n    } = useLocation()\r\n    const exportRef = useRef()\r\n    const currentPhilosopher = useSelector((state) => state.philosophersData.currentPhilosopher)\r\n\r\n    const propsToSend = { exportRef, quotationText, philosopherFullName, signature }\r\n\r\n    useCreateQuoteImage(philosopherFullName, share, exportRef)\r\n\r\n    useEffect(() => {\r\n        setThemeClassNameOnHTMLTag(true)\r\n    }, [])\r\n\r\n    try {\r\n        const imageName = `${currentPhilosopher}.jpg`\r\n        require('../../../../common/static/assets/images/philosophers/' + imageName)\r\n        return <QuoteWithImage {...propsToSend} imageName={imageName} />\r\n    } catch (error) {\r\n        return <QuoteWithoutImage {...propsToSend} />\r\n    }\r\n}\r\n\r\nexport default GenerateQuoteImage\r\n","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport ROUTES from '../../../../../common/routes/routes'\r\nimport { uuidv4 } from '../../../../../common/utils/commonUtils'\r\nimport { setThemeClassNameOnHTMLTag } from '../../../home/home-page/utils/utils'\r\nimport { exportAsImage, shareQuote } from './utils'\r\n\r\nexport function useCreateQuoteImage(philosopherFullName, share, exportRef) {\r\n    const navigate = useNavigate()\r\n\r\n    const darkMode = useSelector((state) => state.philosophersData.darkMode)\r\n\r\n    useEffect(() => {\r\n        setThemeClassNameOnHTMLTag(darkMode)\r\n    }, [darkMode])\r\n\r\n    useEffect(() => {\r\n        ;(async function () {\r\n            const filename = `${philosopherFullName}-quote-${uuidv4()}.png`\r\n            if (share !== undefined && share === true) {\r\n                await exportAsImage(exportRef.current, filename)\r\n                await shareQuote(exportRef.current, filename)\r\n            } else {\r\n                await exportAsImage(exportRef.current, filename)\r\n            }\r\n            navigate(ROUTES.homepage.route)\r\n        })()\r\n    }, [exportRef, navigate, philosopherFullName, share])\r\n}\r\n","import { getPhilosopherData } from '../../../../../common/static/utils/utils'\r\nimport { getUserDetails, sendUserDetails } from '../../mobile/mobile-menu/utils/utils'\r\n\r\nexport const setThemeClassNameOnHTMLTag = (value) => {\r\n    var root = document.getElementsByTagName('html')[0]\r\n    root.className = ''\r\n    if (value) {\r\n        root.classList.add('darkTheme')\r\n    } else {\r\n        root.classList.add('lightTheme')\r\n    }\r\n}\r\n\r\nexport const bringIntoOriginalOrder = (originalOptions, newOptions) => originalOptions.map((item) => getPhilosopherData({ philosopher: item.value, options: newOptions })).reverse()\r\n\r\nexport const bringIntoAlphabeticalOrder = (options) => [...options].sort((a, b) => a.fullName.localeCompare(b.fullName))\r\n\r\nexport function getClientSyncDates(syncDate) {\r\n    let currentClientDate = new Date()\r\n    let lastSyncClientDate = new Date(syncDate)\r\n\r\n    currentClientDate.setHours(0, 0, 0, 0)\r\n    currentClientDate = currentClientDate.getTime()\r\n\r\n    lastSyncClientDate = lastSyncClientDate.setHours(0, 0, 0, 0)\r\n    return { currentClientDate, lastSyncClientDate }\r\n}\r\n\r\nexport async function compareWithServerSyncDatesAndMakeAnAPICall(userName, markedQuotes, openSnackbar, setMarkedQuotes, setSyncDate, markedQuoteClientCount, currentClientDate) {\r\n    let { markedQuotesFromServer, dateFromServer } = await getUserDetails({ userName, markedQuotes, openSnackbar, setMarkedQuotes })\r\n    setSyncDate(Date.now())\r\n    if (markedQuotesFromServer) {\r\n        const markedQuotesFromServerCount = Object.values(markedQuotesFromServer).flat().length\r\n        if (markedQuotesFromServerCount > markedQuoteClientCount) {\r\n            setMarkedQuotes(markedQuotesFromServer)\r\n            openSnackbar('Auto-Sync : Restored all marked quotes!', 4000)\r\n        } else if (markedQuoteClientCount > markedQuotesFromServerCount) {\r\n            dateFromServer = new Date(dateFromServer)\r\n            dateFromServer.setHours(0, 0, 0, 0)\r\n            if (currentClientDate > dateFromServer) {\r\n                await sendUserDetails({ userName, markedQuotes, openSnackbar })\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { API_ENDPOINTS } from '../../../../../../common/apis/apiEndpoints'\r\nimport { retryTenTimes } from '../../../../../../common/utils/apiUtils'\r\n\r\nexport const sendUserDetails = async ({ userName, markedQuotes, openSnackbar, setSyncDate }) => {\r\n    await retryTenTimes(async () => {\r\n        return await fetch(API_ENDPOINTS.MARKED_QUOTES.BACKUP, {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                userName,\r\n                markedQuotes,\r\n                dateSynced: Date.now(),\r\n            }),\r\n        })\r\n    })\r\n}\r\n\r\nexport const getUserDetails = async ({ userName, markedQuotes, openSnackbar, setMarkedQuotes }) => {\r\n    let response = await retryTenTimes(\r\n        async () =>\r\n            await fetch(API_ENDPOINTS.MARKED_QUOTES.RESTORE, {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    userName,\r\n                }),\r\n            })\r\n    )\r\n\r\n    response = await response.json()\r\n    if (response?.ok) {\r\n        try {\r\n            const markedQuotesFromServer = response?.results?.[0]?.markedQuotes\r\n            const markedQuotesFromServerCount = Object.values(markedQuotesFromServer).flat().length\r\n            if (markedQuotesFromServer && markedQuotesFromServerCount > 0) {\r\n                return { markedQuotesFromServer, dateFromServer: response?.results?.[0]?.dateSynced }\r\n                // setMarkedQuotes(response?.results?.[0]?.markedQuotes)\r\n            }\r\n        } catch (error) {\r\n            openSnackbar(JSON.stringify(error))\r\n        }\r\n    } else {\r\n        openSnackbar(JSON.stringify(response.error))\r\n    }\r\n}\r\n\r\nexport const loginRegister = async ({ apiCallType, userName, password, setIsLoggedIn, openSnackbar, setIsFetching }) => {\r\n    const capitalizedUserName = userName.charAt(0).toUpperCase() + userName.slice(1)\r\n    let response\r\n    setIsFetching(true)\r\n    if (apiCallType === 'login') {\r\n        response = await retryTenTimes(\r\n            async () =>\r\n                await fetch(API_ENDPOINTS.USER.LOGIN, {\r\n                    method: 'post',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        userName,\r\n                        password,\r\n                    }),\r\n                })\r\n        )\r\n    } else {\r\n        response = await retryTenTimes(\r\n            async () =>\r\n                await fetch(API_ENDPOINTS.USER.CREATE, {\r\n                    method: 'post',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        userName,\r\n                        password,\r\n                    }),\r\n                })\r\n        )\r\n    }\r\n\r\n    response = await response.json()\r\n    setIsFetching(false)\r\n\r\n    if (response?.ok) {\r\n        setIsLoggedIn(true)\r\n        openSnackbar(capitalizedUserName + ' ' + JSON.stringify(response.serverResponse))\r\n    } else {\r\n        openSnackbar(JSON.stringify(response.error))\r\n    }\r\n}\r\n","var map = {\n\t\"./BEAUVOIR.jpg\": 9073,\n\t\"./BUKOWSKI.jpg\": 3792,\n\t\"./CARL_JUNG.jpg\": 2063,\n\t\"./FREUD.jpg\": 7393,\n\t\"./MARK_TWAIN.jpg\": 5244,\n\t\"./OSHO.jpg\": 6530,\n\t\"./PETERSON.jpg\": 4500,\n\t\"./RICKY_GERVAIS.png\": 8101,\n\t\"./ROUSSEAU.jpg\": 6961\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2892;"],"names":["isUndefined","value","isObjEmpty","obj","Object","values","length","constructor","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","downloadImage","blob","fileName","fakeLink","window","document","createElement","style","download","href","body","appendChild","click","removeChild","remove","exportAsImage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","element","imageFileName","html","htmlWidth","bodyWidth","newWidth","canvas","image","wrap","_context","prev","next","getElementsByTagName","clientWidth","scrollWidth","width","html2canvas","scale","sent","toDataURL","stop","_x","_x2","apply","arguments","shareQuote","_ref2","_callee4","_context4","_callee3","_context3","navigator","abrupt","toBlob","_ref4","_callee2","files","shareData","_context2","File","type","canShare","share","t0","name","console","error","message","warn","_x5","_x3","_x4","QuoteWithImage","React","retryTenTimes","QuoteWithoutImage","_useLocation$state","useLocation","state","quotationText","philosopherFullName","signature","_useLocation$state$sh","exportRef","useRef","currentPhilosopher","useSelector","philosophersData","propsToSend","navigate","useNavigate","darkMode","useEffect","setThemeClassNameOnHTMLTag","filename","concat","undefined","current","ROUTES","homepage","route","useCreateQuoteImage","imageName","require","_jsx","_objectSpread","root","className","classList","add","bringIntoOriginalOrder","originalOptions","newOptions","map","item","getPhilosopherData","philosopher","options","reverse","bringIntoAlphabeticalOrder","_toConsumableArray","sort","a","b","fullName","localeCompare","getClientSyncDates","syncDate","currentClientDate","Date","lastSyncClientDate","setHours","getTime","compareWithServerSyncDatesAndMakeAnAPICall","_x6","_x7","_compareWithServerSyncDatesAndMakeAnAPICall","userName","markedQuotes","openSnackbar","setMarkedQuotes","setSyncDate","markedQuoteClientCount","_yield$getUserDetails","markedQuotesFromServer","dateFromServer","markedQuotesFromServerCount","getUserDetails","now","flat","sendUserDetails","fetch","API_ENDPOINTS","MARKED_QUOTES","BACKUP","method","headers","JSON","stringify","dateSynced","_ref5","_response","response","_response2","_response2$results","_response2$results$","_response3","_response3$results","_response3$results$","RESTORE","json","ok","results","loginRegister","_ref8","_callee7","_ref7","_response4","apiCallType","password","setIsLoggedIn","setIsFetching","capitalizedUserName","_context7","charAt","toUpperCase","slice","_callee5","_context5","USER","LOGIN","_callee6","_context6","CREATE","serverResponse","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","exports"],"sourceRoot":""}