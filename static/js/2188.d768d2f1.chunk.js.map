{"version":3,"file":"static/js/2188.d768d2f1.chunk.js","mappings":"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","sources":["components/desktop-header/desktop-header.jsx","components/desktop-header/utils/utils.js","components/outside-alerter/outside-alerter.js","components/mobile-select/mobile-select.js","components/select/select.js","components/wordLengthSearch/wordLengthSearch.js"],"sourcesContent":["import Switch from '@mui/material/Switch';\nimport TextField from '@mui/material/TextField';\nimport React from \"react\";\nimport { currentPhilosopher } from \"../../common/utils/staticDataUtils\";\nimport OPTIONS from \"../../static/philosophers-data\";\nimport Select from \"../select/select\";\nimport { WordLengthSearch } from \"../wordLengthSearch/wordLengthSearch\";\nimport { onPhilosopherSelectChange } from './utils/utils';\n\nfunction DesktopHeader({ listRef, setSearchText, searchText, setTriggerChange, triggerChange, start, end, setStart, setEnd, setIsFetching, translateKey, setTranslateKey }) {\n    const propsToSend = { start, end, setStart, setEnd, setSearchText }\n    return (\n        <div className=\"header\">\n            <div className=\"row\">\n                <div className=\"column\">\n                    <WordLengthSearch listRef={listRef} setTriggerChange={setTriggerChange} triggerChange={triggerChange}\n                        {...propsToSend}\n                    />\n                </div>\n                <div className=\"column\">\n                    <TextField className=\"wordSearch\" id=\"outlined-search\" label=\"Search\" type=\"search\" size=\"small\" value={searchText} onChange={({ target: { value } }) => setSearchText(value)} />\n                </div>\n                <div className=\"column\">\n                    <Select\n                        options={OPTIONS}\n                        defaultOption={currentPhilosopher}\n                        onChangeHandler={(_, { value: philosopher }) => onPhilosopherSelectChange({ philosopher, triggerChange, listRef, setTriggerChange, setIsFetching, setStart, setEnd, setSearchText })}\n                    />\n                </div>\n                <div className=\"column\">\n                    <span className='vertically'>Translate</span>\n                    <Switch checked={translateKey} onChange={({ target: { checked } }) => {\n                        setTranslateKey(checked)\n                        setTriggerChange(!triggerChange);\n                    }} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DesktopHeader;","import { setCurrentPhilosopher } from \"../../../common/utils/staticDataUtils\";\nimport { scrollToMemorizedRow } from \"../../../common/utils/utils\";\nimport { lazyLoadAllAssets, lazyLoadAsset } from \"../../../static/utils/utils\";\nimport { changeQuotesData } from \"../../quotes-list/utils/utils\";\n\nexport function onPhilosopherSelectChange({ philosopher, triggerChange, listRef, setTriggerChange, setIsFetching, setStart, setEnd, setSearchText }) {\n    function callback() {\n        setCurrentPhilosopher(philosopher);\n        changeQuotesData(philosopher);\n        setTriggerChange(!triggerChange);\n        scrollToMemorizedRow(listRef);\n        setIsFetching(false);\n    }\n    setStart(1);\n    setEnd(\"\");\n    setSearchText('');\n    setIsFetching(true);\n\n    if (philosopher.trim().toLowerCase() === \"all\")\n        lazyLoadAllAssets().then(callback);\n\n    else\n        lazyLoadAsset(philosopher).then(callback);\n}","import React, { useEffect, useRef } from \"react\";\n\nfunction useOutsideAlerter(ref, callback) {\n    useEffect(() => {\n\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                callback();\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref]);\n}\n\nfunction OutsideAlerter({ callback, children }) {\n    const wrapperRef = useRef(null);\n    useOutsideAlerter(wrapperRef, callback);\n\n    return <div ref={wrapperRef} >{children}</div>;\n}\n\nexport default OutsideAlerter;\n","import React, { useEffect, useState } from 'react';\nimport OutsideAlerter from '../outside-alerter/outside-alerter';\nimport './mobile-select.css';\n\nexport default function MobileSelect({ options, onChangeHandler, placeholder, value }) {\n    const [suggestions, setSuggestions] = useState([]);\n    const [searchText, setSearchText] = useState([]);\n\n    useEffect(() => setSearchText(value), []);\n\n    const onFocusHandler = (e) => {\n        setSearchText(\"\");\n        setSuggestions(options)\n    }\n\n    const onTextChange = (e) => {\n        let suggestions = [];\n        const value = e.target.value;\n        if (value.length > 0) {\n            const regex = new RegExp(`${value}`, `i`);\n            suggestions = options.filter(({ fullName }) => regex.test(fullName));\n        }\n\n        setSuggestions(suggestions);\n        setSearchText(value);\n    }\n\n    const onBlurHandler = () => {\n        setSearchText(value)\n    }\n\n    const suggestionSelected = (fullName, value) => {\n        if (value !== undefined) {\n            setSuggestions([]);\n            setSearchText(fullName);\n            onChangeHandler({ target: { value } })\n        }\n    }\n\n    const renderSuggestions = () => {\n        if (suggestions.length === 0) {\n            return null;\n        }\n        return (\n            <ul>\n                {suggestions && suggestions.map(\n                    ({ id, fullName, value }) =>\n                        <li\n                            key={id} value={value}\n                            onClick={(e) => suggestionSelected(fullName, value)}>\n                            {fullName}\n                        </li>\n                )}\n            </ul >\n        )\n    }\n\n    return (\n        <OutsideAlerter callback={() => setSuggestions([])}>\n            <div className=\"TypeAheadDropDown dropDown\">\n                <input type=\"text\"\n                    onFocus={onFocusHandler}\n                    onChange={onTextChange}\n                    placeholder={placeholder}\n                    value={searchText}\n                    onBlur={onBlurHandler}\n                />\n                {renderSuggestions()}\n            </div>\n        </OutsideAlerter >\n    );\n}\n","import { Autocomplete, TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { currentPhilosopher } from \"../../common/utils/staticDataUtils\";\nimport { newSelectFeatureKey } from \"../../common/utils/urlUtils\";\nimport { getCurrentPhilosopherFullname, getPhilosopherObjectIndex } from \"../../static/utils/utils\";\nimport MobileSelect from \"../mobile-select/mobile-select\";\nimport \"./select.css\";\n\nconst Select = ({ options, onChangeHandler, isMobile }) => {\n    const renderSelect = () => {\n        if (isMobile) {\n            return (\n                <>\n                    {newSelectFeatureKey() ?\n                        <MobileSelect\n                            onChangeHandler={onChangeHandler}\n                            value={getCurrentPhilosopherFullname()}\n                            placeholder={\"Search philosopher\"}\n                            options={options} />\n                        :\n                        <select className=\"dropDown\" onChange={onChangeHandler} value={currentPhilosopher}>\n                            {options && options.map(({ id, fullName, value }) => <option key={id} value={value}>{fullName}</option>)}\n                        </select>}\n                </>\n            )\n        }\n        else {\n            return (\n                currentPhilosopher !== undefined && (\n                    <Autocomplete\n                        disableClearable\n                        onChange={onChangeHandler}\n                        getOptionLabel={(option) => option.fullName}\n                        value={options[getPhilosopherObjectIndex(currentPhilosopher)]}\n                        options={options}\n                        size=\"small\"\n                        sx={{ width: 210 }}\n                        renderInput={(params) => <TextField {...params} label=\"Philosopher\" />}\n                        ListboxProps={{ style: { maxHeight: '80vh' }, position: \"bottom-start\" }}\n                    />\n                )\n            )\n\n        }\n    }\n\n    return (renderSelect())\n}\n\nexport default Select","import { TextField } from \"@mui/material\";\nimport React from \"react\";\nimport \"./wordLengthSearch.css\";\n\nexport function WordLengthSearch({ start, end, setStart, setEnd, setSearchText, isMobile }) {\n    const renderComponent = () => {\n        if (isMobile) {\n            return (\n                <> <input className=\"smallInput\" name=\"start\" type=\"number\" min=\"1\" value={start} onChange={({ target: { value } }) => setStart(value)} />{` to `} <input className=\"smallInput\" name=\"end\" type=\"number\" min=\"0\" value={end} onChange={({ target: { value } }) => setEnd(value)} />\n                </>\n\n            )\n        }\n        else {\n            return (\n                <>\n                    <TextField className=\"smallInput\" id=\"outlined-number\" label=\"Start\" type=\"number\" size=\"small\" name=\"start\" min=\"1\" value={start} onChange={({ target: { value } }) => setStart(value)} />\n                    <span className=\"to\">{` to `}</span>\n                    <TextField className=\"smallInput\" id=\"outlined-number\" label=\"End\" type=\"number\" size=\"small\" name=\"end\" min=\"0\" value={end} onChange={({ target: { value } }) => setEnd(value)} />\n                </>\n            )\n        }\n    }\n    return (\n        renderComponent()\n    )\n}"],"names":["listRef","setSearchText","searchText","setTriggerChange","triggerChange","start","end","setStart","setEnd","setIsFetching","translateKey","setTranslateKey","propsToSend","className","id","label","type","size","value","onChange","target","options","OPTIONS","defaultOption","currentPhilosopher","onChangeHandler","_","philosopher","onPhilosopherSelectChange","checked","callback","setCurrentPhilosopher","changeQuotesData","scrollToMemorizedRow","trim","toLowerCase","lazyLoadAllAssets","then","lazyLoadAsset","children","wrapperRef","useRef","ref","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","useOutsideAlerter","MobileSelect","placeholder","useState","suggestions","setSuggestions","onFocus","e","length","regex","RegExp","filter","fullName","test","onBlur","map","onClick","undefined","suggestionSelected","isMobile","newSelectFeatureKey","getCurrentPhilosopherFullname","Autocomplete","disableClearable","getOptionLabel","option","getPhilosopherObjectIndex","sx","width","renderInput","params","TextField","ListboxProps","style","maxHeight","position","WordLengthSearch","name","min"],"sourceRoot":""}