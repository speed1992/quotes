{"version":3,"file":"static/js/192.3458febf.chunk.js","mappings":"mIAaA,UAXsB,SAAC,GAA2E,EAAzEA,YAA0E,IAA7DC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBAClEC,EAAsBJ,EAASK,OAAO,GAAGC,cAAgBN,EAASO,MAAM,GAC9E,OACI,iCACI,iBAAKC,UAAU,WAAf,gBAA8BJ,EAA9B,QACA,mBAAQK,QAAS,kBAAMC,EAAAA,EAAAA,IAAgB,CAAEV,SAAAA,EAAUC,aAAAA,EAAcC,aAAAA,KAAjE,qBACA,mBAAQO,QAAS,kBAAME,EAAAA,EAAAA,IAAe,CAAEX,SAAAA,EAAUC,aAAAA,EAAcC,aAAAA,EAAcC,gBAAAA,KAA9E,0B,gJCNCO,EAAe,mCAAG,kGAASV,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,aAAjC,UACNU,EAAAA,EAAAA,KAAa,iBAC9B,8FACUC,MAAM,sDAAuD,CAC/DC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBlB,SAAAA,EACAC,aAAAA,EACAkB,WAAYC,KAAKC,UAP7B,oFAFuB,cACvBC,EADuB,gBAcVA,EAASC,OAdC,OAc3BD,EAd2B,OAe3BpB,EAAae,KAAKC,UAAUI,IAfD,2CAAH,sDAkBfX,EAAc,mCAAG,8FAASX,EAAT,EAASA,SAAT,EAAmBC,aAAcC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,gBACxD,sBAAbH,EADsB,kCAEDY,EAAAA,EAAAA,KAAa,iBAC9B,8FACUC,MAAM,sDAAuD,CAC/DC,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAHnC,oFAHkB,cAElBO,EAFkB,gBAULA,EAASC,OAVJ,OAUtBD,EAVsB,OAWtBnB,EAAgBmB,EAAS,GAAGrB,cAC5BC,EAAa,gBAAiB,KAZR,4CAAH,sDAgBdsB,EAAa,mCAAG,sGAASxB,EAAT,EAASA,SAAUyB,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,cAAexB,EAA5C,EAA4CA,aAA5C,UACJU,EAAAA,EAAAA,KAAa,iBAC9B,8FACUC,MAAM,8CAA+C,CACvDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBlB,SAAAA,EACAyB,SAAAA,MANZ,oFAFqB,cACrBH,EADqB,gBAaRA,EAASC,OAbD,OAazBD,EAbyB,OAezB,UAAIA,SAAJ,OAAI,EAAUK,IACVD,GAAc,GACdxB,EAAaF,EAAW,IAAMiB,KAAKC,UAAUI,EAASM,kBAEtD1B,EAAae,KAAKC,UAAUI,EAASO,QAnBhB,2CAAH","sources":["components/organisms/home/mobile/backup-restore/backup-restore.js","components/organisms/home/mobile/mobile-menu/utils/utils.js"],"sourcesContent":["import { getUserDetails, sendUserDetails } from '../mobile-menu/utils/utils'\r\n\r\nconst BackupRestore = ({ setUserName, userName, markedQuotes, openSnackbar, setMarkedQuotes }) => {\r\n    const capitalizedUserName = userName.charAt(0).toUpperCase() + userName.slice(1)\r\n    return (\r\n        <>\r\n            <div className=\"userName\">Hi {capitalizedUserName}!</div>\r\n            <button onClick={() => sendUserDetails({ userName, markedQuotes, openSnackbar })}>Backup</button>\r\n            <button onClick={() => getUserDetails({ userName, markedQuotes, openSnackbar, setMarkedQuotes })}>Restore</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BackupRestore\r\n","import { retryTenTimes } from '../../../../../../common/utils/apiUtils'\r\n\r\nexport const sendUserDetails = async ({ userName, markedQuotes, openSnackbar }) => {\r\n    let response = await retryTenTimes(\r\n        async () =>\r\n            await fetch('https://quotes-backend.vercel.app/api/markedQuotes/', {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    userName,\r\n                    markedQuotes,\r\n                    dateSynced: Date.now(),\r\n                }),\r\n            })\r\n    )\r\n\r\n    response = await response.json()\r\n    openSnackbar(JSON.stringify(response))\r\n}\r\n\r\nexport const getUserDetails = async ({ userName, markedQuotes, openSnackbar, setMarkedQuotes }) => {\r\n    if (userName === 'philosophizetruth') {\r\n        let response = await retryTenTimes(\r\n            async () =>\r\n                await fetch('https://quotes-backend.vercel.app/api/markedQuotes/', {\r\n                    method: 'get',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                })\r\n        )\r\n\r\n        response = await response.json()\r\n        setMarkedQuotes(response[0].markedQuotes)\r\n        openSnackbar('Restored data', 2000)\r\n    }\r\n}\r\n\r\nexport const loginRegister = async ({ userName, password, setIsLoggedIn, openSnackbar }) => {\r\n    let response = await retryTenTimes(\r\n        async () =>\r\n            await fetch('https://quotes-backend.vercel.app/api/user/', {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    userName,\r\n                    password,\r\n                }),\r\n            })\r\n    )\r\n\r\n    response = await response.json()\r\n\r\n    if (response?.ok) {\r\n        setIsLoggedIn(true)\r\n        openSnackbar(userName + ' ' + JSON.stringify(response.serverResponse))\r\n    } else {\r\n        openSnackbar(JSON.stringify(response.error))\r\n    }\r\n}\r\n"],"names":["setUserName","userName","markedQuotes","openSnackbar","setMarkedQuotes","capitalizedUserName","charAt","toUpperCase","slice","className","onClick","sendUserDetails","getUserDetails","retryTenTimes","fetch","method","headers","body","JSON","stringify","dateSynced","Date","now","response","json","loginRegister","password","setIsLoggedIn","ok","serverResponse","error"],"sourceRoot":""}