{"version":3,"file":"static/js/65.035c8088.chunk.js","mappings":"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","sources":["webpack://quotes/./src/components/organisms/home/mobile/mobile-menu/mobile-menu.module.css?6dff","components/organisms/home/mobile/mobile-menu/mobile-menu.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"slide_menu\":\"mobile-menu_slide_menu__KemSj\",\"voiceSpeed\":\"mobile-menu_voiceSpeed__P8JV8\",\"userName\":\"mobile-menu_userName__hnKtR\",\"darkTheme\":\"mobile-menu_darkTheme__2VdHQ\",\"backupNote\":\"mobile-menu_backupNote__8b5xv\",\"menuBtn\":\"mobile-menu_menuBtn__7i3vr\",\"voice\":\"mobile-menu_voice__5a+EW\"};","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport useSnackbar from '../../../../../common/components/snackbar/useSnackbar'\r\nimport ROUTES from '../../../../../common/routes/routes'\r\nimport { retryTenTimes } from '../../../../../common/utils/apiUtils'\r\nimport { ALPHABETICAL, LATEST } from '../../home-page/constants/constants'\r\nimport { setVoiceSpeedRedux, setVoiceTypeRedux } from '../../home-page/homePageRedux/homePageRedux'\r\nimport styles from './mobile-menu.module.css'\r\nconst BuildInfo = React.lazy(() => retryTenTimes(() => import('../../../tools/build-info/build-info')))\r\nconst LoginRegister = React.lazy(() => retryTenTimes(() => import('../login-register/login-register')))\r\nconst OutsideAlerter = React.lazy(() => retryTenTimes(() => import('../../../../../common/components/outside-alerter/outside-alerter')))\r\n\r\nfunction MobileMenu({ markedMode, setMarkedMode, visible, toggleVisible, darkMode, setDarkMode, setSorting, sorting, userName, setUserName, setMarkedQuotes, isLoggedIn, setIsLoggedIn, password, setPassword, setIsFetching }) {\r\n    const voiceSpeed = useSelector(({ philosophersData: { voiceSpeed } }) => voiceSpeed)\r\n    const voiceType = useSelector(({ philosophersData: { voiceType } }) => voiceType)\r\n    const markedQuotes = useSelector(({ philosophersData: { markedQuotes } }) => markedQuotes)\r\n    const [voices, setVoices] = useState([])\r\n    const [openSnackbar] = useSnackbar()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onClickSortButtonHandler = (event) => {\r\n        const id = event.target.id\r\n\r\n        if (id === LATEST) setSorting(LATEST)\r\n        else setSorting(ALPHABETICAL)\r\n    }\r\n\r\n    useEffect(() => {\r\n        function setSpeech() {\r\n            return new Promise(function (resolve) {\r\n                let synth = window.speechSynthesis\r\n                let id\r\n\r\n                id = setInterval(() => {\r\n                    if (synth.getVoices().length !== 0) {\r\n                        resolve(synth.getVoices())\r\n                        clearInterval(id)\r\n                    }\r\n                }, 10)\r\n            })\r\n        }\r\n\r\n        let s = setSpeech()\r\n        s.then((voices) => setVoices(voices))\r\n    }, [])\r\n\r\n    return (\r\n        <OutsideAlerter callback={useCallback(() => toggleVisible(false), [toggleVisible])}>\r\n            <ul className={styles.slide_menu} id=\"slide_menu\" style={{ display: visible ? 'block' : 'none' }}>\r\n                <li key=\"1\">\r\n                    Sort philosophers\r\n                    <div>\r\n                        <input type=\"radio\" id={LATEST} name=\"sortType\" onClick={onClickSortButtonHandler} defaultChecked={sorting === LATEST} />\r\n                        <label htmlFor={LATEST}>Latest</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"radio\" id={ALPHABETICAL} name=\"sortType\" onClick={onClickSortButtonHandler} defaultChecked={sorting === ALPHABETICAL} />\r\n                        <label htmlFor={ALPHABETICAL}>Alphabetical</label>\r\n                    </div>\r\n                </li>\r\n                <li key=\"2\">\r\n                    Marked Mode\r\n                    <input type=\"checkbox\" checked={markedMode} onChange={({ target: { checked } }) => setMarkedMode(checked)} />\r\n                </li>\r\n                <li key=\"3\">\r\n                    Dark Mode\r\n                    <input type=\"checkbox\" checked={darkMode} onChange={({ target: { checked } }) => setDarkMode(checked)} />\r\n                </li>\r\n                <li key=\"4\">\r\n                    Voice Speed[1-20]\r\n                    <input onChange={(event) => dispatch(setVoiceSpeedRedux(event.target.value / 10))} className={styles.voiceSpeed} type=\"number\" value={voiceSpeed ? voiceSpeed * 10 : ''} />\r\n                </li>\r\n                <li key=\"5\">\r\n                    <div>Available Voices</div>\r\n                    {voices?.length !== 0 && (\r\n                        <select\r\n                            className={styles.voice}\r\n                            onChange={(event) => {\r\n                                dispatch(setVoiceTypeRedux(event?.target?.value))\r\n                                speechSynthesis.cancel()\r\n                            }}\r\n                            value={voiceType}\r\n                        >\r\n                            {voices?.map((voice, index) => (\r\n                                <option value={index} key={voice?.name}>\r\n                                    {voice?.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    )}\r\n                </li>\r\n                <li key=\"6\">\r\n                    <Link to={ROUTES.report.route} style={{ textDecoration: 'none', color: '#000' }}>\r\n                        <button>Open Report</button>\r\n                    </Link>\r\n                </li>\r\n                <li key=\"7\">\r\n                    <LoginRegister {...{ setUserName, userName, openSnackbar, isLoggedIn, setIsLoggedIn, setMarkedQuotes, markedQuotes, password, setPassword, setIsFetching }} />\r\n                    {!isLoggedIn && <div className={styles.backupNote}>You can login to backup your marked quotes in database in case browser data gets deleted.</div>}\r\n                </li>\r\n                <li key=\"8\">\r\n                    <BuildInfo />\r\n                </li>\r\n            </ul>\r\n        </OutsideAlerter>\r\n    )\r\n}\r\n\r\nexport default MobileMenu\r\n"],"names":["BuildInfo","React","retryTenTimes","LoginRegister","OutsideAlerter","_ref","markedMode","setMarkedMode","visible","toggleVisible","darkMode","setDarkMode","setSorting","sorting","userName","setUserName","setMarkedQuotes","isLoggedIn","setIsLoggedIn","password","setPassword","setIsFetching","voiceSpeed","useSelector","_ref2","philosophersData","voiceType","_ref3","markedQuotes","_ref4","_useState","useState","_useState2","_slicedToArray","voices","setVoices","_useSnackbar","useSnackbar","openSnackbar","dispatch","useDispatch","onClickSortButtonHandler","event","target","id","LATEST","ALPHABETICAL","useEffect","Promise","resolve","synth","window","speechSynthesis","setInterval","getVoices","length","clearInterval","then","_jsx","callback","useCallback","children","_jsxs","className","styles","style","display","type","name","onClick","defaultChecked","htmlFor","checked","onChange","_ref5","_ref6","setVoiceSpeedRedux","value","_event$target","setVoiceTypeRedux","cancel","map","voice","index","Link","to","ROUTES","report","route","textDecoration","color"],"sourceRoot":""}