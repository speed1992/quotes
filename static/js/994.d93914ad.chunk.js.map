{"version":3,"file":"static/js/994.d93914ad.chunk.js","mappings":"gKACA,GAAgB,UAAY,kCAAkC,QAAU,iC,SCgCxE,EA9BsB,SAAC,GAA6I,IAA3IA,EAA0I,EAA1IA,YAAaC,EAA6H,EAA7HA,SAAUC,EAAmH,EAAnHA,WAAYC,EAAuG,EAAvGA,cAAeC,EAAwF,EAAxFA,aAA6CC,GAA2C,EAA1EC,aAA0E,EAA5DC,gBAA4D,EAA3CF,UAAUG,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACrIC,EAAsBT,EAASU,OAAO,GAAGC,cAAgBX,EAASY,MAAM,GAE9E,OACI,8BACMX,GAcE,4BACI,iBAAKY,UAAWC,EAAAA,SAAhB,UAAiC,MAAIL,EAAoB,QACzD,mBAAQI,UAAWC,EAAAA,QAAgBC,QAAS,kBAAMb,GAAc,IAAhE,SAAwE,eAf5E,gCAAE,YAEE,kBAAOc,KAAK,OAAOH,UAAWC,EAAAA,UAAkBG,SAAU,SAACC,GAAD,OAAOnB,EAAYmB,EAAEC,OAAOC,QAAQA,MAAOpB,IAAY,YAEjH,kBAAOgB,KAAK,WAAWH,UAAWC,EAAAA,UAAkBG,SAAU,SAACC,GAAD,OAAOX,EAAYW,EAAEC,OAAOC,QAAQA,MAAOhB,KACzG,mBAAQS,UAAWC,EAAAA,QAAgBC,QAAS,kBAAMM,EAAAA,EAAAA,IAAc,CAAEC,YAAa,QAAStB,SAAAA,EAAUI,SAAAA,EAAUF,cAAAA,EAAeC,aAAAA,EAAcK,cAAAA,KAAzI,SAA2J,WAG3J,mBAAQK,UAAWC,EAAAA,QAAgBC,QAAS,kBAAMM,EAAAA,EAAAA,IAAc,CAAEC,YAAa,WAAYtB,SAAAA,EAAUI,SAAAA,EAAUF,cAAAA,EAAeC,aAAAA,EAAcK,cAAAA,KAA5I,SAA8J","sources":["webpack://quotes/./src/components/organisms/home/mobile/login-register/login-register.module.css?8f54","components/organisms/home/mobile/login-register/login-register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userInput\":\"login-register_userInput__Wqu7E\",\"menuBtn\":\"login-register_menuBtn__BMabL\"};","import { loginRegister } from '../mobile-menu/utils/utils'\nimport styles from './login-register.module.css'\n\nconst LoginRegister = ({ setUserName, userName, isLoggedIn, setIsLoggedIn, openSnackbar, markedQuotes, setMarkedQuotes, password, setPassword, setIsFetching }) => {\n    const capitalizedUserName = userName.charAt(0).toUpperCase() + userName.slice(1)\n\n    return (\n        <>\n            {!isLoggedIn ? (\n                <>\n                    Username\n                    <input type=\"text\" className={styles.userInput} onChange={(e) => setUserName(e.target.value)} value={userName} />\n                    Password\n                    <input type=\"password\" className={styles.userInput} onChange={(e) => setPassword(e.target.value)} value={password} />\n                    <button className={styles.menuBtn} onClick={() => loginRegister({ apiCallType: 'login', userName, password, setIsLoggedIn, openSnackbar, setIsFetching })}>\n                        Login\n                    </button>\n                    <button className={styles.menuBtn} onClick={() => loginRegister({ apiCallType: 'register', userName, password, setIsLoggedIn, openSnackbar, setIsFetching })}>\n                        Register\n                    </button>\n                </>\n            ) : (\n                <div>\n                    <div className={styles.userName}>Hi {capitalizedUserName}!</div>\n                    <button className={styles.menuBtn} onClick={() => setIsLoggedIn(false)}>\n                        Logout\n                    </button>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default LoginRegister\n"],"names":["setUserName","userName","isLoggedIn","setIsLoggedIn","openSnackbar","password","markedQuotes","setMarkedQuotes","setPassword","setIsFetching","capitalizedUserName","charAt","toUpperCase","slice","className","styles","onClick","type","onChange","e","target","value","loginRegister","apiCallType"],"sourceRoot":""}