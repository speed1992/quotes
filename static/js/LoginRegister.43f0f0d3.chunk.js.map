{"version":3,"file":"static/js/LoginRegister.43f0f0d3.chunk.js","mappings":"qJACA,SAAgB,UAAY,kCAAkC,QAAU,iC,aCGxE,MA+BA,EA/BsBA,IAAqG,IAApG,YAAEC,EAAW,WAAEC,EAAU,cAAEC,EAAa,aAAEC,EAAY,SAAEC,EAAQ,YAAEC,EAAW,cAAEC,GAAeP,EACjH,MAAM,SAAEQ,IAAaC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,mBAC5CC,GAA8B,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUK,OAAO,GAAGC,eAAgBN,EAASO,MAAM,GAE/E,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACMhB,GAcEiB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOb,SAASU,SAAA,CAAC,MAAIN,EAAoB,QACzDI,EAAAA,EAAAA,KAAA,UAAQI,UAAWC,EAAOC,QAASC,QAASA,IAAMpB,GAAc,GAAOe,SAAC,eAf5EC,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,CAAE,YAEEF,EAAAA,EAAAA,KAAA,SAAOQ,KAAK,OAAOJ,UAAWC,EAAOI,UAAWC,SAAWC,GAAM1B,EAAY0B,EAAEC,OAAOC,OAAQA,MAAOrB,IAAY,YAEjHQ,EAAAA,EAAAA,KAAA,SAAOQ,KAAK,WAAWJ,UAAWC,EAAOI,UAAWC,SAAWC,GAAMrB,EAAYqB,EAAEC,OAAOC,OAAQA,MAAOxB,KACzGW,EAAAA,EAAAA,KAAA,UAAQI,UAAWC,EAAOC,QAASC,QAASA,KAAMO,EAAAA,EAAAA,IAAc,CAAEC,YAAa,QAASvB,WAAUH,WAAUF,gBAAeC,eAAcG,kBAAiBW,SAAC,WAG3JF,EAAAA,EAAAA,KAAA,UAAQI,UAAWC,EAAOC,QAASC,QAASA,KAAMO,EAAAA,EAAAA,IAAc,CAAEC,YAAa,WAAYvB,WAAUH,WAAUF,gBAAeC,eAAcG,kBAAiBW,SAAC,iBAYvK,C","sources":["webpack://quotes/./src/components/organisms/home/mobile/login-register/login-register.module.css?8f54","components/organisms/home/mobile/login-register/login-register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userInput\":\"login-register_userInput__Wqu7E\",\"menuBtn\":\"login-register_menuBtn__BMabL\"};","import { useSelector } from 'react-redux'\nimport { loginRegister } from '../mobile-menu/utils/utils'\nimport styles from './login-register.module.css'\n\nconst LoginRegister = ({ setUserName, isLoggedIn, setIsLoggedIn, openSnackbar, password, setPassword, setIsFetching }) => {\n    const { userName } = useSelector((state) => state.philosophersData)\n    const capitalizedUserName = userName?.charAt(0).toUpperCase() + userName.slice(1)\n\n    return (\n        <>\n            {!isLoggedIn ? (\n                <>\n                    Username\n                    <input type=\"text\" className={styles.userInput} onChange={(e) => setUserName(e.target.value)} value={userName} />\n                    Password\n                    <input type=\"password\" className={styles.userInput} onChange={(e) => setPassword(e.target.value)} value={password} />\n                    <button className={styles.menuBtn} onClick={() => loginRegister({ apiCallType: 'login', userName, password, setIsLoggedIn, openSnackbar, setIsFetching })}>\n                        Login\n                    </button>\n                    <button className={styles.menuBtn} onClick={() => loginRegister({ apiCallType: 'register', userName, password, setIsLoggedIn, openSnackbar, setIsFetching })}>\n                        Register\n                    </button>\n                </>\n            ) : (\n                <div>\n                    <div className={styles.userName}>Hi {capitalizedUserName}!</div>\n                    <button className={styles.menuBtn} onClick={() => setIsLoggedIn(false)}>\n                        Logout\n                    </button>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default LoginRegister\n"],"names":["_ref","setUserName","isLoggedIn","setIsLoggedIn","openSnackbar","password","setPassword","setIsFetching","userName","useSelector","state","philosophersData","capitalizedUserName","charAt","toUpperCase","slice","_jsx","_Fragment","children","_jsxs","className","styles","menuBtn","onClick","type","userInput","onChange","e","target","value","loginRegister","apiCallType"],"sourceRoot":""}