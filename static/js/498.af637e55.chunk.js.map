{"version":3,"file":"static/js/498.af637e55.chunk.js","mappings":"oIAAO,IAAMA,EAAa,CACtBC,aAAc,SAAUC,EAAV,GACV,IAD+C,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAC3BC,EAAI,EAAGA,GAAKH,EAAMI,OAAQD,IAAK,CACpC,IAAME,EAAcL,EAAMG,GAAGF,EAAOC,GACpC,GAAIG,EAAa,OAAOA,M,kJCF9BC,EAAkBC,EAAAA,MAAW,kBAAMC,EAAAA,EAAAA,KAAc,kBAAM,oCAEtD,SAASC,IACZ,OAAO,SAACH,EAAD,ICLJ,IAAMN,EAAQ,CACjB,SAAUC,EAAV,GACI,GADwB,EAATS,OACF,GAAI,OAAO,KAE5B,SAAUT,EAAV,GAA6B,IAAVS,EAAS,EAATA,MACf,GAAIA,EAAQ,IAAMA,GAAS,GAAI,OAAO,KAE1C,SAAUT,EAAV,GAA6B,IAAVS,EAAS,EAATA,MACf,GAAIA,EAAQ,IAAMA,GAAS,GAAI,OAAO,KAE1C,SAAUT,EAAV,GAA6B,IAAVS,EAAS,EAATA,MACf,GAAIA,EAAQ,IAAMA,GAAS,IAAK,OAAO,MAE3C,SAAUT,EAAV,GACI,GADwB,EAATS,MACH,IAAK,OAAO,KAE5B,WACI,OAAO,M,sBCRTC,EAAMJ,EAAAA,MAAW,kBAAMC,EAAAA,EAAAA,KAAc,kBAAM,oCAiBjD,MAfA,YAA+P,IAAzOI,EAAwO,EAAxOA,QAASC,EAA+N,EAA/NA,MAAOC,EAAwN,EAAxNA,OAAQC,EAAgN,EAAhNA,WAAYL,EAAoM,EAApMA,MAAOM,EAA6L,EAA7LA,IAAKC,EAAwL,EAAxLA,WAAYC,EAA4K,EAA5KA,YAAaC,EAA+J,EAA/JA,eAAgBC,EAA+I,EAA/IA,QAASC,EAAsI,EAAtIA,mBAAoBC,EAAkH,EAAlHA,aAAcC,EAAoG,EAApGA,gBAAiBC,EAAmF,EAAnFA,eAAgBC,EAAmE,EAAnEA,kBAAmBC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,mBAC9NC,GAAsBC,EAAAA,EAAAA,IAAuB,CAAET,mBAAAA,EAAoBD,QAAAA,IACnEW,GAA2BC,EAAAA,EAAAA,IAA4B,CAAEX,mBAAAA,EAAoBD,QAAAA,IAUnF,OARAa,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAqBtB,EAASY,EAAgBN,KAC/C,CAACN,KAMG,SAACuB,EAAA,GAAD,CAAMC,UAAU,OAAOtB,OAAQA,EAAQuB,SAAUnB,EAAYd,OAAQkC,UAAWxC,EAAAA,EAAAA,aAAwBE,EAAO,CAAEE,OAAQ,CAAEQ,MAAAA,KAAYG,MAAOA,EAAO0B,IAAK3B,EAAS4B,YAJ1K,YAA4C,IAArBC,EAAoB,EAApBA,MAAUC,GAAU,YACvC,OAAO,SAAC/B,GAAD,QAAKgC,KAAM,CAAE5B,WAAAA,EAAYL,MAAAA,EAAOM,IAAAA,EAAKa,oBAAAA,EAAqBE,yBAAAA,EAA0Bd,WAAAA,EAAYC,YAAAA,EAAaC,eAAAA,EAAgByB,aAAc1B,EAAYuB,GAAQA,MAAAA,EAAOpB,mBAAAA,EAAoBC,aAAAA,EAAcC,gBAAAA,EAAiBC,eAAAA,EAAgBC,kBAAAA,EAAmBC,SAAAA,EAAUd,QAAAA,EAASe,eAAAA,EAAgBC,mBAAAA,IAA0Bc,KAGhIG,eAAgBpC,EAAgBqC,MAAO,CAAEC,QAAS","sources":["common/utils/ruleEngine.js","components/organisms/home/quotes-list/utils/listUtils.js","components/organisms/home/quotes-list/utils/ruleEngine/rules.js","components/organisms/home/quotes-list/quotes-list.jsx"],"sourcesContent":["export const ruleEngine = {\r\n    makeDecision: function (rules, { value, params }) {\r\n        for (let i = 0; i <= rules.length; i++) {\r\n            const returnValue = rules[i](value, params)\r\n            if (returnValue) return returnValue\r\n        }\r\n    },\r\n}\r\n","import React from 'react'\r\nimport { retryTenTimes } from '../../../../../common/utils/apiUtils'\r\nconst NoSearchResults = React.lazy(() => retryTenTimes(() => import('../../../analysis/no-search-results/no-search-results')))\r\n\r\nexport function NoRowsRenderer() {\r\n    return <NoSearchResults />\r\n}\r\n","export const rules = [\r\n    function (value, { start }) {\r\n        if (start <= 20) return 500\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 20 && start <= 40) return 600\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 40 && start <= 60) return 1000\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 60 && start <= 100) return 1400\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 100) return 2000\r\n    },\r\n    function () {\r\n        return 800\r\n    },\r\n]\r\n","import React, { useEffect } from 'react'\r\nimport List from 'react-virtualized/dist/commonjs/List'\r\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\r\nimport { ruleEngine } from '../../../../common/utils/ruleEngine'\r\nimport { scrollToMemorizedRow } from '../../../../common/utils/utils'\r\nimport './quotes-list.css'\r\nimport { NoRowsRenderer } from './utils/listUtils'\r\nimport { rules } from './utils/ruleEngine/rules'\r\nimport { getPhilosopherFullName, getPhilosopherFullName_i10n } from './utils/utils'\r\nconst Row = React.lazy(() => retryTenTimes(() => import('../row/row')))\r\n\r\nfunction QuotesList({ listRef, width, height, searchText, start, end, markedMode, currentData, setCurrentData, options, currentPhilosopher, markedQuotes, setMarkedQuotes, scrollPosition, setScrollPosition, darkMode, scheduledPosts, setScheduledQuotes }) {\r\n    const philosopherFullName = getPhilosopherFullName({ currentPhilosopher, options })\r\n    const philosopherFullName_i10n = getPhilosopherFullName_i10n({ currentPhilosopher, options })\r\n\r\n    useEffect(() => {\r\n        scrollToMemorizedRow(listRef, scrollPosition, currentData)\r\n    }, [listRef])\r\n\r\n    function rowRenderer({ index, ...others }) {\r\n        return <Row data={{ searchText, start, end, philosopherFullName, philosopherFullName_i10n, markedMode, currentData, setCurrentData, currentQuote: currentData[index], index, currentPhilosopher, markedQuotes, setMarkedQuotes, scrollPosition, setScrollPosition, darkMode, listRef, scheduledPosts, setScheduledQuotes }} {...others} />\r\n    }\r\n\r\n    return <List className=\"List\" height={height} rowCount={currentData.length} rowHeight={ruleEngine.makeDecision(rules, { params: { start } })} width={width} ref={listRef} rowRenderer={rowRenderer} noRowsRenderer={NoRowsRenderer} style={{ padding: '1rem' }} />\r\n}\r\n\r\nexport default QuotesList\r\n"],"names":["ruleEngine","makeDecision","rules","value","params","i","length","returnValue","NoSearchResults","React","retryTenTimes","NoRowsRenderer","start","Row","listRef","width","height","searchText","end","markedMode","currentData","setCurrentData","options","currentPhilosopher","markedQuotes","setMarkedQuotes","scrollPosition","setScrollPosition","darkMode","scheduledPosts","setScheduledQuotes","philosopherFullName","getPhilosopherFullName","philosopherFullName_i10n","getPhilosopherFullName_i10n","useEffect","scrollToMemorizedRow","List","className","rowCount","rowHeight","ref","rowRenderer","index","others","data","currentQuote","noRowsRenderer","style","padding"],"sourceRoot":""}