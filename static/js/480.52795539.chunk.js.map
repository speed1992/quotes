{"version":3,"file":"static/js/480.52795539.chunk.js","mappings":"AAAAA,UAAY,SAAAC,GAAqB,IAAX,KAAEC,GAAMD,EAC1B,MAAM,YAAEE,EAAW,WAAEC,EAAU,cAAEC,EAAa,IAAEC,EAAG,MAAEC,GAAUL,EACzDM,EAAkBJ,EAAWK,cAC7BC,EAA2C,MAAjB,OAAbL,QAAa,IAAbA,OAAa,EAAbA,EAAeK,YAAiC,OAAbL,QAAa,IAAbA,OAAa,EAAbA,EAAeK,WAAWC,MAAM,MAAqB,OAAbN,QAAa,IAAbA,OAAa,EAAbA,EAAeK,WACvGE,EAA2C,MAAjB,OAAbP,QAAa,IAAbA,OAAa,EAAbA,EAAeO,YAAiC,OAAbP,QAAa,IAAbA,OAAa,EAAbA,EAAeO,WAAWD,MAAM,MAAqB,OAAbN,QAAa,IAAbA,OAAa,EAAbA,EAAeO,WAevGC,EAbiBV,EAAYW,QAAOC,IAAgB,IAAf,MAAEC,GAAOD,EAChD,MAAME,EAAaD,EAAMP,cACzB,MAAmB,KAAfG,GAAoC,KAAfF,EACdO,EAAWC,SAASV,GACL,KAAfI,GAAoC,KAAfF,EACrBO,EAAWC,SAASV,KAAqBE,EAAWS,MAAMC,GAASH,EAAWC,SAASE,KACxE,KAAfR,GAAoC,KAAfF,EACrBO,EAAWC,SAASV,IAAoBI,EAAWO,MAAMC,GAASH,EAAWC,SAASE,KACvE,KAAfR,GAAoC,KAAfF,EACrBO,EAAWC,SAASV,KAAqBE,EAAWS,MAAMC,GAASH,EAAWC,SAASE,MAAUR,EAAWO,MAAMC,GAASH,EAAWC,SAASE,UADnJ,CAEP,IAG0BN,QAAOO,IAAgB,IAAf,MAAEL,GAAOK,EAC3C,MAAMC,EAAYN,EAAML,MAAM,KAAKG,QAAQS,GAAY,KAANA,IAAUC,OAE3D,OAAIlB,EACOgB,GAAaf,IAAkB,KAARD,GAAcgB,GAAahB,GAEtDgB,GAAaf,CAAK,IAG7BkB,KAAKC,YAAYC,KAAKC,UAAUf,GACpC","sources":["common/web-workers/filter-worker.js"],"sourcesContent":["onmessage = function ({ data }) {\r\n    const { currentData, searchText, searchFilters, end, start } = data\r\n    const lowerSearchText = searchText.toLowerCase()\r\n    const exclusions = searchFilters?.exclusions !== '' ? searchFilters?.exclusions.split('\\n') : searchFilters?.exclusions\r\n    const inclusions = searchFilters?.inclusions !== '' ? searchFilters?.inclusions.split('\\n') : searchFilters?.inclusions\r\n\r\n    const filteredQuotes = currentData.filter(({ quote }) => {\r\n        const lowerQuote = quote.toLowerCase()\r\n        if (inclusions === '' && exclusions === '') {\r\n            return lowerQuote.includes(lowerSearchText)\r\n        } else if (inclusions === '' && exclusions !== '') {\r\n            return lowerQuote.includes(lowerSearchText) && !exclusions.some((word) => lowerQuote.includes(word))\r\n        } else if (inclusions !== '' && exclusions === '') {\r\n            return lowerQuote.includes(lowerSearchText) && inclusions.some((word) => lowerQuote.includes(word))\r\n        } else if (inclusions !== '' && exclusions !== '') {\r\n            return lowerQuote.includes(lowerSearchText) && !exclusions.some((word) => lowerQuote.includes(word)) && inclusions.some((word) => lowerQuote.includes(word))\r\n        }\r\n    })\r\n\r\n    const result = filteredQuotes.filter(({ quote }) => {\r\n        const wordCount = quote.split(' ').filter((n) => n !== '').length\r\n\r\n        if (end) {\r\n            return wordCount >= start && (end === '' || wordCount <= end)\r\n        }\r\n        return wordCount >= start\r\n    })\r\n\r\n    this.postMessage(JSON.stringify(result))\r\n}\r\n"],"names":["onmessage","_ref","data","currentData","searchText","searchFilters","end","start","lowerSearchText","toLowerCase","exclusions","split","inclusions","result","filter","_ref2","quote","lowerQuote","includes","some","word","_ref3","wordCount","n","length","this","postMessage","JSON","stringify"],"sourceRoot":""}