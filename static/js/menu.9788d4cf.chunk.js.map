{"version":3,"file":"static/js/menu.9788d4cf.chunk.js","mappings":"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","sources":["webpack://quotes/./src/common/small-loader/small-loader.module.css?1d92","common/small-loader/small-loader.js","webpack://quotes/./src/components/organisms/home/mobile/mobile-menu/mobile-menu.module.css?6dff","components/organisms/home/mobile/mobile-menu/mobile-menu.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"small-loader_loader__ulY5G\",\"spin\":\"small-loader_spin__SOsfI\",\"darkTheme\":\"small-loader_darkTheme__z-xia\"};","import React from 'react'\r\nimport styles from './small-loader.module.css'\r\n\r\nconst SmallLoader = ({ darkMode }) => <span className={`${styles.loader} ${darkMode ? styles.darkTheme : ''}`}> </span>\r\n\r\nexport default SmallLoader\r\n","// extracted by mini-css-extract-plugin\nexport default {\"darkTheme\":\"mobile-menu_darkTheme__2VdHQ\",\"lightTheme\":\"mobile-menu_lightTheme__TnJ3O\",\"slide_menu\":\"mobile-menu_slide_menu__KemSj\",\"voiceSpeed\":\"mobile-menu_voiceSpeed__P8JV8\",\"userName\":\"mobile-menu_userName__hnKtR\",\"userInput\":\"mobile-menu_userInput__EKev-\",\"voices\":\"mobile-menu_voices__VkQFg\",\"backupNote\":\"mobile-menu_backupNote__8b5xv\",\"textCenter\":\"mobile-menu_textCenter__v1ILm\",\"paddingTop\":\"mobile-menu_paddingTop__BB1N5\"};","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setCurrentModalName } from '../../../../../common/components/modal/modalRedux'\r\nimport useSnackbar from '../../../../../common/components/snackbar/useSnackbar'\r\nimport SmallLoader from '../../../../../common/small-loader/small-loader'\r\nimport { retryTenTimes } from '../../../../../common/utils/apiUtils'\r\nimport { checkQueryParams } from '../../../../../common/utils/urlUtils'\r\nimport { ALPHABETICAL, LATEST } from '../../home-page/constants/constants'\r\nimport { setVoiceSpeedRedux, setVoiceTypeRedux } from '../../home-page/homePageRedux/homePageRedux'\r\nimport styles from './mobile-menu.module.css'\r\nconst BuildInfo = React.lazy(() => retryTenTimes(() => import('../../../tools/build-info/build-info')))\r\nconst LoginRegister = React.lazy(() => retryTenTimes(() => import('../login-register/login-register')))\r\nconst OutsideAlerter = React.lazy(() => retryTenTimes(() => import('../../../../../common/components/outside-alerter/outside-alerter')))\r\n\r\nfunction MobileMenu({ markedMode, setMarkedMode, visible, toggleVisible, darkMode, setDarkMode, setSorting, sorting, userName, setUserName, setMarkedQuotes, isLoggedIn, setIsLoggedIn, password, setPassword, setIsFetching }) {\r\n    const voiceSpeed = useSelector(({ philosophersData: { voiceSpeed } }) => voiceSpeed)\r\n    const voiceType = useSelector(({ philosophersData: { voiceType } }) => voiceType)\r\n    const markedQuotes = useSelector(({ philosophersData: { markedQuotes } }) => markedQuotes)\r\n    const [voices, setVoices] = useState([])\r\n    const [openSnackbar] = useSnackbar()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onClickSortButtonHandler = (event) => {\r\n        const id = event.target.id\r\n\r\n        if (id === LATEST) setSorting(LATEST)\r\n        else setSorting(ALPHABETICAL)\r\n    }\r\n\r\n    useEffect(() => {\r\n        function setSpeech() {\r\n            return new Promise(function (resolve) {\r\n                let synth = window.speechSynthesis\r\n                let id\r\n\r\n                id = setInterval(() => {\r\n                    if (synth.getVoices().length !== 0) {\r\n                        resolve(synth.getVoices())\r\n                        clearInterval(id)\r\n                    }\r\n                }, 10)\r\n            })\r\n        }\r\n\r\n        let s = setSpeech()\r\n        s.then((voices) => setVoices(voices))\r\n    }, [])\r\n\r\n    return (\r\n        <OutsideAlerter callback={useCallback(() => toggleVisible(false), [toggleVisible])}>\r\n            <ul className={`${styles.slide_menu} ${darkMode ? styles.darkTheme : styles.lightTheme}`} id=\"slide_menu\" style={{ display: visible ? 'block' : 'none' }}>\r\n                <li key=\"1\">\r\n                    Sort philosophers\r\n                    <div>\r\n                        <input type=\"radio\" id={LATEST} name=\"sortType\" onClick={onClickSortButtonHandler} defaultChecked={sorting === LATEST} />\r\n                        <label htmlFor={LATEST}>Latest</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"radio\" id={ALPHABETICAL} name=\"sortType\" onClick={onClickSortButtonHandler} defaultChecked={sorting === ALPHABETICAL} />\r\n                        <label htmlFor={ALPHABETICAL}>Alphabetical</label>\r\n                    </div>\r\n                </li>\r\n                <li key=\"2\">\r\n                    Marked Mode\r\n                    <input type=\"checkbox\" checked={markedMode} onChange={({ target: { checked } }) => setMarkedMode(checked)} />\r\n                </li>\r\n                <li key=\"3\">\r\n                    Dark Mode\r\n                    <input type=\"checkbox\" checked={darkMode} onChange={({ target: { checked } }) => setDarkMode(checked)} />\r\n                </li>\r\n                <li key=\"4\">\r\n                    Voice Speed[1-20]\r\n                    <input onChange={(event) => dispatch(setVoiceSpeedRedux(event.target.value / 10))} className={styles.voiceSpeed} type=\"number\" value={voiceSpeed ? voiceSpeed * 10 : ''} />\r\n                </li>\r\n                <li key=\"5\">\r\n                    <div>Available Voices</div>\r\n                    {voices?.length !== 0 ? (\r\n                        <select\r\n                            onChange={(event) => {\r\n                                dispatch(setVoiceTypeRedux(event?.target?.value))\r\n                                speechSynthesis.cancel()\r\n                            }}\r\n                            className={styles.voices}\r\n                            value={voiceType}\r\n                        >\r\n                            {voices?.map((voice, index) => (\r\n                                <option value={index} key={voice?.name}>\r\n                                    {voice?.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    ) : (\r\n                        <div className={`${styles.textCenter} ${styles.paddingTop}`}>\r\n                            <SmallLoader darkMode />\r\n                        </div>\r\n                    )}\r\n                </li>\r\n                <li key=\"6\">\r\n                    <button onClick={useCallback(() => dispatch(setCurrentModalName('Report')), [])}>Open Report</button>\r\n                </li>\r\n                <li key=\"7\">\r\n                    <LoginRegister {...{ setUserName, userName, openSnackbar, isLoggedIn, setIsLoggedIn, setMarkedQuotes, markedQuotes, password, setPassword, setIsFetching }} />\r\n                    {!isLoggedIn && <div className={styles.backupNote}>You can login to backup your marked quotes in database in case browser data gets deleted.</div>}\r\n                </li>\r\n                <li key=\"8\">\r\n                    <BuildInfo />\r\n                </li>\r\n                {checkQueryParams('dev') && (\r\n                    <li key=\"9\">\r\n                        <button onClick={useCallback(() => dispatch(setCurrentModalName('Logs')), [])}>Open Dev Logs</button>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </OutsideAlerter>\r\n    )\r\n}\r\n\r\nexport default MobileMenu\r\n"],"names":["_ref","darkMode","_jsx","className","concat","styles","children","BuildInfo","React","retryTenTimes","LoginRegister","OutsideAlerter","markedMode","setMarkedMode","visible","toggleVisible","setDarkMode","setSorting","sorting","userName","setUserName","setMarkedQuotes","isLoggedIn","setIsLoggedIn","password","setPassword","setIsFetching","voiceSpeed","useSelector","_ref2","philosophersData","voiceType","_ref3","markedQuotes","_ref4","voices","setVoices","useState","openSnackbar","useSnackbar","dispatch","useDispatch","onClickSortButtonHandler","event","target","id","LATEST","ALPHABETICAL","useEffect","Promise","resolve","synth","window","speechSynthesis","setInterval","getVoices","length","clearInterval","then","callback","useCallback","_jsxs","style","display","type","name","onClick","defaultChecked","htmlFor","checked","onChange","_ref5","_ref6","setVoiceSpeedRedux","value","_event$target","setVoiceTypeRedux","cancel","map","voice","index","SmallLoader","setCurrentModalName","checkQueryParams"],"sourceRoot":""}