{"version":3,"file":"static/js/65.b3218b15.chunk.js","mappings":"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","sources":["webpack://quotes/./src/common/small-loader/small-loader.module.css?1d92","common/small-loader/small-loader.js","webpack://quotes/./src/components/organisms/home/mobile/mobile-menu/mobile-menu.module.css?6dff","components/organisms/home/mobile/mobile-menu/mobile-menu.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"small-loader_loader__ulY5G\",\"spin\":\"small-loader_spin__SOsfI\",\"darkTheme\":\"small-loader_darkTheme__z-xia\"};","import React from 'react'\r\nimport styles from './small-loader.module.css'\r\n\r\nconst SmallLoader = ({ darkMode }) => <span className={`${styles.loader} ${darkMode ? styles.darkTheme : ''}`}> </span>\r\n\r\nexport default SmallLoader\r\n","// extracted by mini-css-extract-plugin\nexport default {\"darkTheme\":\"mobile-menu_darkTheme__2VdHQ\",\"lightTheme\":\"mobile-menu_lightTheme__TnJ3O\",\"slide_menu\":\"mobile-menu_slide_menu__KemSj\",\"voiceSpeed\":\"mobile-menu_voiceSpeed__P8JV8\",\"userName\":\"mobile-menu_userName__hnKtR\",\"userInput\":\"mobile-menu_userInput__EKev-\",\"voices\":\"mobile-menu_voices__VkQFg\",\"backupNote\":\"mobile-menu_backupNote__8b5xv\"};","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport useSnackbar from '../../../../../common/components/snackbar/useSnackbar'\r\nimport ROUTES from '../../../../../common/routes/routes'\r\nimport SmallLoader from '../../../../../common/small-loader/small-loader'\r\nimport { retryTenTimes } from '../../../../../common/utils/apiUtils'\r\nimport { ALPHABETICAL, LATEST } from '../../home-page/constants/constants'\r\nimport { setVoiceSpeedRedux, setVoiceTypeRedux } from '../../home-page/homePageRedux/homePageRedux'\r\nimport styles from './mobile-menu.module.css'\r\nconst BuildInfo = React.lazy(() => retryTenTimes(() => import('../../../tools/build-info/build-info')))\r\nconst LoginRegister = React.lazy(() => retryTenTimes(() => import('../login-register/login-register')))\r\nconst OutsideAlerter = React.lazy(() => retryTenTimes(() => import('../../../../../common/components/outside-alerter/outside-alerter')))\r\n\r\nfunction MobileMenu({ markedMode, setMarkedMode, visible, toggleVisible, darkMode, setDarkMode, setSorting, sorting, userName, setUserName, setMarkedQuotes, isLoggedIn, setIsLoggedIn, password, setPassword, setIsFetching }) {\r\n    const voiceSpeed = useSelector(({ philosophersData: { voiceSpeed } }) => voiceSpeed)\r\n    const voiceType = useSelector(({ philosophersData: { voiceType } }) => voiceType)\r\n    const markedQuotes = useSelector(({ philosophersData: { markedQuotes } }) => markedQuotes)\r\n    const [voices, setVoices] = useState([])\r\n    const [openSnackbar] = useSnackbar()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onClickSortButtonHandler = (event) => {\r\n        const id = event.target.id\r\n\r\n        if (id === LATEST) setSorting(LATEST)\r\n        else setSorting(ALPHABETICAL)\r\n    }\r\n\r\n    useEffect(() => {\r\n        function setSpeech() {\r\n            return new Promise(function (resolve) {\r\n                let synth = window.speechSynthesis\r\n                let id\r\n\r\n                id = setInterval(() => {\r\n                    if (synth.getVoices().length !== 0) {\r\n                        resolve(synth.getVoices())\r\n                        clearInterval(id)\r\n                    }\r\n                }, 10)\r\n            })\r\n        }\r\n\r\n        let s = setSpeech()\r\n        s.then((voices) => setVoices(voices))\r\n    }, [])\r\n\r\n    return (\r\n        <OutsideAlerter callback={useCallback(() => toggleVisible(false), [toggleVisible])}>\r\n            <ul className={`${styles.slide_menu} ${darkMode ? styles.darkTheme : styles.lightTheme}`} id=\"slide_menu\" style={{ display: visible ? 'block' : 'none' }}>\r\n                <li key=\"1\">\r\n                    Sort philosophers\r\n                    <div>\r\n                        <input type=\"radio\" id={LATEST} name=\"sortType\" onClick={onClickSortButtonHandler} defaultChecked={sorting === LATEST} />\r\n                        <label htmlFor={LATEST}>Latest</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"radio\" id={ALPHABETICAL} name=\"sortType\" onClick={onClickSortButtonHandler} defaultChecked={sorting === ALPHABETICAL} />\r\n                        <label htmlFor={ALPHABETICAL}>Alphabetical</label>\r\n                    </div>\r\n                </li>\r\n                <li key=\"2\">\r\n                    Marked Mode\r\n                    <input type=\"checkbox\" checked={markedMode} onChange={({ target: { checked } }) => setMarkedMode(checked)} />\r\n                </li>\r\n                <li key=\"3\">\r\n                    Dark Mode\r\n                    <input type=\"checkbox\" checked={darkMode} onChange={({ target: { checked } }) => setDarkMode(checked)} />\r\n                </li>\r\n                <li key=\"4\">\r\n                    Voice Speed[1-20]\r\n                    <input onChange={(event) => dispatch(setVoiceSpeedRedux(event.target.value / 10))} className={styles.voiceSpeed} type=\"number\" value={voiceSpeed ? voiceSpeed * 10 : ''} />\r\n                </li>\r\n                <li key=\"5\">\r\n                    <div>Available Voices</div>\r\n                    {voices?.length !== 0 ? (\r\n                        <select\r\n                            onChange={(event) => {\r\n                                dispatch(setVoiceTypeRedux(event?.target?.value))\r\n                                speechSynthesis.cancel()\r\n                            }}\r\n                            className={styles.voices}\r\n                            value={voiceType}\r\n                        >\r\n                            {voices?.map((voice, index) => (\r\n                                <option value={index} key={voice?.name}>\r\n                                    {voice?.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    ) : (\r\n                        <SmallLoader />\r\n                    )}\r\n                </li>\r\n                <li key=\"6\">\r\n                    <Link to={ROUTES.report.route} style={{ textDecoration: 'none', color: '#000' }}>\r\n                        <button>Open Report</button>\r\n                    </Link>\r\n                </li>\r\n                <li key=\"7\">\r\n                    <LoginRegister {...{ setUserName, userName, openSnackbar, isLoggedIn, setIsLoggedIn, setMarkedQuotes, markedQuotes, password, setPassword, setIsFetching }} />\r\n                    {!isLoggedIn && <div className={styles.backupNote}>You can login to backup your marked quotes in database in case browser data gets deleted.</div>}\r\n                </li>\r\n                <li key=\"8\">\r\n                    <BuildInfo />\r\n                </li>\r\n            </ul>\r\n        </OutsideAlerter>\r\n    )\r\n}\r\n\r\nexport default MobileMenu\r\n"],"names":["_ref","darkMode","_jsx","className","concat","styles","children","BuildInfo","React","retryTenTimes","LoginRegister","OutsideAlerter","markedMode","setMarkedMode","visible","toggleVisible","setDarkMode","setSorting","sorting","userName","setUserName","setMarkedQuotes","isLoggedIn","setIsLoggedIn","password","setPassword","setIsFetching","voiceSpeed","useSelector","_ref2","philosophersData","voiceType","_ref3","markedQuotes","_ref4","_useState","useState","_useState2","_slicedToArray","voices","setVoices","_useSnackbar","useSnackbar","openSnackbar","dispatch","useDispatch","onClickSortButtonHandler","event","target","id","LATEST","ALPHABETICAL","useEffect","Promise","resolve","synth","window","speechSynthesis","setInterval","getVoices","length","clearInterval","then","callback","useCallback","_jsxs","style","display","type","name","onClick","defaultChecked","htmlFor","checked","onChange","_ref5","_ref6","setVoiceSpeedRedux","value","_event$target","setVoiceTypeRedux","cancel","map","voice","index","SmallLoader","Link","to","ROUTES","report","route","textDecoration","color"],"sourceRoot":""}