{"version":3,"file":"static/js/157.847bf033.chunk.js","mappings":"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","sources":["common/utils/ruleEngine.js","webpack://quotes/./src/components/organisms/home/row/styles/row.module.css?d653","components/organisms/home/row/utils/style-utils.js","components/organisms/home/row/row.js","common/utils/debounce.js","components/organisms/analysis/no-search-results/no-search-results.jsx","components/organisms/home/quotes-list/utils/listUtils.js","components/organisms/home/quotes-list/utils/ruleEngine/rules.js","components/organisms/home/quotes-list/quotes-list.jsx","components/organisms/home/row/utils/utils.js","common/utils/stringUtils.js"],"sourcesContent":["export const ruleEngine = {\r\n    makeDecision: function (rules, { value, params }) {\r\n        for (let i = 0; i <= rules.length; i++) {\r\n            const returnValue = rules[i](value, params)\r\n            if (returnValue) return returnValue\r\n        }\r\n    },\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"actionItems\":\"row_actionItems__Y-npM\"};","export function evaluateClassNames(index) {\r\n    return (index % 2 ? \"ListItemOdd\" : \"ListItemEven\")\r\n}","import React, { Suspense, useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSnackbar } from 'react-simple-snackbar'\r\nimport ROUTES from '../../../../common/routes/routes'\r\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\r\nimport { isUndefined } from '../../../../common/utils/commonUtils'\r\nimport { debounce } from '../../../../common/utils/debounce'\r\nimport styles from './styles/row.module.css'\r\nimport { evaluateClassNames } from './utils/style-utils'\r\nimport { rowClickHandler } from './utils/utils'\r\nconst MarkAsRead = React.lazy(() => retryTenTimes(() => import('../../tools/mark-as-read/mark-as-read')))\r\nconst Translate = React.lazy(() => retryTenTimes(() => import('../../tools/translate/translate')))\r\nconst Audio = React.lazy(() => retryTenTimes(() => import('../../tools/audio/audio')))\r\n\r\nconst Row = ({ data: { searchText, start, end, philosopherFullName, philosopherFullName_i10n, markedMode, currentQuote, currentPhilosopher, markedQuotes, setMarkedQuotes, currentData, setCurrentData, index, scrollPosition, setScrollPosition, listRef, darkMode, scheduledPosts, setScheduledQuotes }, style }) => {\r\n    const quoteRef = useRef()\r\n    const [openSnackbar] = useSnackbar()\r\n    const { quote: quotationText, id: quotationId } = currentQuote\r\n    const propsToSend = { openSnackbar, searchText, start, end, philosopherFullName, index, philosopherFullName_i10n, darkMode }\r\n    const [localTranslateKey, setLocalTranslateKey] = useState(false)\r\n    const debouncedHandler = debounce(() => setScrollPosition(parseInt(quotationId)), 1000)\r\n\r\n    if (!isUndefined(currentQuote))\r\n        return (\r\n            <div key={index} className={evaluateClassNames(index)} style={style} onClick={debouncedHandler}>\r\n                <span style={{ position: 'absolute', top: '10rem' }} className=\"row\">\r\n                    <span ref={quoteRef} onClick={rowClickHandler.bind(this, { quote: quotationText, ...propsToSend })}>\r\n                        {`${index + 1}. \"${quotationText}\" â€• ${philosopherFullName}`}\r\n                    </span>\r\n                </span>\r\n                <div style={{ position: 'absolute', top: '26rem' }} className=\"row\">\r\n                    {localTranslateKey ? <Translate inputText={quotationText} {...propsToSend} /> : null}\r\n                </div>\r\n\r\n                <div className={styles.actionItems} style={{ position: 'absolute', bottom: '5rem' }}>\r\n                    <button>\r\n                        <Link to={ROUTES.image.route} state={{ quotationText, philosopherFullName, signature: 'Instagram: @philosophizetruth' }} style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000' }}>\r\n                            Download Image\r\n                        </Link>\r\n                    </button>\r\n                    <Audio index={index} currentData={currentData} scrollPosition={scrollPosition} setScrollPosition={setScrollPosition} listRef={listRef} />\r\n                    {markedMode && (\r\n                        <Suspense fallback={''}>\r\n                            <MarkAsRead index={quotationId} currentPhilosopher={currentPhilosopher} markedQuotes={markedQuotes} setMarkedQuotes={setMarkedQuotes} currentData={currentData} setCurrentData={setCurrentData} setLocalTranslateKey={setLocalTranslateKey} />\r\n                        </Suspense>\r\n                    )}\r\n                    <button onClick={() => setLocalTranslateKey(true)}>Translate</button>\r\n                    <button>\r\n                        <Link to={ROUTES.image.route} state={{ quotationText, philosopherFullName, signature: 'Instagram: @philosophizetruth', share: true }} style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000' }}>\r\n                            Share\r\n                        </Link>\r\n                    </button>\r\n                    {/* <PushToSocialMedia index={quotationId} currentPhilosopher={currentPhilosopher} scheduledPosts={scheduledPosts} setScheduledQuotes={setScheduledQuotes} markedQuotes={markedQuotes} setMarkedQuotes={setMarkedQuotes} currentData={currentData} setCurrentData={setCurrentData} setLocalTranslateKey={setLocalTranslateKey} /> */}\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Row\r\n","export function debounce(func, delay) {\r\n    let timer\r\n    return function () {\r\n        const context = this\r\n        const args = arguments\r\n        clearTimeout(timer)\r\n        timer = setTimeout(function () {\r\n            func.apply(context, args)\r\n        }, delay)\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst NoSearchResults = () => (\r\n    <>\r\n        <h4>No search results found!</h4>\r\n\r\n        <div>Guidlines:</div>\r\n\r\n        <div>1. Please check spelling of your search text.</div>\r\n\r\n        <div> 2. Try searching a smaller and a more generic word.</div>\r\n    </>\r\n)\r\nexport default NoSearchResults\r\n","import React from 'react'\r\nimport NoSearchResults from '../../../analysis/no-search-results/no-search-results'\r\n\r\nexport function NoRowsRenderer() {\r\n    return <NoSearchResults />\r\n}\r\n","export const rules = [\r\n    function (value, { start }) {\r\n        if (start <= 20) return 500\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 20 && start <= 40) return 600\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 40 && start <= 60) return 1000\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 60 && start <= 100) return 1400\r\n    },\r\n    function (value, { start }) {\r\n        if (start > 100) return 2000\r\n    },\r\n    function () {\r\n        return 800\r\n    },\r\n]\r\n","import React, { useEffect } from 'react'\r\nimport List from 'react-virtualized/dist/commonjs/List'\r\nimport { ruleEngine } from '../../../../common/utils/ruleEngine'\r\nimport { scrollToQuoteId } from '../../../../common/utils/utils'\r\nimport Row from '../row/row'\r\nimport './quotes-list.css'\r\nimport { NoRowsRenderer } from './utils/listUtils'\r\nimport { rules } from './utils/ruleEngine/rules'\r\nimport { getPhilosopherFullName, getPhilosopherFullName_i10n } from './utils/utils'\r\n\r\nfunction QuotesList({ listRef, width, height, searchText, start, end, markedMode, currentData, setCurrentData, options, currentPhilosopher, markedQuotes, setMarkedQuotes, scrollPosition, setScrollPosition, darkMode, scheduledPosts, setScheduledQuotes }) {\r\n    const philosopherFullName = getPhilosopherFullName({ currentPhilosopher, options })\r\n    const philosopherFullName_i10n = getPhilosopherFullName_i10n({ currentPhilosopher, options })\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => scrollToQuoteId(listRef, scrollPosition, currentData, currentPhilosopher), 1500)\r\n    }, [])\r\n\r\n    function rowRenderer({ index, ...others }) {\r\n        return <Row data={{ searchText, start, end, philosopherFullName, philosopherFullName_i10n, markedMode, currentData, setCurrentData, currentQuote: currentData[index], index, currentPhilosopher, markedQuotes, setMarkedQuotes, scrollPosition, setScrollPosition, darkMode, listRef, scheduledPosts, setScheduledQuotes }} {...others} />\r\n    }\r\n\r\n    return <List className=\"List\" height={height} rowCount={currentData.length} rowHeight={ruleEngine.makeDecision(rules, { params: { start } })} width={width} ref={listRef} rowRenderer={rowRenderer} noRowsRenderer={NoRowsRenderer} style={{ padding: '1rem' }} />\r\n}\r\n\r\nexport default QuotesList\r\n","import copy from 'copy-to-clipboard'\r\nimport { insert, setCharAt } from '../../../../../common/utils/stringUtils'\r\n\r\nexport function copyQuoteText(quoteText, philosopherFullName) {\r\n    if (philosopherFullName.toLowerCase().trim() === 'all') {\r\n        let splittingIndex = quoteText.lastIndexOf('â€• ')\r\n        let updatedQuoteText = setCharAt(quoteText, splittingIndex - 1, '')\r\n        updatedQuoteText = '\"' + updatedQuoteText\r\n        updatedQuoteText = insert(updatedQuoteText, splittingIndex, '\"\\n\\n')\r\n        copy(updatedQuoteText)\r\n    } else copy(`\"${quoteText}\"\\n\\n${philosopherFullName}`)\r\n}\r\n\r\nexport function rowClickHandler({ openSnackbar, philosopherFullName, quote, index }) {\r\n    copyQuoteText(quote, philosopherFullName)\r\n    openSnackbar('Copied!', 1000)\r\n}\r\n\r\nexport function devModeSignature() {\r\n    return isAppInDevMode() ? <>dev-mode</> : null\r\n}\r\n\r\nexport function isAppInDevMode() {\r\n    return process.env.NODE_ENV !== 'production'\r\n}\r\n\r\nexport function rowClickHandlerFoBothQuotes({ openSnackbar, quote: { hindi, english }, philosopherNames: { englishFullname, hindiFullname }, index }, event) {\r\n    event.stopPropagation()\r\n    copyBothQuotesText({ hindiQuote: hindi, englishQuote: english }, { englishFullname, hindiFullname })\r\n    openSnackbar('Copied!', 1000)\r\n}\r\n\r\nexport const copyBothQuotesText = ({ englishQuote, hindiQuote }, { englishFullname, hindiFullname }) => copy(`\"${hindiQuote}\"\\n\\nâ€• ${hindiFullname}\\n\\n\\n\"${englishQuote}\"\\n\\nâ€• ${englishFullname}`)\r\n","export function insert(str, index, value) {\r\n    return str.substr(0, index) + value + str.substr(index);\r\n}\r\n\r\nexport function setCharAt(str, index, chr) {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n}"],"names":["ruleEngine","makeDecision","rules","_ref","value","params","i","length","returnValue","evaluateClassNames","index","MarkAsRead","React","retryTenTimes","Translate","Audio","_ref$data","data","searchText","start","end","philosopherFullName","philosopherFullName_i10n","markedMode","currentQuote","currentPhilosopher","markedQuotes","setMarkedQuotes","currentData","setCurrentData","scrollPosition","setScrollPosition","listRef","darkMode","style","scheduledPosts","setScheduledQuotes","quoteRef","useRef","_useSnackbar","useSnackbar","openSnackbar","_slicedToArray","quotationText","quote","quotationId","id","propsToSend","_useState","useState","_useState2","localTranslateKey","setLocalTranslateKey","debouncedHandler","func","delay","timer","context","this","args","arguments","clearTimeout","setTimeout","apply","debounce","parseInt","isUndefined","_jsxs","className","onClick","children","_jsx","position","top","ref","rowClickHandler","bind","_objectSpread","concat","inputText","styles","bottom","Link","to","ROUTES","image","route","state","signature","textDecoration","color","Suspense","fallback","share","_Fragment","NoRowsRenderer","NoSearchResults","_ref2","_ref3","_ref4","_ref5","width","height","options","getPhilosopherFullName","getPhilosopherFullName_i10n","useEffect","scrollToQuoteId","List","rowCount","rowHeight","rowRenderer","others","_objectWithoutProperties","_excluded","Row","noRowsRenderer","padding","quoteText","toLowerCase","trim","splittingIndex","lastIndexOf","updatedQuoteText","chr","str","substring","substr","insert","copy","copyQuoteText"],"sourceRoot":""}