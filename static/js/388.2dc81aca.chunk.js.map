{"version":3,"file":"static/js/388.2dc81aca.chunk.js","mappings":"sMAEO,SAAeA,EAAIC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAiBzB,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAjBM,SAAAC,EAAoBC,EAAOC,EAAaC,EAAYC,EAAWC,EAASC,EAAgBC,GAAiB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAd,EAAAA,EAAAA,KAAAe,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASxD,GAR9CR,EAAQS,OAAOC,gBACjBT,EAAaD,EAAMW,SAEjBT,EAASF,EAAMY,YAER,WAAO,CACpBC,GAEIV,EAAI,IAAIW,SAAQ,SAACC,GAAO,OAAeA,CAAO,IAE7Cd,EAAW,CAADK,EAAAE,KAAA,SACFJ,EAAIX,EAAM,KAAD,OAAEW,EAAIV,EAAYsB,QAAM,CAAAV,EAAAE,KAAA,SAEO,OAD7CT,EAAkBK,IAClBa,EAAAA,EAAAA,IAAqBpB,EAASO,EAAGV,GAAYY,EAAAE,KAAA,GACvCM,QAAQI,KAAK,CAACf,EAAGgB,EAAazB,EAAYU,GAAU,MAAGT,EAAYC,EAAWM,KAAS,QAHrDE,IAAGE,EAAAE,KAAA,iCAAAF,EAAAc,OAAA,GAAA5B,EAAA,MAKtDL,MAAA,KAAAC,UAAA,CAED,SAAS+B,EAAaE,EAAS1B,EAAYC,EAAWM,GAClD,IAAIoB,EAAQ,IAAIC,yBAAyBF,GAKzC,OAJAC,EAAME,KAAO7B,EACb2B,EAAMG,MAAQvB,EAAON,GACrBa,OAAOC,gBAAgBgB,MAAMJ,GAEtB,IAAIR,SAAQ,SAACC,EAASY,GAAM,OAAML,EAAMM,MAAQb,CAAO,GAClE,C,aCnBA,EALc,SAAHc,GAAwF,IAAlFpC,EAAKoC,EAALpC,MAAOC,EAAWmC,EAAXnC,YAAaI,EAAc+B,EAAd/B,eAAgBC,EAAiB8B,EAAjB9B,kBAAmBF,EAAOgC,EAAPhC,QAASF,EAAUkC,EAAVlC,WACvEC,GAAYkC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,iBAAiBpC,SAAS,IAEzE,OAAOqC,EAAAA,EAAAA,MAAA,UAAQC,QAASxB,gBAAgBC,SAAW,kBAAMD,gBAAgBG,QAAQ,EAAGnC,EAAKyD,K,UAAW1C,EAAOC,EAAaC,EAAYC,EAAWC,EAASC,EAAgBC,GAAmBqC,SAAA,CAAE1B,gBAAgBC,SAAW,OAAS,OAAO,WAC5O,C","sources":["components/organisms/tools/audio/utils/speechUtils.js","components/organisms/tools/audio/audio.jsx"],"sourcesContent":["import { scrollToMemorizedRow } from '../../../../../common/utils/utils'\r\n\r\nexport async function play(index, currentData, voiceSpeed, voiceType, listRef, scrollPosition, setScrollPosition) {\r\n    const synth = window.speechSynthesis,\r\n        isSpeaking = synth.speaking\r\n\r\n    const voices = synth.getVoices()\r\n\r\n    let cancel = () => {}\r\n    cancel()\r\n\r\n    let p = new Promise((resolve) => (cancel = resolve))\r\n\r\n    if (!isSpeaking)\r\n        for (let i = index; i < currentData.length; i++) {\r\n            setScrollPosition(i)\r\n            scrollToMemorizedRow(listRef, i, currentData)\r\n            await Promise.race([p, getNextAudio(currentData[i]['quote'], voiceSpeed, voiceType, voices)])\r\n        }\r\n}\r\n\r\nfunction getNextAudio(message, voiceSpeed, voiceType, voices) {\r\n    let audio = new SpeechSynthesisUtterance(message)\r\n    audio.rate = voiceSpeed\r\n    audio.voice = voices[voiceType]\r\n    window.speechSynthesis.speak(audio)\r\n\r\n    return new Promise((resolve, reject) => (audio.onend = resolve))\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { play } from './utils/speechUtils'\r\n\r\nconst Audio = ({ index, currentData, scrollPosition, setScrollPosition, listRef, voiceSpeed }) => {\r\n    const voiceType = useSelector((state) => state.philosophersData.voiceType)\r\n\r\n    return <button onClick={speechSynthesis.speaking ? () => speechSynthesis.cancel() : play.bind(this, index, currentData, voiceSpeed, voiceType, listRef, scrollPosition, setScrollPosition)}>{speechSynthesis.speaking ? 'Stop' : 'Play'} Audio</button>\r\n}\r\nexport default Audio\r\n"],"names":["play","_x","_x2","_x3","_x4","_x5","_x6","_x7","_play","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","index","currentData","voiceSpeed","voiceType","listRef","scrollPosition","setScrollPosition","synth","isSpeaking","voices","p","i","wrap","_context","prev","next","window","speechSynthesis","speaking","getVoices","cancel","Promise","resolve","length","scrollToMemorizedRow","race","getNextAudio","stop","message","audio","SpeechSynthesisUtterance","rate","voice","speak","reject","onend","_ref","useSelector","state","philosophersData","_jsxs","onClick","bind","children"],"sourceRoot":""}