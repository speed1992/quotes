{"version":3,"file":"static/js/710.f08e4932.chunk.js","mappings":"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","sources":["common/utils/debounce.js","webpack://quotes/./src/components/organisms/home/row/styles/row.module.css?d653","components/organisms/home/row/utils/style-utils.js","components/organisms/home/row/row.js","components/organisms/home/row/utils/utils.js","common/utils/stringUtils.js","../node_modules/copy-to-clipboard/index.js","../node_modules/toggle-selection/index.js"],"sourcesContent":["const nativeMax = Math.max\r\nconst nativeMin = Math.min\r\nvar FUNC_ERROR_TEXT = 'Expected a function'\r\nexport function debounce(func, wait, options) {\r\n    let lastArgs,\r\n        lastThis,\r\n        maxWait,\r\n        result,\r\n        timerId,\r\n        lastCallTime,\r\n        lastInvokeTime = 0,\r\n        leading = false,\r\n        maxing = false,\r\n        trailing = true\r\n    if (typeof func !== 'function') {\r\n        throw new TypeError(FUNC_ERROR_TEXT)\r\n    }\r\n    wait = Number(wait) || 0\r\n    if (typeof options === 'object') {\r\n        leading = !!options.leading\r\n        maxing = 'maxWait' in options\r\n        maxWait = maxing ? nativeMax(Number(options.maxWait) || 0, wait) : maxWait\r\n        trailing = 'trailing' in options ? !!options.trailing : trailing\r\n    }\r\n\r\n    function invokeFunc(time) {\r\n        let args = lastArgs,\r\n            thisArg = lastThis\r\n\r\n        lastArgs = lastThis = undefined\r\n        lastInvokeTime = time\r\n        result = func.apply(thisArg, args)\r\n        return result\r\n    }\r\n\r\n    function leadingEdge(time) {\r\n        lastInvokeTime = time\r\n\r\n        timerId = setTimeout(timerExpired, wait)\r\n\r\n        return leading ? invokeFunc(time) : result\r\n    }\r\n\r\n    function remainingWait(time) {\r\n        let timeSinceLastCall = time - lastCallTime,\r\n            timeSinceLastInvoke = time - lastInvokeTime,\r\n            result = wait - timeSinceLastCall\r\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result\r\n    }\r\n\r\n    function shouldInvoke(time) {\r\n        let timeSinceLastCall = time - lastCallTime,\r\n            timeSinceLastInvoke = time - lastInvokeTime\r\n\r\n        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || (maxing && timeSinceLastInvoke >= maxWait)\r\n    }\r\n\r\n    function timerExpired() {\r\n        const time = Date.now()\r\n        if (shouldInvoke(time)) {\r\n            return trailingEdge(time)\r\n        }\r\n\r\n        timerId = setTimeout(timerExpired, remainingWait(time))\r\n    }\r\n\r\n    function trailingEdge(time) {\r\n        timerId = undefined\r\n\r\n        if (trailing && lastArgs) {\r\n            return invokeFunc(time)\r\n        }\r\n        lastArgs = lastThis = undefined\r\n        return result\r\n    }\r\n\r\n    function cancel() {\r\n        if (timerId !== undefined) {\r\n            clearTimeout(timerId)\r\n        }\r\n        lastInvokeTime = 0\r\n        lastArgs = lastCallTime = lastThis = timerId = undefined\r\n    }\r\n\r\n    function flush() {\r\n        return timerId === undefined ? result : trailingEdge(Date.now())\r\n    }\r\n\r\n    function debounced() {\r\n        let time = Date.now(),\r\n            isInvoking = shouldInvoke(time)\r\n        lastArgs = arguments\r\n        lastThis = this\r\n        lastCallTime = time\r\n\r\n        if (isInvoking) {\r\n            if (timerId === undefined) {\r\n                return leadingEdge(lastCallTime)\r\n            }\r\n            if (maxing) {\r\n                timerId = setTimeout(timerExpired, wait)\r\n                return invokeFunc(lastCallTime)\r\n            }\r\n        }\r\n        if (timerId === undefined) {\r\n            timerId = setTimeout(timerExpired, wait)\r\n        }\r\n        return result\r\n    }\r\n    debounced.cancel = cancel\r\n    debounced.flush = flush\r\n    return debounced\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"actionItems\":\"row_actionItems__Y-npM\"};","export function evaluateClassNames(index) {\r\n    return (index % 2 ? \"ListItemOdd\" : \"ListItemEven\")\r\n}","import React, { Suspense, useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSnackbar } from 'react-simple-snackbar'\r\nimport ROUTES from '../../../../common/routes/routes'\r\nimport { retryTenTimes } from '../../../../common/utils/apiUtils'\r\nimport { isUndefined } from '../../../../common/utils/commonUtils'\r\nimport { debounce } from '../../../../common/utils/debounce'\r\nimport styles from './styles/row.module.css'\r\nimport { evaluateClassNames } from './utils/style-utils'\r\nimport { rowClickHandler } from './utils/utils'\r\nconst MarkAsRead = React.lazy(() => retryTenTimes(() => import('../../tools/mark-as-read/mark-as-read')))\r\nconst PushToSocialMedia = React.lazy(() => retryTenTimes(() => import('../../tools/push-to-social-media/push-to-social-media')))\r\nconst Translate = React.lazy(() => retryTenTimes(() => import('../../tools/translate/translate')))\r\nconst Audio = React.lazy(() => retryTenTimes(() => import('../../tools/audio/audio')))\r\n\r\nconst Row = ({ data: { searchText, start, end, philosopherFullName, philosopherFullName_i10n, markedMode, currentQuote, currentPhilosopher, markedQuotes, setMarkedQuotes, currentData, setCurrentData, index, scrollPosition, setScrollPosition, listRef, darkMode, scheduledPosts, setScheduledQuotes }, style }) => {\r\n    const quoteRef = useRef()\r\n    const [openSnackbar] = useSnackbar()\r\n    const { quote: quotationText, id: quotationId } = currentQuote\r\n    const propsToSend = { openSnackbar, searchText, start, end, philosopherFullName, index, philosopherFullName_i10n, darkMode }\r\n    const [localTranslateKey, setLocalTranslateKey] = useState(false)\r\n    const debouncedHandler = debounce(() => setScrollPosition(index), 500)\r\n\r\n    if (!isUndefined(currentQuote))\r\n        return (\r\n            <div key={index} className={evaluateClassNames(index)} style={style} onMouseMove={debouncedHandler} onTouchStart={debouncedHandler}>\r\n                <span style={{ position: 'absolute', top: '10rem' }} className=\"row\">\r\n                    <span ref={quoteRef} onClick={rowClickHandler.bind(this, { quote: quotationText, ...propsToSend })}>\r\n                        {`${index + 1}. \"${quotationText}\" ― ${philosopherFullName}`}\r\n                    </span>\r\n                </span>\r\n                <div style={{ position: 'absolute', top: '26rem' }} className=\"row\">\r\n                    {localTranslateKey ? <Translate inputText={quotationText} {...propsToSend} /> : null}\r\n                </div>\r\n\r\n                <div className={styles.actionItems} style={{ position: 'absolute', bottom: '5rem' }}>\r\n                    <button>\r\n                        <Link to={ROUTES.image.route} state={{ quotationText, philosopherFullName, signature: 'Instagram: @philosophizetruth' }} style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000' }}>\r\n                            Download Image\r\n                        </Link>\r\n                    </button>\r\n                    <Audio index={index} currentData={currentData} scrollPosition={scrollPosition} setScrollPosition={setScrollPosition} listRef={listRef} />\r\n                    {markedMode && (\r\n                        <Suspense fallback={''}>\r\n                            <MarkAsRead index={quotationId} currentPhilosopher={currentPhilosopher} markedQuotes={markedQuotes} setMarkedQuotes={setMarkedQuotes} currentData={currentData} setCurrentData={setCurrentData} setLocalTranslateKey={setLocalTranslateKey} />\r\n                        </Suspense>\r\n                    )}\r\n                    <button onClick={() => setLocalTranslateKey(true)}>Translate</button>\r\n                    <button>\r\n                        <Link to={ROUTES.image.route} state={{ quotationText, philosopherFullName, signature: 'Instagram: @philosophizetruth', share: true }} style={{ textDecoration: 'none', color: darkMode ? '#fff' : '#000' }}>\r\n                            Share\r\n                        </Link>\r\n                    </button>\r\n                    <PushToSocialMedia index={quotationId} currentPhilosopher={currentPhilosopher} scheduledPosts={scheduledPosts} setScheduledQuotes={setScheduledQuotes} markedQuotes={markedQuotes} setMarkedQuotes={setMarkedQuotes} currentData={currentData} setCurrentData={setCurrentData} setLocalTranslateKey={setLocalTranslateKey} />\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Row\r\n","import copy from 'copy-to-clipboard'\r\nimport { insert, setCharAt } from '../../../../../common/utils/stringUtils'\r\n\r\nexport function copyQuoteText(quoteText, philosopherFullName) {\r\n    if (philosopherFullName.toLowerCase().trim() === 'all') {\r\n        let splittingIndex = quoteText.lastIndexOf('― ')\r\n        let updatedQuoteText = setCharAt(quoteText, splittingIndex - 1, '')\r\n        updatedQuoteText = '\"' + updatedQuoteText\r\n        updatedQuoteText = insert(updatedQuoteText, splittingIndex, '\"\\n\\n')\r\n        copy(updatedQuoteText)\r\n    } else copy(`\"${quoteText}\"\\n\\n${philosopherFullName}`)\r\n}\r\n\r\nexport function rowClickHandler({ openSnackbar, philosopherFullName, quote, index }) {\r\n    copyQuoteText(quote, philosopherFullName)\r\n    openSnackbar('Copied!', 1000)\r\n}\r\n\r\nexport function devModeSignature() {\r\n    return isAppInDevMode() ? <>dev-mode</> : null\r\n}\r\n\r\nexport function isAppInDevMode() {\r\n    return process.env.NODE_ENV !== 'production'\r\n}\r\n\r\nexport function rowClickHandlerFoBothQuotes({ openSnackbar, quote: { hindi, english }, philosopherNames: { englishFullname, hindiFullname }, index }, event) {\r\n    event.stopPropagation()\r\n    copyBothQuotesText({ hindiQuote: hindi, englishQuote: english }, { englishFullname, hindiFullname })\r\n    openSnackbar('Copied!', 1000)\r\n}\r\n\r\nexport const copyBothQuotesText = ({ englishQuote, hindiQuote }, { englishFullname, hindiFullname }) => copy(`\"${hindiQuote}\"\\n\\n― ${hindiFullname}\\n\\n\\n\"${englishQuote}\"\\n\\n― ${englishFullname}`)\r\n","export function insert(str, index, value) {\r\n    return str.substr(0, index) + value + str.substr(index);\r\n}\r\n\r\nexport function setCharAt(str, index, chr) {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n}","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n"],"names":["nativeMax","Math","max","nativeMin","min","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","Date","now","trailingEdge","remainingWait","debounced","isInvoking","arguments","this","Number","cancel","clearTimeout","flush","evaluateClassNames","index","MarkAsRead","React","retryTenTimes","PushToSocialMedia","Translate","Audio","data","searchText","start","end","philosopherFullName","philosopherFullName_i10n","markedMode","currentQuote","currentPhilosopher","markedQuotes","setMarkedQuotes","currentData","setCurrentData","scrollPosition","setScrollPosition","listRef","darkMode","scheduledPosts","setScheduledQuotes","style","quoteRef","useRef","useSnackbar","openSnackbar","quotationText","quote","quotationId","id","propsToSend","useState","localTranslateKey","setLocalTranslateKey","debouncedHandler","isUndefined","className","onMouseMove","onTouchStart","position","top","ref","onClick","rowClickHandler","inputText","styles","bottom","to","ROUTES","state","signature","textDecoration","color","Suspense","fallback","share","quoteText","toLowerCase","trim","splittingIndex","lastIndexOf","updatedQuoteText","chr","str","length","substring","value","substr","insert","copy","copyQuoteText","deselectCurrent","require","clipboardToIE11Formatting","module","exports","text","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","ariaHidden","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","error","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","type","forEach","focus"],"sourceRoot":""}