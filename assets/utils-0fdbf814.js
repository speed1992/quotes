import{w as worker}from"./worker-c74eba45.js";const scrollToFirstRow=e=>{e.current&&e.current.scrollToRow(0)},scrollToMemorizedRow=(e,r,o)=>{(o==null?void 0:o.length)>0&&e.current&&(r!==void 0&&r!=="undefined"&&r&&r>0?e.current.scrollToRow(r):scrollToFirstRow(e))},scrollToQuoteId=(e,r,o,i)=>{const s=r[i];if((o==null?void 0:o.length)>0&&e.current)if(s!==void 0&&s!=="undefined"&&s&&s>0){const n=o.findIndex(({id:t})=>t===s);n>-1&&e.current.scrollToRow(n)}else scrollToFirstRow(e)},search=({searchText,currentData,setCurrentData})=>new Promise(resolve=>{currentData!==void 0&&(worker.postMessage({currentData,searchText,filterName:"searchTermFilter"}),worker.onmessage=event=>{const filteredQuotesFromWorker=JSON.parse(eval(`(${JSON.stringify(event.data)})`));resolve(filteredQuotesFromWorker)})}),isMobile=()=>window.innerWidth<=600,isDesktop=()=>window.innerWidth>=600;export{isMobile as a,scrollToQuoteId as b,scrollToMemorizedRow as c,isDesktop as i,search as s};
